	@ stm32f030f4p6 asm
	@fft 8ç‚¹
	 .thumb                 
         .syntax unified
.section .data	
       	.equ STACKINIT,                 0x20001000
shuru:	.int 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
	.int 16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
hudie:	.int 0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120
	.int 4,68,36,100,20,84,52,116,12,76,44,108,28,92,60,124
	.section .text
vectors:        
        .word STACKINIT         
        .word _start + 1        
        .word _nmi_handler + 1  
        .word _hard_fault  + 1  
        .word 0 
        .word 0    
        .word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word _svc_handler +1
	.word 0 
	.word 0
	.word _pendsv_handler +1
	
_start:

_fftjisuan:
_fft1:	
	ldr r0, = shuru
	ldr r1, = 0x20000000
	movs r2, # 16
	ldr r3, = hudie
_fft1xunhuan:
	ldm r3!, {r6,r7}
	ldr r6, [r0, r6]
	ldr r7, [r0, r7]
	adds r4, r6, r7
	subs r5, r6, r7
	stmia r1!, {r4,r5}
	ldmia r3!, {r6, r7}
	ldr r6, [r0, r6]
	ldr r7, [r0, r7]
	adds r4, r6, r7
	subs r5, r6, r7
	stmia r1!, {r4, r5}
	
	subs r2, r2, # 2
	bne _fft1xunhuan
_fft2:
	ldr r0, = 0x20000000
	mov r1, r0
	adds r1, r1, # 0x20
	mov r8, r1
	b _fft2xunhuan
_fft2xunhuan:
	bkpt
	ldr r1, [r0]                @0
	ldr r2, [r0, # 0x20]	    @4
	adds r4, r1, r2
	movs r5, # 0
	subs r6, r1, r2
	movs r7, # 0
	push {r4-r7}
	ldr r1, [r0, # 0x04]	    @2
	ldr r2, [r0, # 0x24]	    @6
	movs r3, # 0
	subs r3, r3, # 1
	muls r2, r2, r3
	mov r4, r1
	movs r5, r2
	mov r6, r4
	subs r7, r1, r2
	push {r4-r7}
	bkpt
	adds r0, r0, # 0x04
	cmp r0, r8
	bne _fft2xunhuan
	cmp r9, # 1
	adds r0, r0, # 0x40
	mov r1, # 1
	mov r9, r1
	b _fft2xunhuan
		
	

	

_tingting:
	b _tingting
		
_nmi_handler:
	bx lr
_hard_fault:
	bx lr
_svc_handler:
	bx lr
_pendsv_handler:
	bx lr
