	@ stm32f030f4p6 asm
	@fft 8点
	 .thumb                 
         .syntax unified
.section .data	
       	.equ STACKINIT,                 0x20001000
shurushi:	  .int 3535,3535,6464,10607,3535,-10607,-13535,-3535
shuruxu:	.int 0,0,0,0,0,0,0,0
.section .text
vectors:        
        .word STACKINIT         
        .word _start + 1        
        .word _nmi_handler + 1  
        .word _hard_fault  + 1  
        .word 0 
        .word 0    
        .word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word _svc_handler +1
	.word 0 
	.word 0
	.word _pendsv_handler +1
	
_start:
shizhong:
	ldr r0, = 0x40021000 @ rcc
	ldr r2, = 0x40022000   @FLASH访问控制
	movs r1, # 0x32
	str r1, [r2]           @FLASH缓冲 缓冲开启
	ldr r0, = 0x40021000 @ rcc
	ldr r1, = 0x100002
	str r1, [r0, # 0x04]
	ldr r1, = 0x1000001
	str r1, [r0]
dengrc:
	ldr r1, [r0]
	lsls r1, # 30
	bpl dengrc
dengpll:
	ldr r1, [r0]
	lsls r1, # 6
	bpl dengpll
	@0x34时钟控制寄存器 2 (RCC_CR2)
	movs r1, # 0x01
	str r1, [r0, # 0x34]  @ HSI开14M时钟
dengdai14mshizhongwending:
	ldr r1, [r0, # 0x34]
	lsls r1, r1, # 30     @ 左移30位
	bpl dengdai14mshizhongwending  @ 等待14M时钟稳定
	

_fftjisuan:
	mov r12, sp     
	@一
	ldr r0, = shurushi	@实
	ldr r1, [r0]                @0
	ldr r2, [r0, # 0x10]	    @4
	adds r4, r1, r2
	subs r5, r1, r2
	ldr r1, [r0, # 0x08]	    @2
	ldr r2, [r0, # 0x18]	    @6
	adds r6, r1, r2
	subs r7, r1, r2
	push {r4-r7}	
	
	ldr r1, [r0, # 0x04]	   @1
	ldr r2, [r0, # 0x14]	   @5
	adds r4, r1, r2
	subs r5, r1, r2
	ldr r1, [r0, # 0x0c]       @3
	ldr r2, [r0, # 0x1c]	   @7
	adds r6, r1, r2
	subs r7, r1, r2
	push {r4-r7}
	
	@二
     	pop {r4-r7}              @r4=1,r5=5,r6=3,r7=7
	adds r0, r4, r6
	subs r1, r4, r6
	
	
	ldr r6, = -1		@si
	muls r7, r7, r6
	adds r4, r5, r7          @实
	mov r6, r5
	movs r5, # 0
	mov r6, r7              
	subs r7, r5, r7
	mov r11, sp
	push {r0-r7}            @r4=0,r5=4,r6=2,r7=6
	adds r0, r4, r6
	subs r1, r4, r6

	
	ldr r4, = -1
	muls r7, r7, r4
	subs r0, r7
	adds r2, r5, r7
	subs r3, r5, r7
	
	
	.align 2
	.ltorg
_tingting:
	b _tingting
		
_nmi_handler:
	bx lr
_hard_fault:
	bx lr
_svc_handler:
	bx lr
_pendsv_handler:
	bx lr
