


@
@ +-------------------------------------------------------------------------+
@ |   This file	has been generated by The Interactive Disassembler (IDA)    |
@ |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
@ |			 License info: 48-B611-7234-BB			    |
@ |		Doskey Lee, Kingsoft Internet Security Software		    |
@ +-------------------------------------------------------------------------+
@
@ Input	MD5   :	6790B07AEC5016098B14DCC9FC666222
@ Input	CRC32 :	CB1BD9D4

@ File Name   :	F:\ob0\ob-stm32	(¸´ÖÆ 1).bin
@ Format      :	Binary file
@ Base Address:	0000h Range: 8000000h -	800FC50h Loaded	length:	FC50h

@ Processor	  : ARM
@ ARM architecture: ARMv7-M
@ Target assembler: GNU	assembler
@ Byte sex	  : Little endian
.syntax	unified

@ ===========================================================================

@ Segment type:	Pure code
		.section ROM@ CODE
		@ .org 0x8000000
		.code 32
		.long 0x20001008
		.long 0x8000271
		.long 0x800002D
		.long 0x8000031
@ ---------------------------------------------------------------------------
		MOV.W	R2, #0
		MOVW	R0, #0xFFFF
		MOV	R1, R0
		MOVT.W	R1, #3
		.code 16

loc_800001E:				@ CODE XREF: ROM:08000026j
		NOP
		.code 32
		ADD.W	R2, R2,	#1
		CMP	R2, R1
		BNE	loc_800001E
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		.code 16
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8000038:				@ CODE XREF: sub_80001C4+3Ep
		PUSH	{R4-R6}
		MOV	R5, R0
		MOV	R4, R1
		CBNZ	R1, loc_8000046
		MOV.W	R0, #0
		B	loc_800007A
@ ---------------------------------------------------------------------------

loc_8000046:				@ CODE XREF: sub_8000038+6j
		MOV.W	R0, #0
		MOV	R1, R0
		MOV.W	R6, #8
		MOVW	R12, #0x8408

loc_8000054:				@ CODE XREF: sub_8000038+40j
		LDRB	R3, [R5,R1]
		EOR.W	R0, R0,	R3
		MOV	R2, R6

loc_800005C:				@ CODE XREF: sub_8000038+38j
		MOV	R3, R0
		MOV.W	R0, R0,LSR#1
		TST.W	R3, #1
		IT ne
		EORNE.W	R0, R0,	R12
		ADDS.W	R2, R2,	#0xFFFFFFFF
		BNE	loc_800005C
		ADD.W	R1, R1,	#1
		CMP	R4, R1
		BNE	loc_8000054

loc_800007A:				@ CODE XREF: sub_8000038+Cj
		UXTH	R0, R0
		POP	{R4-R6}
		BX	LR
@ End of function sub_8000038


@ =============== S U B	R O U T	I N E =======================================


sub_8000080:				@ CODE XREF: sub_800021C+8p
		MOV	R3, #0x40022004
		MOV	R2, #0x45670123
		STR	R2, [R3]
		MOV	R2, #0xCDEF89AB
		STR	R2, [R3]
		BX	LR
@ End of function sub_8000080

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_80000A0:				@ CODE XREF: sub_80000C4+24p
					@ sub_80000F8+7Ap ...
		MOVW	R1, #0x200C
		MOV	R2, R1
		MOVT.W	R2, #0x4002

loc_80000AA:				@ CODE XREF: sub_80000A0+10j
		LDR	R3, [R2]
		TST.W	R3, #1
		BNE	loc_80000AA
		MOV	R3, #0x4002200C
		MOV.W	R2, #0x35
		STR	R2, [R3]
		BX	LR
@ End of function sub_80000A0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80000C4:				@ CODE XREF: sub_80000F8+26p
					@ sub_80001B4+Ap
		PUSH	{R4,LR}
		MOV	R4, #0x40022010
		LDR	R3, [R4]
		ORR.W	R3, R3,	#2
		STR	R3, [R4]
		MOV	R3, #0x40022014
		STR	R0, [R3]
		LDR	R3, [R4]
		ORR.W	R3, R3,	#0x40
		STR	R3, [R4]
		BL	sub_80000A0
		LDR	R3, [R4]
		BIC.W	R3, R3,	#2
		STR	R3, [R4]
		POP	{R4,PC}
@ End of function sub_80000C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80000F8:				@ CODE XREF: sub_800021C+Cp
		PUSH.W	{R4-R10,LR}
		MOV	R4, #0x8004000
		MOV.W	R6, #0
		MOVW	R3, #0x9C00
		MOV	R5, R3
		MOVT.W	R5, #0x800
		B	loc_80001AA
@ ---------------------------------------------------------------------------

loc_8000114:				@ CODE XREF: sub_80000F8+34j
					@ sub_80000F8+B4j
		LDR	R3, [R2,R4]
		CMP.W	R3, #0xFFFFFFFF
		BEQ	loc_8000124
		MOV	R0, R4
		BL	sub_80000C4
		B	loc_800012E
@ ---------------------------------------------------------------------------

loc_8000124:				@ CODE XREF: sub_80000F8+22j
		ADD.W	R2, R2,	#4
		CMP.W	R2, #0x400
		BNE	loc_8000114

loc_800012E:				@ CODE XREF: sub_80000F8+2Aj
		ADD.W	R4, R4,	#0x400
		CMP	R4, R5
		BNE	loc_80001AA
		MOV	R6, #0x8004000
		MOV	R3, #0x40022008
		MOV	R9, R3
		MOV	R3, #0x40022004
		MOV	R8, R3
		MOVW	R3, #0x2010
		MOV	R7, R3
		MOVT.W	R7, #0x4002
		MOV	R3, #0x8009BFC
		MOV	R10, R3

loc_8000166:				@ CODE XREF: sub_80000F8+B0j
		ADD.W	R3, R6,	#0x5C00
		LDR	R5, [R3]
		CMP	R5, R9
		IT eq
		MOVEQ	R5, R8
		BL	sub_80000A0
		LDR	R3, [R7]
		ORR.W	R3, R3,	#1
		STR	R3, [R7]
		NOP
		UXTH	R3, R5
		MOV	R4, R6
		STRH.W	R3, [R4],#2
		BL	sub_80000A0
		MOV.W	R5, R5,LSR#16
		STRH	R5, [R4]
		BL	sub_80000A0
		LDR	R3, [R7]
		BIC.W	R3, R3,	#1
		STR	R3, [R7]
		LDR	R3, [R6]
		CMP	R6, R10
		BEQ	locret_80001AE
		ADD.W	R6, R6,	#4
		B	loc_8000166
@ ---------------------------------------------------------------------------

loc_80001AA:				@ CODE XREF: sub_80000F8+1Aj
					@ sub_80000F8+3Cj
		MOV	R2, R6
		B	loc_8000114
@ ---------------------------------------------------------------------------

locret_80001AE:				@ CODE XREF: sub_80000F8+AAj
		POP.W	{R4-R10,PC}
@ End of function sub_80000F8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80001B4:				@ CODE XREF: sub_800021C+10p
		PUSH	{R4,LR}
		MOV	R0, #0x8009C00
		BL	sub_80000C4
		POP	{R4,PC}
@ End of function sub_80001B4


@ =============== S U B	R O U T	I N E =======================================


sub_80001C4:				@ CODE XREF: sub_800021C+2p
		PUSH	{R4,LR}
		MOV.W	R1, #0xFFFFFFFF
		MOV	R2, #0x8009C04
		MOVW	R3, #0x9C84
		MOV	R0, R3
		MOVT.W	R0, #0x800

loc_80001DC:				@ CODE XREF: sub_80001C4+26j
		LDR.W	R3, [R2,#(dword_8009C00	- 0x8009C04)]
		AND.W	R1, R1,	R3
		ADD.W	R2, R2,	#4
		CMP	R2, R0
		BNE	loc_80001DC
		CMP.W	R1, #0xFFFFFFFF
		IT eq
		MOVEQ	R0, #0
		BEQ	locret_8000218
		MOV	R0, #0x8009C00
		MOVW	R1, #0x5BFE
		BL	sub_8000038
		MOV	R3, #0x800F7FE
		LDRH	R3, [R3]
		CMP	R0, R3
		ITE ne
		MOVNE	R0, #0
		MOVEQ	R0, #1

locret_8000218:				@ CODE XREF: sub_80001C4+30j
		POP	{R4,PC}
@ End of function sub_80001C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800021C:				@ CODE XREF: ROM:loc_80002D8p

@ FUNCTION CHUNK AT 080041B0 SIZE 0000000C BYTES
@ FUNCTION CHUNK AT 080041C4 SIZE 00000010 BYTES
@ FUNCTION CHUNK AT 08008F24 SIZE 00000002 BYTES
@ FUNCTION CHUNK AT 08008F28 SIZE 00000004 BYTES
@ FUNCTION CHUNK AT 08008F7C SIZE 00000006 BYTES

		PUSH	{R4,LR}
		BL	sub_80001C4
		CBZ	R0, loc_8000230
		BL	sub_8000080
		BL	sub_80000F8
		BL	sub_80001B4

loc_8000230:				@ CODE XREF: sub_800021C+6j
		MOV	R2, #0x40022010
		LDR	R3, [R2]
		ORR.W	R3, R3,	#0x80
		STR	R3, [R2]
		MOV	R2, #0xE000ED08
		MOV	R3, #0x8004000
		STR	R3, [R2]
		ISB.W	SY
		MOV	R3, #0x8004000
		LDR	R6, [R3]
		MSR.W	MSP, R6
		LDR	R6, [R3,#(off_8004004 -	0x8004000)]
		BX	R6 @ loc_80041B0
@ End of function sub_800021C

@ ---------------------------------------------------------------------------
		MOV.W	R0, #0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 0x10
		PUSH	{R4,LR}
		MOV	R2, #0x20000000
		MOV	R3, #0x20000004
		CMP	R2, R3
		BCS	loc_80002AE
		MOV.W	R2, #0
		MOV	R1, #0x20000000
		MOV	LR, #0x8000314
		MOV	R0, R3

loc_800029C:				@ CODE XREF: ROM:080002ACj
		LDR.W	R3, [LR,R2]
		STR	R3, [R1,R2]
		ADD.W	R2, R2,	#4
		ADD.W	R3, R1,	R2
		CMP	R3, R0
		BCC	loc_800029C

loc_80002AE:				@ CODE XREF: ROM:08000284j
		MOV	R2, #0x20000004
		MOV	R3, #0x20000004
		CMP	R2, R3
		BCS	loc_80002D8
		MOV	R3, R2
		MOV.W	R1, #0
		MOV	R2, #0x20000004

loc_80002D0:				@ CODE XREF: ROM:080002D6j
		STR.W	R1, [R3],#4
		CMP	R3, R2
		BCC	loc_80002D0

loc_80002D8:				@ CODE XREF: ROM:080002C0j
		BL	sub_800021C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 0x10
unk_80002E0:	.byte 0x24 @ $		@ DATA XREF: ROM:08000314o
aIdStm32boot_c2:.ascii "Id: stm32boot.c 21 2009-10-14 12:38:12Z minux $"
		.byte 0
		.ds.b 3, 0
		.long unk_80002E0
		.ds.l 0x17, 0xFFFFFFFF
		.long 0xFFFFFFFF
		.ds.l 0x22, 0xFFFFFFFF
		.ds.l 0x1DE, 0
		.ds.l 0x200, 0
		.ds.l 0x200, 0
		.ds.l 0x200, 0
		.ds.l 0x200, 0
		.ds.l 0x200, 0
		.ds.l 0x200, 0
		.ds.l 0x122, 0
dword_8004000:	.long 0x20001408	@ DATA XREF: sub_80000F8+A6r
					@ sub_800021C+42r ...
off_8004004:	.long loc_80041B0+1	@ DATA XREF: sub_800021C+48r
		.long locret_800741C+1
		.long locret_8007420+1
		.long locret_8007424+1
		.long locret_8007428+1
		.long locret_800742C+1
		.ds.l 4, 0
		.long locret_8007434+1
		.long locret_8007430+1
		.align 8
		.byte 0x95 @ 
		.byte 0x70, 0, 8
		.long sub_8007164+1
		.long locret_8007438+1
		.long locret_800743C+1
		.long locret_8007440+1
		.long locret_8007444+1
		.long locret_8007448+1
		.long locret_800744C+1
		.long locret_8007450+1
		.long locret_8007454+1
		.long locret_8007458+1
		.long locret_800745C+1
		.long locret_8007460+1
		.long locret_8007464+1
		.long locret_8007468+1
		.long locret_800746C+1
		.long locret_8007470+1
		.long locret_8007474+1
		.long locret_8007478+1
		.long locret_800747C+1
		.long locret_8007480+1
		.long sub_800788C+1
		.long sub_800788C+1
		.long locret_8007484+1
		.long locret_8007488+1
		.long locret_800748C+1
		.long locret_8007490+1
		.long locret_8007494+1
		.long locret_8007498+1
		.long locret_800749C+1
		.long locret_80074A0+1
		.long locret_80074A4+1
		.long locret_80074A8+1
		.long locret_80074AC+1
		.long locret_80074B0+1
		.long locret_80074B4+1
		.long locret_80074B8+1
		.long locret_80074BC+1
		.long locret_80074C0+1
		.long 0x80063B5, 0x80074C5, 0x80074C9, 0x80074CD, 0x80074D1
		.long 0x80074D5
		.ds.l 5, 0xFFFFFFFF
		.ds.l 4, 0
@ ---------------------------------------------------------------------------
		CMP	R5, #0x4A
		LDR	R4, [R1,#0x14]
		LDR	R6, [R5,#0x34]
		ASRS	R0, R4
		LDR	R5, =0x20000058
		LDR	R7, loc_80041D0
		MOVS	R0, #0x42
		STRB	R3, [R2,R1]
		ADDS	R3, #0x4D
		MOVS	R0, #0x32
		LDR	R3, [R4,#0x74]
		STRB	R5, [R5,#1]
		LDR	R1, [R5,#0x44]
		STR	R5, [R4,#0x44]
		LDR	R2, loc_80041B0
		LDR	R5, [R6,#0x64]
		ADDS	R3, #0x20
		MOVS	R0, #0x62
		SUBS	R1, #0x30
		ADDS	R1, #0x20
		SUBS	R2, #0x31
		ADDS	R4, #0x31
		ADDS	R1, #0x3A
		MOVS	R5, R6
		LDR	R3, [R0,#0x74]
		LDRB	R0, [R6,#5]
		LDR	R2, [R6,#0x14]
		LDR	R7, [R4,#4]
		MOVS	R0, #0xA6
		ADDS	R3, #0x30
		ADDS	R2, #0x2D
		ADDS	R0, #0x30
		MOVS	R0, #0x38
		CMP	R3, R10
		BX	R8
@ ---------------------------------------------------------------------------
		.byte 0x45 @ E
aRWww_segger_co:.ascii "R: www.segger.com"
		.byte 0
		.ds.b 3, 0
		.align 0x20

@ =============== S U B	R O U T	I N E =======================================


sub_8004180:				@ CODE XREF: sub_800021C+3F9Cp
					@ DATA XREF: sub_800021C+3F9Ao	...
		PUSH	{R4,LR}
		LDR	R4, =dword_800917C
		B	loc_800418C
@ ---------------------------------------------------------------------------

loc_8004186:				@ CODE XREF: sub_8004180+1Aj
		BL	sub_8008F50

loc_800418A:				@ CODE XREF: sub_8004180+22j
		ADDS	R4, #0xC

loc_800418C:				@ CODE XREF: sub_8004180+4j
		LDR	R0, =unk_80091A0
		CMP	R4, R0
		BCS	locret_80041A4
		LDR	R0, [R4,#(dword_8009180	- 0x800917C)]
		LDR	R1, [R4,#(dword_8009184	- 0x800917C)]
		LDR	R2, [R4]
		CMP	R1, R0
		BNE	loc_8004186
		MOVS	R1, #0
		BL	sub_8008F68
		B	loc_800418A
@ ---------------------------------------------------------------------------

locret_80041A4:				@ CODE XREF: sub_8004180+10j
		POP	{R4,PC}
@ End of function sub_8004180

@ ---------------------------------------------------------------------------
		.align 4
off_80041A8:	.long dword_800917C	@ DATA XREF: sub_8004180+2r
off_80041AC:	.long unk_80091A0	@ DATA XREF: sub_8004180:loc_800418Cr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800021C

loc_80041B0:				@ CODE XREF: sub_800021C+4Aj
					@ DATA XREF: ROM:0800412Cr ...
		LDR	R4, =(sub_80072DC+1)
		BLX	R4 @ sub_80072DC
		CBZ	R0, loc_80041C4
		LDR	R4, =(sub_8004180+1)
		BLX	R4 @ sub_8004180
		B	loc_80041C4
@ END OF FUNCTION CHUNK	FOR sub_800021C
@ ---------------------------------------------------------------------------
off_80041BC:	.long sub_80072DC+1	@ DATA XREF: sub_800021C:loc_80041B0r
off_80041C0:	.long sub_8004180+1	@ DATA XREF: sub_800021C+3F9Ar
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800021C

loc_80041C4:				@ CODE XREF: sub_800021C+3F98j
					@ sub_800021C+3F9Ej
		LDR	R4, =(sub_8008ECC+1)
		MOV.W	R0, #0
		BLX	R4 @ sub_8008ECC
		LDR	R4, =(loc_8008F28+1)
		LDR	R5, =(loc_8008F7C+1)

loc_80041D0:				@ DATA XREF: ROM:0800411Ar
		MOV	LR, R5
		BX	R4 @ loc_8008F28
@ END OF FUNCTION CHUNK	FOR sub_800021C
@ ---------------------------------------------------------------------------
off_80041D4:	.long sub_8008ECC+1	@ DATA XREF: sub_800021C:loc_80041C4r
off_80041D8:	.long loc_8008F28+1	@ DATA XREF: sub_800021C+3FB0r
off_80041DC:	.long loc_8008F7C+1	@ DATA XREF: sub_800021C+3FB2r

@ =============== S U B	R O U T	I N E =======================================


sub_80041E0:				@ CODE XREF: sub_80046C0+22p
					@ sub_8004738+22p ...
		LDR	R0, =0x2000004C
		LDR	R0, [R0]
		LSRS	R0, R0,	#0x18
		CMP	R0, #0xFF
		IT eq
		MOVEQ	R0, #0
		BX	LR
@ End of function sub_80041E0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_80041F0:	.long 0x2000004C	@ DATA XREF: sub_80041E0r

@ =============== S U B	R O U T	I N E =======================================


sub_80041F4:				@ CODE XREF: sub_8004214+32p
					@ sub_80042A0+1Ep
		LDR	R0, =0x20000050
		LDR	R1, [R0]
		LDR	R0, [R0,#4]
		LSLS	R0, R0,	#0x15
		ORRS.W	R0, R0,	R1,LSR#11
		BX	LR
@ End of function sub_80041F4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004204:				@ CODE XREF: sub_8004214:loc_8004254p
					@ sub_8004328+5Ap ...
		LDR	R2, =0x20000050
		LDR	R1, =0x20000008
		LDR	R0, =dword_80091EC
		MOVS	R3, #0x30
		B.W	sub_8006228
@ End of function sub_8004204

@ ---------------------------------------------------------------------------
off_8004210:	.long dword_80091EC	@ DATA XREF: sub_8004204+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8004214:				@ CODE XREF: sub_8004268+4j
					@ sub_8004270+4j ...
		PUSH.W	{R4-R8,LR}
		LDR	R4, =0x20000058
		LDR	R5, =0x20000050
		MOVS	R6, #0
		MOV	R8, R1
		STRB	R0, [R4]
		B	loc_800422C
@ ---------------------------------------------------------------------------

loc_8004224:				@ CODE XREF: sub_8004214+46j
		MOVS	R0, R6
		ADDS	R6, R6,	#1
		CMP	R0, #0x64
		BEQ	loc_800425C

loc_800422C:				@ CODE XREF: sub_8004214+Ej
		LDR	R1, =0x20000000
		MOVS	R3, #0x2E
		MOVS	R2, R5
		MOVS	R0, R4
		BL	sub_8006228
		LDRB	R0, [R5,#1]
		LSLS	R7, R0,	#0x1D
		LSRS	R7, R7,	#0x1D
		CMP	R7, #1
		BNE	loc_8004254
		MOV	R0, R8
		CBZ	R0, loc_800424E
		BL	sub_80041F4
		STR.W	R0, [R8]

loc_800424E:				@ CODE XREF: sub_8004214+30j
		MOVS	R0, #0

locret_8004250:				@ CODE XREF: sub_8004214+4Cj
		POP.W	{R4-R8,PC}
@ ---------------------------------------------------------------------------

loc_8004254:				@ CODE XREF: sub_8004214+2Cj
		BL	sub_8004204
		CMP	R7, #2
		BEQ	loc_8004224

loc_800425C:				@ CODE XREF: sub_8004214+16j
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_8004250
@ End of function sub_8004214

@ ---------------------------------------------------------------------------
		.align 4
dword_8004264:	.long 0x20000058	@ DATA XREF: ROM:08004118r
					@ sub_8004214+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8004268:				@ CODE XREF: sub_8004278+10p
					@ sub_8004430+12p ...
		MOVS	R1, R0
		MOVS	R0, #0xBD
		B	sub_8004214
@ End of function sub_8004268

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8004270:				@ CODE XREF: sub_8004430+4p
					@ sub_80044AC+18p ...
		MOVS	R1, R0
		MOVS	R0, #0x9F
		B	sub_8004214
@ End of function sub_8004270

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004278:				@ CODE XREF: sub_8004918+30p
		PUSH	{R4,LR}
		MOVS	R1, #0
		MOVS	R4, R0
		MOVS	R0, #0xB7
		BL	sub_8004214
		CBNZ	R0, locret_800428C
		MOVS	R0, R4
		BL	sub_8004268

locret_800428C:				@ CODE XREF: sub_8004278+Cj
		POP	{R4,PC}
@ End of function sub_8004278

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8004290:				@ CODE XREF: sub_800439C+14p
		LDR	R1, =0x20000000
		PUSH	{R4,R5,LR}
		LDR	R5, =0x20000050
		MOVS	R4, R0
		LDR	R0, =unk_80091F4
		B	loc_80042AC
@ End of function sub_8004290

@ ---------------------------------------------------------------------------
off_800429C:	.long unk_80091F4	@ DATA XREF: sub_8004290+8r

@ =============== S U B	R O U T	I N E =======================================


sub_80042A0:				@ CODE XREF: sub_800439C+1Ap
					@ sub_800439C+2Cp
		LDR	R1, =0x20000000
		PUSH	{R4,R5,LR}
		LDR	R5, =0x20000050
		MOVS	R4, R0
		LDR	R0, =unk_80091FC
		NOP

loc_80042AC:				@ CODE XREF: sub_8004290+Aj
		MOVS	R3, #0x2E
		MOVS	R2, R5
		BL	sub_8006228
		LDRB	R0, [R5,#1]
		LSLS	R5, R0,	#0x1D
		LSRS	R5, R5,	#0x1D
		CMP	R5, #1
		BNE	loc_80042C4
		BL	sub_80041F4
		STR	R0, [R4]

loc_80042C4:				@ CODE XREF: sub_80042A0+1Cj
		MOVS	R0, R5
		POP	{R4,R5,PC}
@ End of function sub_80042A0

@ ---------------------------------------------------------------------------
off_80042C8:	.long unk_80091FC	@ DATA XREF: sub_80042A0+8r
dword_80042CC:	.long 0x20000000	@ DATA XREF: sub_8004214:loc_800422Cr
					@ sub_8004290r	...

@ =============== S U B	R O U T	I N E =======================================


sub_80042D0:				@ CODE XREF: sub_8004620+82p
		PUSH	{R0,R1,R4,LR}
		LDR	R4, =0x20000050
		MOVS	R3, #0x30
		MOVS	R1, #0xBB
		ORRS.W	R1, R1,	R0,LSL#13
		STR	R1, [SP,#0]
		EORS.W	R1, R0,	R0,LSR#16
		LSRS	R0, R0,	#0x13
		EORS.W	R1, R1,	R1,LSR#8
		EORS.W	R1, R1,	R1,LSR#4
		EORS.W	R1, R1,	R1,LSR#2
		MOVS	R2, R1
		LSRS	R1, R1,	#1
		EORS	R1, R2
		MOVS	R2, #1
		ANDS	R2, R1
		LDR	R1, =0x20000008
		ORRS.W	R0, R0,	R2,LSL#13
		STRH.W	R0, [SP,#4]
		MOVS	R2, R4
		MOV	R0, SP
		BL	sub_8006228
		LDRB	R0, [R4,#1]
		LSLS	R0, R0,	#0x1D
		LSRS	R0, R0,	#0x1D
		POP	{R1,R2,R4,PC}
@ End of function sub_80042D0


@ =============== S U B	R O U T	I N E =======================================


sub_8004314:				@ CODE XREF: sub_800446C:loc_800448Ep
					@ sub_8004620+96p ...
		LDR	R2, =0x20000050
		LDR	R1, =dword_8009318
		LDR	R0, =0x800931A
		MOVS	R3, #8
		B.W	sub_8006228
@ End of function sub_8004314

@ ---------------------------------------------------------------------------
off_8004320:	.long dword_8009318	@ DATA XREF: sub_8004314+2r
dword_8004324:	.long 0x800931A		@ DATA XREF: sub_8004314+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8004328:				@ CODE XREF: sub_800439C+44p
					@ sub_80043FC+Ep ...
		LDR	R2, =unk_8009204
		PUSH	{R0,R1,R4-R6,LR}
		LDR	R5, =0x20000050
		LDRB	R0, [R2,R0]
		MOVS	R4, #0
		MOVS	R2, #1
		STRB.W	R0, [SP,#2]
		LSLS	R0, R1,	#5
		STRB.W	R0, [SP,#3]
		EORS.W	R0, R1,	R1,LSR#16
		EORS.W	R0, R0,	R0,LSR#8
		EORS.W	R0, R0,	R0,LSR#4
		EORS.W	R0, R0,	R0,LSR#2
		EORS.W	R0, R0,	R0,LSR#1
		ANDS	R2, R0
		LSLS	R0, R2,	#0x1D
		ORRS.W	R0, R0,	R1,LSR#3
		STR	R0, [SP,#4]
		B	loc_8004366
@ ---------------------------------------------------------------------------

loc_800435E:				@ CODE XREF: sub_8004328+60j
		MOVS	R0, R4
		ADDS	R4, R4,	#1
		CMP	R0, #0x64
		BEQ	loc_800438A

loc_8004366:				@ CODE XREF: sub_8004328+34j
		LDR	R1, =0x20000008
		MOVS	R3, #0x30
		MOVS	R2, R5
		MOV	R0, SP
		ADDS	R0, R0,	#2
		BL	sub_8006228
		LDRB	R0, [R5,#1]
		LSLS	R6, R0,	#0x1D
		LSRS	R6, R6,	#0x1D
		CMP	R6, #1
		ITT eq
		MOVEQ	R0, #0
		POPEQ	{R1,R2,R4-R6,PC}
		BL	sub_8004204
		CMP	R6, #2
		BEQ	loc_800435E

loc_800438A:				@ CODE XREF: sub_8004328+3Cj
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R2,R4-R6,PC}
@ End of function sub_8004328

@ ---------------------------------------------------------------------------
off_8004390:	.long unk_8009204	@ DATA XREF: sub_8004328r
dword_8004394:	.long 0x20000050	@ DATA XREF: sub_80041F4r sub_8004204r ...
dword_8004398:	.long 0x20000008	@ DATA XREF: sub_8004204+2r
					@ sub_80042D0+2Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800439C:				@ CODE XREF: sub_8004AB8:loc_8004ACCp
					@ sub_8004C80+12p
		LDR	R1, =dword_8009230
		LDR	R0, =dword_800920C
		PUSH	{LR}
		SUB	SP, SP,	#0x2C
		MOVS.W	R3, #0x108
		ADD	R2, SP,	#4
		BL	sub_8006228
		MOV	R0, SP
		BL	sub_8004290
		MOV	R0, SP
		BL	sub_80042A0
		LDR	R0, [SP,#0]
		TST.W	R0, #0xB2
		BEQ	loc_80043DA
		BL	sub_8004204
		MOV	R0, SP
		BL	sub_80042A0
		LDR	R0, [SP,#0]
		TST.W	R0, #0xA0
		BEQ	loc_80043DA
		MOVS.W	R0, #0xFFFFFFFF
		B	loc_80043EA
@ ---------------------------------------------------------------------------

loc_80043DA:				@ CODE XREF: sub_800439C+24j
					@ sub_800439C+36j
		LDR	R1, =0x50000001
		MOVS	R0, #1
		STR	R1, [SP,#0]
		BL	sub_8004328
		CBZ	R0, loc_80043EA
		MOVS.W	R0, #0xFFFFFFFF

loc_80043EA:				@ CODE XREF: sub_800439C+3Cj
					@ sub_800439C+48j
		ADD	SP, SP,	#0x2C
		POP	{PC}
@ End of function sub_800439C

@ ---------------------------------------------------------------------------
		.align 0x10
off_80043F0:	.long dword_8009230	@ DATA XREF: sub_800439Cr
off_80043F4:	.long dword_800920C	@ DATA XREF: sub_800439C+2r
dword_80043F8:	.long 0x50000001	@ DATA XREF: sub_800439C:loc_80043DAr

@ =============== S U B	R O U T	I N E =======================================


sub_80043FC:				@ CODE XREF: sub_800444C+6p
					@ sub_800446C+6p ...
		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		BL	sub_8004204
		MOVS	R1, #0
		MOVS	R0, #2
		BL	sub_8004328
		LDR	R1, =0x23000010
		MOVS	R6, R0
		MOVS	R0, #4
		ORRS	R1, R5
		BL	sub_8004328
		MOVS	R5, R0
		ORRS	R5, R6
		MOVS	R1, R4
		MOVS	R0, #5
		BL	sub_8004328
		ORRS	R0, R5
		POP	{R4-R6,PC}
@ End of function sub_80043FC

@ ---------------------------------------------------------------------------
		.align 4
dword_800442C:	.long 0x23000010	@ DATA XREF: sub_80043FC+12r

@ =============== S U B	R O U T	I N E =======================================


sub_8004430:				@ CODE XREF: sub_800444C+14p
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8004270
		CBZ	R0, loc_8004440
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8004440:				@ CODE XREF: sub_8004430+8j
		MOVS	R0, R4
		BL	sub_8004268
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_8004430

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800444C:				@ CODE XREF: sub_80044A0+4j
		PUSH	{R4,LR}
		MOVS	R4, R1
		MOVS	R1, #2
		BL	sub_80043FC
		CBZ	R0, loc_800445E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800445E:				@ CODE XREF: sub_800444C+Aj
		MOVS	R0, R4
		BL	sub_8004430
		CBZ	R0, locret_800446A
		MOVS.W	R0, #0xFFFFFFFF

locret_800446A:				@ CODE XREF: sub_800444C+18j
		POP	{R4,PC}
@ End of function sub_800444C


@ =============== S U B	R O U T	I N E =======================================


sub_800446C:				@ CODE XREF: sub_8004498+4j
					@ sub_8004A4C+Ap ...
		PUSH	{R4,LR}
		MOVS	R4, R1
		MOVS	R1, #2
		BL	sub_80043FC
		CBZ	R0, loc_800447E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800447E:				@ CODE XREF: sub_800446C+Aj
		MOVS	R1, R4
		MOVS	R0, #7
		BL	sub_8004328
		CBZ	R0, loc_800448E
		MOVS	R0, #0xFFFFFFFE
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800448E:				@ CODE XREF: sub_800446C+1Aj
		BL	sub_8004314
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800446C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004498:				@ CODE XREF: sub_80049AC+12p
					@ sub_80049D8+4p ...
		MOVS	R1, R0
		LDR	R0, =0xE000EDF0
		B	sub_800446C
@ End of function sub_8004498

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_80044A0:				@ CODE XREF: sub_80049AC+4p
					@ sub_80049AC+18p ...
		MOVS	R1, R0
		LDR	R0, =0xE000EDF0
		B	sub_800444C
@ End of function sub_80044A0

@ ---------------------------------------------------------------------------
		.align 4
dword_80044A8:	.long 0xE000EDF0	@ DATA XREF: sub_8004498+2r
					@ sub_80044A0+2r

@ =============== S U B	R O U T	I N E =======================================


sub_80044AC:				@ CODE XREF: sub_80046C0+48p
		PUSH	{R0,R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R1, #0
		MOVS	R6, R2
		BL	sub_80043FC
		CBZ	R0, loc_80044C2
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80044C2:				@ CODE XREF: sub_80044AC+Ej
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_80044D0
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80044D0:				@ CODE XREF: sub_80044AC+1Cj
		CMP	R5, #2
		BCC	loc_80044FA
		SUBS	R7, R5,	#1

loc_80044D6:				@ CODE XREF: sub_80044AC+4Cj
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_80044E4
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80044E4:				@ CODE XREF: sub_80044AC+30j
		LDR	R0, [SP,#0]
		LSLS	R1, R4,	#0x1E
		LSRS	R1, R1,	#0x1B
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		ADDS	R4, R4,	#1
		SUBS	R7, R7,	#1
		STRB.W	R0, [R6],#1
		BNE	loc_80044D6

loc_80044FA:				@ CODE XREF: sub_80044AC+26j
		MOV	R0, SP
		BL	sub_8004268
		CBZ	R0, loc_8004508
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8004508:				@ CODE XREF: sub_80044AC+54j
		LDR	R0, [SP,#0]
		LSLS	R1, R4,	#0x1E
		LSRS	R1, R1,	#0x1B
		LSRS	R0, R1
		STRB	R0, [R6]
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_80044AC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004518:				@ CODE XREF: sub_80046C0+58p
		PUSH	{R0,R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R1, #1
		MOVS	R7, R2
		BL	sub_80043FC
		CBZ	R0, loc_800452E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800452E:				@ CODE XREF: sub_8004518+Ej
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_800453C
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800453C:				@ CODE XREF: sub_8004518+1Cj
		CMP	R5, #2
		BCC	loc_800456E
		SUBS	R6, R5,	#1

loc_8004542:				@ CODE XREF: sub_8004518+54j
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_8004550
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8004550:				@ CODE XREF: sub_8004518+30j
		LDR	R0, [SP,#0]
		MOVS	R2, #2
		ANDS	R2, R4
		LSLS	R1, R2,	#3
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		ADDS	R4, R4,	#2
		STRB	R0, [R7]
		LDR	R0, [SP,#0]
		LSRS	R0, R0,	#8
		STRB	R0, [R7,#1]
		ADDS	R7, R7,	#2
		SUBS	R6, R6,	#1
		BNE	loc_8004542

loc_800456E:				@ CODE XREF: sub_8004518+26j
		MOV	R0, SP
		BL	sub_8004268
		CBZ	R0, loc_800457C
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800457C:				@ CODE XREF: sub_8004518+5Cj
		LDR	R0, [SP,#0]
		MOVS	R1, #2
		ANDS	R1, R4
		LSLS	R1, R1,	#3
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		STRB.W	R0, [R7],#1
		LDR	R0, [SP,#0]
		LSRS	R0, R0,	#8
		STRB	R0, [R7]
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_8004518


@ =============== S U B	R O U T	I N E =======================================


sub_8004598:				@ CODE XREF: sub_80046C0+62p
		PUSH	{R0,R4-R7,LR}
		MOVS	R5, R1
		MOVS	R4, R2
		MOVS	R7, #0
		LSLS	R1, R4,	#0x1E
		IT eq
		MOVEQ	R7, #1
		MOVS	R1, #2
		BL	sub_80043FC
		CBZ	R0, loc_80045B4
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80045B4:				@ CODE XREF: sub_8004598+14j
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_80045C2
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80045C2:				@ CODE XREF: sub_8004598+22j
		CMP	R5, #2
		BCC	loc_8004604
		SUBS	R6, R5,	#1
		CBNZ	R7, loc_80045DE

loc_80045CA:				@ CODE XREF: sub_8004598+6Aj
		MOV	R0, SP
		BL	sub_8004270
		CBZ	R0, loc_80045EE
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80045D8:				@ CODE XREF: sub_8004598+4Ej
		ADDS	R4, R4,	#4
		SUBS	R6, R6,	#1
		BEQ	loc_8004604

loc_80045DE:				@ CODE XREF: sub_8004598+30j
		MOVS	R0, R4
		BL	sub_8004270
		CMP	R0, #0
		BEQ	loc_80045D8
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_80045EE:				@ CODE XREF: sub_8004598+38j
		LDR	R0, [SP,#0]
		STRB	R0, [R4]
		LSRS	R1, R0,	#8
		STRB	R1, [R4,#1]
		LSRS	R1, R0,	#0x10
		STRB	R1, [R4,#2]
		LSRS	R0, R0,	#0x18
		STRB	R0, [R4,#3]
		ADDS	R4, R4,	#4
		SUBS	R6, R6,	#1
		BNE	loc_80045CA

loc_8004604:				@ CODE XREF: sub_8004598+2Cj
					@ sub_8004598+44j
		MOV	R0, SP
		BL	sub_8004268
		CBZ	R0, loc_8004612
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8004612:				@ CODE XREF: sub_8004598+72j
		LDR	R1, [SP,#0]
		MOVS	R0, R4
		BL	sub_8008EA0
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_8004598

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8004620:				@ CODE XREF: sub_8004738+4Ap
		PUSH.W	{R0,R4-R9,R11,LR}
		MOV	R8, R1
		MOV	R9, R3
		MOVS	R4, R0
		MOVS	R5, R2
		MOVS	R0, #0
		MOV	R11, R0
		MOV	R0, R9
		ASRS	R1, R0,	#1
		MOVS	R0, R4
		BL	sub_80043FC
		CBZ	R0, loc_8004642

loc_800463C:				@ CODE XREF: sub_8004620+72j
					@ sub_8004620+7Aj
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_80046BC
@ ---------------------------------------------------------------------------

loc_8004642:				@ CODE XREF: sub_8004620+1Aj
		MOV	R6, R8
		LSLS	R0, R5,	#0x1E
		BNE	loc_800465C
		MOV	R0, R9
		CMP	R0, #4
		BNE	loc_800465C
		MOVS	R0, #1
		MOV	R11, R0
		B	loc_8004658
@ ---------------------------------------------------------------------------

loc_8004654:				@ CODE XREF: sub_8004620+94j
		MOV	R0, R11
		CBZ	R0, loc_800465C

loc_8004658:				@ CODE XREF: sub_8004620+32j
		LDR	R0, [R5]
		B	loc_800468A
@ ---------------------------------------------------------------------------

loc_800465C:				@ CODE XREF: sub_8004620+26j
					@ sub_8004620+2Cj ...
		LDRB	R0, [R5]
		MOV	R1, R9
		CMP	R1, #2
		BLT	loc_800467E
		LDRB	R1, [R5,#1]
		ORRS.W	R0, R0,	R1,LSL#8
		MOV	R1, R9
		CMP	R1, #3
		BLT	loc_800467E
		LDRB	R1, [R5,#3]
		MOVS	R2, R0
		LDRB	R0, [R5,#2]
		LSLS	R1, R1,	#0x18
		ORRS.W	R0, R1,	R0,LSL#16
		ORRS	R0, R2

loc_800467E:				@ CODE XREF: sub_8004620+42j
					@ sub_8004620+4Ej
		MOVS	R2, #4
		MOV	R3, R9
		SUBS	R2, R2,	R3
		ANDS	R2, R4
		LSLS	R1, R2,	#3
		LSLS	R0, R1

loc_800468A:				@ CODE XREF: sub_8004620+3Aj
		STR	R0, [SP,#0]
		MOVS	R7, #0
		B	loc_80046A0
@ ---------------------------------------------------------------------------

loc_8004690:				@ CODE XREF: sub_8004620+88j
		CMP	R0, #2
		BNE	loc_800463C
		MOVS	R0, R7
		ADDS	R7, R7,	#1
		CMP	R0, #0x64
		BEQ	loc_800463C
		BL	sub_8004204

loc_80046A0:				@ CODE XREF: sub_8004620+6Ej
		LDR	R0, [SP,#0]
		BL	sub_80042D0
		CMP	R0, #1
		BNE	loc_8004690
		ADDS.W	R5, R9,	R5
		ADDS.W	R4, R9,	R4
		SUBS	R6, R6,	#1
		BNE	loc_8004654
		BL	sub_8004314
		MOV	R0, R8

locret_80046BC:				@ CODE XREF: sub_8004620+20j
		POP.W	{R1,R4-R9,R11,PC}
@ End of function sub_8004620


@ =============== S U B	R O U T	I N E =======================================


sub_80046C0:				@ CODE XREF: sub_8004798+1Cp
					@ sub_8004798+42p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #0
		MOV	R9, R3
		B	loc_80046DE
@ ---------------------------------------------------------------------------

loc_80046D0:				@ CODE XREF: sub_80046C0+6Ej
		MOV	R0, R9
		LSLS.W	R0, R7,	R0
		ADDS	R4, R4,	R0
		ADDS.W	R8, R0,	R8
		SUBS	R5, R5,	R7

loc_80046DE:				@ CODE XREF: sub_80046C0+Ej
		CBZ	R5, loc_8004730
		MVNS	R7, R4
		BL	sub_80041E0
		CMP	R0, #3
		BNE	loc_80046F0
		LSLS	R7, R7,	#0x14
		LSRS	R7, R7,	#0x14
		B	loc_80046F4
@ ---------------------------------------------------------------------------

loc_80046F0:				@ CODE XREF: sub_80046C0+28j
		LSLS	R7, R7,	#0x16
		LSRS	R7, R7,	#0x16

loc_80046F4:				@ CODE XREF: sub_80046C0+2Ej
		MOV	R0, R9
		LSRS	R7, R0
		ADDS	R7, R7,	#1
		CMP	R5, R7
		IT cc
		MOVCC	R7, R5
		CBNZ	R0, loc_800470E
		MOV	R2, R8
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_80044AC
		B	loc_8004726
@ ---------------------------------------------------------------------------

loc_800470E:				@ CODE XREF: sub_80046C0+40j
		CMP	R0, #1
		MOV	R2, R8
		BNE	loc_800471E
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_8004518
		B	loc_8004726
@ ---------------------------------------------------------------------------

loc_800471E:				@ CODE XREF: sub_80046C0+52j
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_8004598

loc_8004726:				@ CODE XREF: sub_80046C0+4Cj
					@ sub_80046C0+5Cj
		CMP	R0, #0
		BMI	locret_8004732
		ADDS	R6, R6,	R0
		CMP	R0, R7
		BEQ	loc_80046D0

loc_8004730:				@ CODE XREF: sub_80046C0:loc_80046DEj
		MOVS	R0, R6

locret_8004732:				@ CODE XREF: sub_80046C0+68j
		POP.W	{R4-R9,PC}
@ End of function sub_80046C0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004738:				@ CODE XREF: sub_8004858+1Cp
					@ sub_8004858+42p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R4, #0
		MOVS	R5, R0
		MOVS	R6, R1
		MOV	R9, R3
		B	loc_8004756
@ ---------------------------------------------------------------------------

loc_8004748:				@ CODE XREF: sub_8004738+56j
		MOV	R0, R9
		LSLS.W	R0, R7,	R0
		ADDS	R5, R5,	R0
		ADDS.W	R8, R0,	R8
		SUBS	R6, R6,	R7

loc_8004756:				@ CODE XREF: sub_8004738+Ej
		CBZ	R6, loc_8004790
		MVNS	R7, R5
		BL	sub_80041E0
		CMP	R0, #3
		BNE	loc_8004768
		LSLS	R7, R7,	#0x14
		LSRS	R7, R7,	#0x14
		B	loc_800476C
@ ---------------------------------------------------------------------------

loc_8004768:				@ CODE XREF: sub_8004738+28j
		LSLS	R7, R7,	#0x16
		LSRS	R7, R7,	#0x16

loc_800476C:				@ CODE XREF: sub_8004738+2Ej
		MOV	R0, R9
		LSRS	R7, R0
		ADDS	R7, R7,	#1
		CMP	R6, R7
		IT cc
		MOVCC	R7, R6
		MOVS	R3, #1
		LSLS	R3, R0
		MOV	R2, R8
		MOVS	R1, R7
		MOVS	R0, R5
		BL	sub_8004620
		CMP	R0, #0
		BMI	locret_8004792
		ADDS	R4, R4,	R0
		CMP	R0, R7
		BEQ	loc_8004748

loc_8004790:				@ CODE XREF: sub_8004738:loc_8004756j
		MOVS	R0, R4

locret_8004792:				@ CODE XREF: sub_8004738+50j
		POP.W	{R4-R9,PC}
@ End of function sub_8004738

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004798:				@ CODE XREF: sub_8004CD0+4Ep
		PUSH.W	{R4-R8,LR}
		MOV	R8, R1
		MOV	R4, R8
		MOVS	R6, R0
		MOVS	R7, R2
		MOVS	R5, R3
		LSLS	R0, R0,	#0x1F
		BPL	loc_80047C6
		CBZ	R4, loc_80047C6
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_80046C0
		CMP	R0, #0
		BMI	locret_8004852
		SUBS	R4, R4,	R0
		CMP	R0, #1
		BNE	loc_800484E
		ADDS	R5, R5,	#1
		ADDS	R6, R6,	#1

loc_80047C6:				@ CODE XREF: sub_8004798+10j
					@ sub_8004798+12j
		LSLS	R0, R7,	#1
		BMI	loc_800483A
		LSLS	R0, R6,	#0x1E
		BPL	loc_80047EE
		CMP	R4, #2
		BCC	loc_80047EE
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_80046C0
		CMP	R0, #0
		BMI	locret_8004852
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, #1
		BNE	loc_800484E
		ADDS	R5, R5,	#2
		ADDS	R6, R6,	#2

loc_80047EE:				@ CODE XREF: sub_8004798+34j
					@ sub_8004798+38j
		MOVS	R0, R7
		BMI	loc_8004816
		CMP	R4, #4
		BCC	loc_8004816
		LSRS	R7, R4,	#2
		MOVS	R3, #2
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_80046C0
		CMP	R0, #0
		BMI	locret_8004852
		SUBS.W	R4, R4,	R0,LSL#2
		CMP	R0, R7
		BNE	loc_800484E
		LSLS	R0, R7,	#2
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_8004816:				@ CODE XREF: sub_8004798+58j
					@ sub_8004798+5Cj
		CMP	R4, #2
		BCC	loc_800483A
		LSRS	R7, R4,	#1
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_80046C0
		CMP	R0, #0
		BMI	locret_8004852
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, R7
		BNE	loc_800484E
		LSLS	R0, R7,	#1
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_800483A:				@ CODE XREF: sub_8004798+30j
					@ sub_8004798+80j
		CBZ	R4, loc_800484E
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, R4
		MOVS	R0, R6
		BL	sub_80046C0
		CMP	R0, #0
		BMI	locret_8004852
		SUBS	R4, R4,	R0

loc_800484E:				@ CODE XREF: sub_8004798+28j
					@ sub_8004798+50j ...
		SUBS.W	R0, R8,	R4

locret_8004852:				@ CODE XREF: sub_8004798+22j
					@ sub_8004798+48j ...
		POP.W	{R4-R8,PC}
@ End of function sub_8004798

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004858:				@ CODE XREF: sub_8004D54+36p
		PUSH.W	{R4-R8,LR}
		MOV	R8, R1
		MOV	R4, R8
		MOVS	R6, R0
		MOVS	R7, R2
		MOVS	R5, R3
		LSLS	R0, R0,	#0x1F
		BPL	loc_8004886
		CBZ	R4, loc_8004886
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_8004738
		CMP	R0, #0
		BMI	locret_8004912
		SUBS	R4, R4,	R0
		CMP	R0, #1
		BNE	loc_800490E
		ADDS	R5, R5,	#1
		ADDS	R6, R6,	#1

loc_8004886:				@ CODE XREF: sub_8004858+10j
					@ sub_8004858+12j
		LSLS	R0, R7,	#1
		BMI	loc_80048FA
		LSLS	R0, R6,	#0x1E
		BPL	loc_80048AE
		CMP	R4, #2
		BCC	loc_80048AE
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_8004738
		CMP	R0, #0
		BMI	locret_8004912
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, #1
		BNE	loc_800490E
		ADDS	R5, R5,	#2
		ADDS	R6, R6,	#2

loc_80048AE:				@ CODE XREF: sub_8004858+34j
					@ sub_8004858+38j
		MOVS	R0, R7
		BMI	loc_80048D6
		CMP	R4, #4
		BCC	loc_80048D6
		LSRS	R7, R4,	#2
		MOVS	R3, #2
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_8004738
		CMP	R0, #0
		BMI	locret_8004912
		SUBS.W	R4, R4,	R0,LSL#2
		CMP	R0, R7
		BNE	loc_800490E
		LSLS	R0, R7,	#2
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_80048D6:				@ CODE XREF: sub_8004858+58j
					@ sub_8004858+5Cj
		CMP	R4, #2
		BCC	loc_80048FA
		LSRS	R7, R4,	#1
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_8004738
		CMP	R0, #0
		BMI	locret_8004912
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, R7
		BNE	loc_800490E
		LSLS	R0, R7,	#1
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_80048FA:				@ CODE XREF: sub_8004858+30j
					@ sub_8004858+80j
		CBZ	R4, loc_800490E
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, R4
		MOVS	R0, R6
		BL	sub_8004738
		CMP	R0, #0
		BMI	locret_8004912
		SUBS	R4, R4,	R0

loc_800490E:				@ CODE XREF: sub_8004858+28j
					@ sub_8004858+50j ...
		SUBS.W	R0, R8,	R4

locret_8004912:				@ CODE XREF: sub_8004858+22j
					@ sub_8004858+48j ...
		POP.W	{R4-R8,PC}
@ End of function sub_8004858

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004918:				@ CODE XREF: sub_8004E34+28p
		PUSH	{R4-R7,LR}
		MOVS	R5, R0
		LDR	R0, =0xE000EDF0
		MOVS	R6, R1
		MOVS	R7, R2
		MOVS	R1, #2
		BL	sub_80043FC
		MOVS	R4, R0
		MOVS	R1, #0x10
		MOVS	R0, #2
		BL	sub_8004328
		ORRS	R0, R4

loc_8004934:				@ CODE XREF: sub_8004918+3Aj
		LDRB.W	R1, [R5],#1
		MOVS	R4, R0
		MOVS	R0, #5
		BL	sub_8004328
		MOVS	R1, R0
		ORRS	R1, R4
		MOVS	R4, R1
		MOVS	R0, R6
		BL	sub_8004278
		ORRS	R0, R4
		ADDS	R6, R6,	#4
		SUBS	R7, R7,	#1
		BNE	loc_8004934
		POP	{R4-R7,PC}
@ End of function sub_8004918

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004958:				@ CODE XREF: sub_8004E70+38p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R0, =0xE000EDF0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R1, #2
		BL	sub_80043FC
		MOVS	R7, R0
		MOVS	R1, #0x10
		MOVS	R0, #2
		BL	sub_8004328
		MOVS	R1, R0
		ORRS	R1, R7
		MOVS	R7, R1

loc_8004978:				@ CODE XREF: sub_8004958+44j
		LDR.W	R1, [R5],#4
		MOVS	R0, #6
		BL	sub_8004328
		MOVS	R1, R0
		LDRB.W	R0, [R4],#1
		ORRS	R1, R7
		MOVS	R7, R1
		ORRS.W	R1, R0,	#0x10000
		MOVS	R0, #5
		BL	sub_8004328
		ORRS	R0, R7
		MOVS	R7, R0
		SUBS	R6, R6,	#1
		BNE	loc_8004978
		BL	sub_8004314
		MOVS	R0, R7
		POP	{R4-R7,PC}
@ End of function sub_8004958

@ ---------------------------------------------------------------------------
		.align 4
dword_80049A8:	.long 0xE000EDF0	@ DATA XREF: sub_8004918+4r
					@ sub_8004958+4r

@ =============== S U B	R O U T	I N E =======================================


sub_80049AC:				@ CODE XREF: sub_80049D8+Ap
					@ sub_8004A14:loc_8004A32p ...
		PUSH	{R0,LR}
		MOV	R0, SP
		BL	sub_80044A0
		CBNZ	R0, locret_80049D4
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BPL	loc_80049C8
		LDR	R0, =0xA05F0003
		BL	sub_8004498
		MOV	R0, SP
		BL	sub_80044A0

loc_80049C8:				@ CODE XREF: sub_80049AC+Ej
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xE
		ITT mi
		MOVMI	R0, #1
		POPMI	{R1,PC}
		MOVS	R0, #0

locret_80049D4:				@ CODE XREF: sub_80049AC+8j
		POP	{R1,PC}
@ End of function sub_80049AC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80049D8:				@ CODE XREF: sub_8004EC8j
		LDR	R0, =0xA05F0003
		PUSH	{LR}
		BL	sub_8004498
		CBNZ	R0, locret_80049E6
		BL	sub_80049AC

locret_80049E6:				@ CODE XREF: sub_80049D8+8j
		POP	{PC}
@ End of function sub_80049D8


@ =============== S U B	R O U T	I N E =======================================


sub_80049E8:				@ CODE XREF: sub_8004EB0+Ep
		PUSH	{LR}
		CBZ	R0, loc_80049F6
		LDR	R0, =0xA05F000B
		BL	sub_8004498
		LDR	R0, =0xA05F0009
		B	loc_80049FE
@ ---------------------------------------------------------------------------

loc_80049F6:				@ CODE XREF: sub_80049E8+2j
		LDR	R0, =0xA05F0003
		BL	sub_8004498
		LDR	R0, =0xA05F0001

loc_80049FE:				@ CODE XREF: sub_80049E8+Cj
		BL	sub_8004498
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_80049E8

@ ---------------------------------------------------------------------------
		.align 4
dword_8004A08:	.long 0xA05F000B	@ DATA XREF: sub_80049E8+4r
dword_8004A0C:	.long 0xA05F0009	@ DATA XREF: sub_80049E8+Ar
dword_8004A10:	.long 0xA05F0001	@ DATA XREF: sub_80049E8+14r

@ =============== S U B	R O U T	I N E =======================================


sub_8004A14:				@ CODE XREF: sub_8004EC4j
		LDR	R0, =0xA05F000F
		PUSH	{R4,LR}
		BL	sub_8004498
		CBZ	R0, loc_8004A24
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8004A24:				@ CODE XREF: sub_8004A14+8j
		LDR	R0, =0xA05F000D
		BL	sub_8004498
		CBZ	R0, loc_8004A32
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8004A32:				@ CODE XREF: sub_8004A14+16j
		BL	sub_80049AC
		MOVS	R4, R0
		LDR	R0, =0xA05F0003
		BL	sub_8004498
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_8004A14

@ ---------------------------------------------------------------------------
		.align 4
dword_8004A44:	.long 0xA05F000F	@ DATA XREF: sub_8004A14r
dword_8004A48:	.long 0xA05F000D	@ DATA XREF: sub_8004A14:loc_8004A24r

@ =============== S U B	R O U T	I N E =======================================


sub_8004A4C:				@ CODE XREF: sub_8004C50j
					@ sub_8004C54+12p
		PUSH	{R0,R4-R6,LR}
		LDR	R4, =0xE000EDFC
		LDR	R5, =0xE000ED0C
		MOVS	R1, #1
		MOVS	R0, R4
		BL	sub_800446C
		BL	sub_80041E0
		CMP	R0, #3
		BNE	loc_8004A66
		LDR	R1, =0x5FA0001
		B	loc_8004A68
@ ---------------------------------------------------------------------------

loc_8004A66:				@ CODE XREF: sub_8004A4C+14j
		LDR	R1, =0x5FA0004

loc_8004A68:				@ CODE XREF: sub_8004A4C+18j
		MOVS	R0, R5
		BL	sub_800446C
		LDR	R5, =0x2000019C
		LDR	R6, [R5]
		ADDS	R6, #0xC8

loc_8004A74:				@ CODE XREF: sub_8004A4C+3Ej
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BPL	loc_8004A86
		LDR	R6, [R5]
		ADDS	R6, #0xC8
		B	loc_8004A98
@ ---------------------------------------------------------------------------

loc_8004A86:				@ CODE XREF: sub_8004A4C+32j
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BPL	loc_8004A74

loc_8004A8C:				@ CODE XREF: sub_8004A4C+4Aj
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_8004A92:				@ CODE XREF: sub_8004A4C+56j
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BMI	loc_8004A8C

loc_8004A98:				@ CODE XREF: sub_8004A4C+38j
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BMI	loc_8004A92
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_800446C
		LDR	R0, =0xA05F0003
		BL	sub_8004498
		BL	sub_80049AC
		POP	{R1,R4-R6,PC}
@ End of function sub_8004A4C


@ =============== S U B	R O U T	I N E =======================================


sub_8004AB8:				@ CODE XREF: sub_8004C68+6p
		PUSH.W	{R0,R4-R9,LR}
		LDR	R0, =0xE000EDFC
		LDR	R6, =0x2000019C
		MOVS	R5, #0
		MOVS	R4, #0
		MOV	R8, R0
		LDR	R0, =0xA05F0003
		MOV	R9, R0
		B	loc_8004AD2
@ ---------------------------------------------------------------------------

loc_8004ACC:				@ CODE XREF: sub_8004AB8+50j
		BL	sub_800439C
		MOVS	R5, #1

loc_8004AD2:				@ CODE XREF: sub_8004AB8+12j
					@ sub_8004AB8+BCj
		MOV	R0, R9
		BL	sub_8004498
		MOVS	R1, #1
		MOV	R0, R8
		BL	sub_800446C
		BL	sub_8004204
		LDR	R0, =0xE000ED0C
		MOVS	R1, R5
		BEQ	loc_8004AEE
		LDR	R1, =0x5FA0001
		B	loc_8004AF0
@ ---------------------------------------------------------------------------

loc_8004AEE:				@ CODE XREF: sub_8004AB8+30j
		LDR	R1, =0x5FA0004

loc_8004AF0:				@ CODE XREF: sub_8004AB8+34j
		BL	sub_800446C
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R2, =0xFCF00000
		LDR	R1, [SP,#0]
		ANDS	R2, R1
		BNE	loc_8004B06
		CMP	R0, #0
		BPL	loc_8004B10

loc_8004B06:				@ CODE XREF: sub_8004AB8+48j
		CMP	R5, #0
		BEQ	loc_8004ACC

loc_8004B0A:				@ CODE XREF: sub_8004AB8+62j
					@ sub_8004AB8+78j
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_8004B88
@ ---------------------------------------------------------------------------

loc_8004B10:				@ CODE XREF: sub_8004AB8+4Cj
		LDR	R7, [R6]
		ADDS	R7, #0xC8
		B	loc_8004B22
@ ---------------------------------------------------------------------------

loc_8004B16:				@ CODE XREF: sub_8004AB8+6Ej
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BMI	loc_8004B0A
		MOV	R0, SP
		BL	sub_80044A0

loc_8004B22:				@ CODE XREF: sub_8004AB8+5Cj
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BPL	loc_8004B16
		LDR	R7, [R6]
		ADDS	R7, #0xC8

loc_8004B2C:				@ CODE XREF: sub_8004AB8+84j
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BMI	loc_8004B0A
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BMI	loc_8004B2C
		MOV	R0, R9
		BL	sub_8004498
		CBZ	R4, loc_8004B56
		LDR	R0, =0x40040000
		MOVS	R1, #2
		BL	sub_800446C
		LDR	R0, =0x40040004
		MOVS	R1, #0xB1
		BL	sub_800446C

loc_8004B56:				@ CODE XREF: sub_8004AB8+8Cj
		MOVS	R1, #0
		MOV	R0, R8
		BL	sub_800446C
		CBNZ	R4, loc_8004B7E
		MOVS	R0, #5
		BL	sub_8006E24
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BPL	loc_8004B76

loc_8004B72:				@ CODE XREF: sub_8004AB8+C4j
		MOVS	R4, #1
		B	loc_8004AD2
@ ---------------------------------------------------------------------------

loc_8004B76:				@ CODE XREF: sub_8004AB8+B8j
		BL	sub_80049AC
		CMP	R0, #0
		BEQ	loc_8004B72

loc_8004B7E:				@ CODE XREF: sub_8004AB8+A6j
		MOV	R0, R9
		BL	sub_8004498
		BL	sub_80049AC

locret_8004B88:				@ CODE XREF: sub_8004AB8+56j
		POP.W	{R1,R4-R9,PC}
@ End of function sub_8004AB8

@ ---------------------------------------------------------------------------
dword_8004B8C:	.long 0xFCF00000	@ DATA XREF: sub_8004AB8+42r
dword_8004B90:	.long 0xE000ED0C	@ DATA XREF: sub_8004A4C+4r
					@ sub_8004AB8+2Cr
dword_8004B94:	.long 0x5FA0001		@ DATA XREF: sub_8004A4C+16r
					@ sub_8004AB8+32r
dword_8004B98:	.long 0x5FA0004		@ DATA XREF: sub_8004A4C:loc_8004A66r
					@ sub_8004AB8:loc_8004AEEr

@ =============== S U B	R O U T	I N E =======================================


sub_8004B9C:				@ CODE XREF: sub_8004C54+6p
		PUSH.W	{R0,R4-R11,LR}
		LDR	R5, =0x2000019C
		MOV	R8, R0
		LDR	R0, =0xE000EDFC
		MOVS	R4, #0
		MOV	R9, R1
		MOV	R10, R0
		LDR	R0, =0xA05F0003
		MOV	R11, R0
		B	loc_8004BB4
@ ---------------------------------------------------------------------------

loc_8004BB2:				@ CODE XREF: sub_8004B9C+90j
					@ sub_8004B9C+98j
		MOVS	R4, #1

loc_8004BB4:				@ CODE XREF: sub_8004B9C+14j
		MOV	R0, R11
		BL	sub_8004498
		MOVS	R1, #1
		MOV	R0, R10
		BL	sub_800446C
		BL	sub_8004204
		MOVS	R0, #1
		BL	sub_8006E24
		BL	sub_8005AAC
		MOV	R0, R8
		BL	sub_8006E24
		BL	sub_8005AB0
		MOV	R0, R9
		CBNZ	R0, loc_8004BE0
		MOVS	R0, #0x64

loc_8004BE0:				@ CODE XREF: sub_8004B9C+40j
		BL	sub_8006E24
		LDR	R0, [R5]
		ADDW	R6, R0,	#0x3E8

loc_8004BEA:				@ CODE XREF: sub_8004B9C+5Cj
		BL	sub_80049AC
		MOVS	R7, R0
		CMP	R7, #1
		BEQ	loc_8004BFA
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BPL	loc_8004BEA

loc_8004BFA:				@ CODE XREF: sub_8004B9C+56j
		MOV	R0, R11
		BL	sub_8004498
		CBZ	R4, loc_8004C12
		LDR	R0, =0x40040000
		MOVS	R1, #2
		BL	sub_800446C
		LDR	R0, =0x40040004
		MOVS	R1, #0xB1
		BL	sub_800446C

loc_8004C12:				@ CODE XREF: sub_8004B9C+64j
		MOVS	R1, #0
		MOV	R0, R10
		BL	sub_800446C
		CBNZ	R4, loc_8004C36
		MOVS	R0, #5
		BL	sub_8006E24
		MOV	R0, SP
		BL	sub_80044A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BMI	loc_8004BB2
		BL	sub_80049AC
		CMP	R0, #0
		BEQ	loc_8004BB2

loc_8004C36:				@ CODE XREF: sub_8004B9C+7Ej
		MOVS	R0, R7
		POP.W	{R1,R4-R11,PC}
@ End of function sub_8004B9C

@ ---------------------------------------------------------------------------
dword_8004C3C:	.long 0x2000019C	@ DATA XREF: sub_8004A4C+22r
					@ sub_8004AB8+6r ...
dword_8004C40:	.long 0xE000EDFC	@ DATA XREF: sub_8004A4C+2r
					@ sub_8004AB8+4r ...
dword_8004C44:	.long 0xA05F0003	@ DATA XREF: sub_80049AC+10r
					@ sub_80049D8r	...
dword_8004C48:	.long 0x40040000	@ DATA XREF: sub_8004AB8+8Er
					@ sub_8004B9C+66r
dword_8004C4C:	.long 0x40040004	@ DATA XREF: sub_8004AB8+96r
					@ sub_8004B9C+6Er

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8004C50:				@ CODE XREF: sub_8004C80+2Ep
		B	sub_8004A4C
@ End of function sub_8004C50

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004C54:				@ CODE XREF: sub_8004C68+12p
					@ sub_8004C80+20p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		BL	sub_8004B9C
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_8004A4C
@ End of function sub_8004C54


@ =============== S U B	R O U T	I N E =======================================


sub_8004C68:				@ CODE XREF: sub_8004C80+38p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		BL	sub_8004AB8
		CMP	R0, #1
		ITTT ne
		MOVNE	R1, R5
		MOVNE	R0, R4
		BLNE	sub_8004C54
		POP	{R4,R5,PC}
@ End of function sub_8004C68


@ =============== S U B	R O U T	I N E =======================================


sub_8004C80:				@ CODE XREF: sub_8004ED0+2Cp
		PUSH.W	{R4-R8,LR}
		MOV	R8, R2
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #1
		B	loc_8004C96
@ ---------------------------------------------------------------------------

loc_8004C8E:				@ CODE XREF: sub_8004C80+44j
		BL	sub_8005AAC
		BL	sub_800439C

loc_8004C96:				@ CODE XREF: sub_8004C80+Cj
		MOV	R0, R8
		CMP	R0, #2
		BNE	loc_8004CA6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_8004C54
		B	loc_8004CBC
@ ---------------------------------------------------------------------------

loc_8004CA6:				@ CODE XREF: sub_8004C80+1Aj
		CMP	R0, #1
		BNE	loc_8004CB4
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_8004C50
		B	loc_8004CBC
@ ---------------------------------------------------------------------------

loc_8004CB4:				@ CODE XREF: sub_8004C80+28j
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_8004C68

loc_8004CBC:				@ CODE XREF: sub_8004C80+24j
					@ sub_8004C80+32j
		MOVS	R7, R0
		CMP	R7, #1
		BEQ	loc_8004CC6
		SUBS	R6, R6,	#1
		BPL	loc_8004C8E

loc_8004CC6:				@ CODE XREF: sub_8004C80+40j
		BL	sub_8005AB0
		MOVS	R0, R7
		POP.W	{R4-R8,PC}
@ End of function sub_8004C80


@ =============== S U B	R O U T	I N E =======================================


sub_8004CD0:				@ CODE XREF: sub_8004F3C:loc_8004F90p
		PUSH.W	{R0,R1,R4-R9,LR}
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800664C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800664C
		LDR	R0, [SP,#0]
		MOVS.W	R7, #0xFFFFFFFF
		MOV	R8, R0
		LSLS	R0, R0,	#8
		LSRS	R0, R0,	#8
		STR	R0, [SP,#0]
		MOV	R4, R0
		BL	sub_800646C
		MOVS	R5, R0
		LDR	R0, [SP,#0]
		CMP	R0, R5
		IT cc
		MOVCC	R5, R0
		MOVS	R0, R5
		BL	sub_8006488
		MOVS	R6, R0
		BEQ	loc_8004D3E

loc_8004D0C:				@ CODE XREF: sub_8004CD0+68j
		CBZ	R4, loc_8004D3A
		CMP	R4, R5
		ITE cs
		MOVCS	R9, R5
		MOVCC	R9, R4
		LDR	R0, [SP,#4]
		MOVS	R3, R6
		MOV	R2, R8
		MOV	R1, R9
		BL	sub_8004798
		MOVS	R7, R0
		BMI	loc_8004D40
		LDR	R0, [SP,#4]
		SUBS	R4, R4,	R7
		MOVS	R1, R7
		ADDS	R0, R0,	R7
		STR	R0, [SP,#4]
		MOVS	R0, R6
		BL	sub_80065C4
		CMP	R7, R9
		BEQ	loc_8004D0C

loc_8004D3A:				@ CODE XREF: sub_8004CD0:loc_8004D0Cj
		LDR	R0, [SP,#0]
		SUBS	R7, R0,	R4

loc_8004D3E:				@ CODE XREF: sub_8004CD0+3Aj
		CBZ	R4, loc_8004D46

loc_8004D40:				@ CODE XREF: sub_8004CD0+54j
		MOVS	R0, R4
		BL	sub_80065E0

loc_8004D46:				@ CODE XREF: sub_8004CD0:loc_8004D3Ej
		CBZ	R6, loc_8004D4E
		MOVS	R0, R6
		BL	sub_80064CC

loc_8004D4E:				@ CODE XREF: sub_8004CD0:loc_8004D46j
		MOVS	R0, R7
		POP.W	{R1,R2,R4-R9,PC}
@ End of function sub_8004CD0


@ =============== S U B	R O U T	I N E =======================================


sub_8004D54:				@ CODE XREF: sub_8004DAC+72p
		PUSH.W	{R4-R10,LR}
		MOV	R8, R1
		MOVS	R4, R0
		MOV	R9, R2
		MOVS	R5, #0
		MOV	R10, R3
		MOV	R0, R10
		BL	sub_800667C
		MOVS	R6, #0

loc_8004D6A:				@ CODE XREF: sub_8004D54+24j
					@ sub_8004D54+48j
		BL	sub_8006684
		SUBS.W	R1, R8,	R0
		SUBS	R7, R1,	R6
		CBZ	R0, loc_8004D7E
		CMP	R7, #0x40
		BCC	loc_8004D6A
		MOVS	R0, #3
		BICS	R7, R0

loc_8004D7E:				@ CODE XREF: sub_8004D54+20j
		CBNZ	R5, loc_8004D98
		MOV	R0, R10
		ADDS	R3, R0,	R6
		MOV	R2, R9
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_8004858
		MOVS	R5, R0
		CMP	R5, R7
		IT eq
		MOVEQ	R5, #0
		ADDS	R4, R4,	R7

loc_8004D98:				@ CODE XREF: sub_8004D54:loc_8004D7Ej
		ADDS	R6, R6,	R7
		CMP	R6, R8
		BNE	loc_8004D6A
		CBZ	R5, loc_8004DA6
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_8004DA8
@ ---------------------------------------------------------------------------

loc_8004DA6:				@ CODE XREF: sub_8004D54+4Aj
		MOV	R0, R8

locret_8004DA8:				@ CODE XREF: sub_8004D54+50j
		POP.W	{R4-R10,PC}
@ End of function sub_8004D54


@ =============== S U B	R O U T	I N E =======================================


sub_8004DAC:				@ CODE XREF: sub_8004F3C:loc_8004F96p
		PUSH.W	{R0,R1,R4-R10,LR}
		MOVS.W	R0, #0xFFFFFFFF
		MOV	R8, R0
		MOVS	R1, #4
		ADD	R0, SP,	#4
		MOV	R7, R8
		BL	sub_800664C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800664C
		LDR	R0, [SP,#0]
		MOV	R9, R0
		LSLS	R0, R0,	#8
		LSRS	R0, R0,	#8
		STR	R0, [SP,#0]
		MOV	R4, R0
		BL	sub_800646C
		MOVS	R5, R0
		LDR	R0, [SP,#0]
		CMP	R0, R5
		IT cc
		MOVCC	R5, R0
		MOVS	R0, R5
		BL	sub_8006488
		MOVS	R6, R0
		BNE	loc_8004E08

loc_8004DEC:				@ CODE XREF: sub_8004DAC+78j
					@ sub_8004DAC+80j
		CBZ	R4, loc_8004DF4
		MOVS	R0, R4
		BL	sub_800665C

loc_8004DF4:				@ CODE XREF: sub_8004DAC:loc_8004DECj
		CBZ	R6, loc_8004DFC

loc_8004DF6:				@ CODE XREF: sub_8004DAC+84j
		MOVS	R0, R6
		BL	sub_80064CC

loc_8004DFC:				@ CODE XREF: sub_8004DAC:loc_8004DF4j
		MOVS	R0, R7
		POP.W	{R1,R2,R4-R10,PC}
@ ---------------------------------------------------------------------------

loc_8004E02:				@ CODE XREF: sub_8004DAC+7Cj
		LDR	R0, [SP,#4]
		ADDS	R0, R0,	R7
		STR	R0, [SP,#4]

loc_8004E08:				@ CODE XREF: sub_8004DAC+3Ej
		CBZ	R4, loc_8004E2E
		CMP	R4, R5
		ITE cs
		MOVCS	R10, R5
		MOVCC	R10, R4
		LDR	R0, [SP,#4]
		SUBS.W	R4, R4,	R10
		MOVS	R3, R6
		MOV	R2, R9
		MOV	R1, R10
		BL	sub_8004D54
		MOVS	R7, R0
		BMI	loc_8004DEC
		CMP	R7, R10
		BEQ	loc_8004E02
		MOV	R7, R8
		B	loc_8004DEC
@ ---------------------------------------------------------------------------

loc_8004E2E:				@ CODE XREF: sub_8004DAC:loc_8004E08j
		LDR	R7, [SP,#0]
		B	loc_8004DF6
@ End of function sub_8004DAC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004E34:				@ CODE XREF: sub_8004F3C:loc_8004F9Cp
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0xA4
		MOVS	R4, #0
		B	loc_8004E46
@ ---------------------------------------------------------------------------

loc_8004E3C:				@ CODE XREF: sub_8004E34+20j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0x84
		STRB	R1, [R0,R4]
		ADDS	R4, R4,	#1

loc_8004E46:				@ CODE XREF: sub_8004E34+6j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800664C
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0xFF
		BNE	loc_8004E3C
		MOVS	R2, R4
		ADD	R1, SP,	#4
		ADD	R0, SP,	#0x84
		BL	sub_8004918
		MOVS	R5, R0
		LSLS	R1, R4,	#2
		ADD	R0, SP,	#4
		BL	sub_80065C4
		MOVS	R0, R5
		ADD	SP, SP,	#0xA4
		POP	{R4,R5,PC}
@ End of function sub_8004E34


@ =============== S U B	R O U T	I N E =======================================


sub_8004E70:				@ CODE XREF: sub_8004F3C:loc_8004FA2p
		PUSH	{R4,LR}
		SUB	SP, SP,	#0xA8
		MOVS	R4, #0
		B	loc_8004E92
@ ---------------------------------------------------------------------------

loc_8004E78:				@ CODE XREF: sub_8004E70+30j
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800664C
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0x88
		STRB	R1, [R0,R4]
		LDR	R1, [SP,#4]
		ADD	R0, SP,	#8
		STR.W	R1, [R0,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_8004E92:				@ CODE XREF: sub_8004E70+6j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800664C
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0xFF
		BNE	loc_8004E78
		MOVS	R2, R4
		ADD	R1, SP,	#8
		ADD	R0, SP,	#0x88
		BL	sub_8004958
		ADD	SP, SP,	#0xA8
		POP	{R4,PC}
@ End of function sub_8004E70


@ =============== S U B	R O U T	I N E =======================================


sub_8004EB0:				@ CODE XREF: sub_8004F3C:loc_8004FA8p
		PUSH	{R0,LR}
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800664C
		LDRB.W	R0, [SP,#0]
		BL	sub_80049E8
		POP	{R1,PC}
@ End of function sub_8004EB0


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8004EC4:				@ CODE XREF: sub_8004F3C:loc_8004FAEp
		B	sub_8004A14
@ End of function sub_8004EC4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8004EC8:				@ CODE XREF: sub_8004F3C:loc_8004FB4p
		B	sub_80049D8
@ End of function sub_8004EC8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8004ECC:				@ CODE XREF: sub_8004F3C:loc_8004FBAp
		B	sub_80049AC
@ End of function sub_8004ECC

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8004ED0:				@ CODE XREF: sub_8004F3C:loc_8004FC0p
		PUSH	{R0-R3,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		MOVS	R1, #0x14
		STR	R1, [SP,#8]
		STR	R0, [SP,#0xC]
		B	loc_8004EE8
@ ---------------------------------------------------------------------------

loc_8004EDE:				@ CODE XREF: sub_8004ED0+44j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4

loc_8004EE4:				@ CODE XREF: sub_8004ED0+56j
					@ sub_8004ED0+5Ej
		BL	sub_800664C

loc_8004EE8:				@ CODE XREF: sub_8004ED0+Cj
					@ sub_8004ED0+68j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800664C
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_8004F04
		LDR	R2, [SP,#4]
		LDR	R1, [SP,#0xC]
		LDR	R0, [SP,#8]
		BL	sub_8004C80
		ADD	SP, SP,	#0x10
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_8004F04:				@ CODE XREF: sub_8004ED0+24j
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800664C
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_8004EDE
		CMP	R0, #2
		BEQ	loc_8004F20
		CMP	R0, #3
		BEQ	loc_8004F28
		B	loc_8004F30
@ ---------------------------------------------------------------------------

loc_8004F20:				@ CODE XREF: sub_8004ED0+48j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#8
		B	loc_8004EE4
@ ---------------------------------------------------------------------------

loc_8004F28:				@ CODE XREF: sub_8004ED0+4Cj
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0xC
		B	loc_8004EE4
@ ---------------------------------------------------------------------------

loc_8004F30:				@ CODE XREF: sub_8004ED0+4Ej
		LDRB.W	R0, [SP,#0]
		BL	sub_800665C
		B	loc_8004EE8
@ End of function sub_8004ED0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004F3C:				@ CODE XREF: sub_8005570+56p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x44
		MOVS	R1, #2
		MOVS	R5, R0
		MOV	R0, SP
		BL	sub_800664C
		LDRH.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_800664C
		LDRH.W	R0, [SP,#0]
		CMP	R0, #4
		BCC	loc_8004F64
		ADD	R0, SP,	#4
		BL	sub_8008EB4
		B	loc_8004F66
@ ---------------------------------------------------------------------------

loc_8004F64:				@ CODE XREF: sub_8004F3C+1Ej
		LDR	R0, =0x30000FF

loc_8004F66:				@ CODE XREF: sub_8004F3C+26j
		LDR	R1, =0x2000004C
		CMP	R5, #0x64
		STR	R0, [R1]
		BEQ	loc_8004F90
		CMP	R5, #0x65
		BEQ	loc_8004F96
		CMP	R5, #0x6E
		BEQ	loc_8004F9C
		CMP	R5, #0x6F
		BEQ	loc_8004FA2
		CMP	R5, #0x79
		BEQ	loc_8004FA8
		CMP	R5, #0x7A
		BEQ	loc_8004FAE
		CMP	R5, #0x7B
		BEQ	loc_8004FB4
		CMP	R5, #0x7C
		BEQ	loc_8004FBA
		CMP	R5, #0x82
		BEQ	loc_8004FC0
		B	loc_8004FC6
@ ---------------------------------------------------------------------------

loc_8004F90:				@ CODE XREF: sub_8004F3C+30j
		BL	sub_8004CD0
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004F96:				@ CODE XREF: sub_8004F3C+34j
		BL	sub_8004DAC
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004F9C:				@ CODE XREF: sub_8004F3C+38j
		BL	sub_8004E34
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FA2:				@ CODE XREF: sub_8004F3C+3Cj
		BL	sub_8004E70
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FA8:				@ CODE XREF: sub_8004F3C+40j
		BL	sub_8004EB0
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FAE:				@ CODE XREF: sub_8004F3C+44j
		BL	sub_8004EC4
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FB4:				@ CODE XREF: sub_8004F3C+48j
		BL	sub_8004EC8
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FBA:				@ CODE XREF: sub_8004F3C+4Cj
		BL	sub_8004ECC
		B	loc_8004FC4
@ ---------------------------------------------------------------------------

loc_8004FC0:				@ CODE XREF: sub_8004F3C+50j
		BL	sub_8004ED0

loc_8004FC4:				@ CODE XREF: sub_8004F3C+58j
					@ sub_8004F3C+5Ej ...
		MOVS	R4, R0

loc_8004FC6:				@ CODE XREF: sub_8004F3C+52j
		MOVS	R0, R4
		BL	sub_800662C
		ADD	SP, SP,	#0x44
		POP	{R4,R5,PC}
@ End of function sub_8004F3C

@ ---------------------------------------------------------------------------
dword_8004FD0:	.long 0x30000FF		@ DATA XREF: sub_8004F3C:loc_8004F64r
dword_8004FD4:	.long 0x2000004C	@ DATA XREF: sub_8004F3C:loc_8004F66r

@ =============== S U B	R O U T	I N E =======================================


sub_8004FD8:				@ CODE XREF: sub_800588C:loc_8005A08p
		PUSH	{R0,R4,LR}
		MOV	R0, SP
		BL	sub_8005C8C
		MOVS	R4, R0
		LDR	R0, [SP,#0]
		UXTH	R0, R0
		BL	sub_8006620
		LDR	R1, [SP,#0]
		MOVS	R0, R4
		BL	sub_80065C4
		POP	{R0,R4,PC}
@ End of function sub_8004FD8

@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_3. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8004FF8:				@ CODE XREF: sub_800588C:loc_800595Cp
		PUSH.W	{R0,R1,R4-R11,LR}
		STR	R1, [SP,#4]
		MOV	R8, R0
		MOVS	R1, #2
		MOV	R0, SP
		MOVS	R6, #0
		MOVS	R5, #0
		BL	sub_800664C
		LDRH.W	R0, [SP,#0]
		ADDS	R0, R0,	#7
		ASRS	R0, R0,	#3
		MOV	R9, R0
		MOVS	R0, #3
		MUL.W	R0, R9,	R0
		BL	sub_8006488
		MOVS	R4, R0
		ADDS.W	R10, R9, R4
		ADDS.W	R11, R9, R10
		CBNZ	R4, loc_800503E
		MOV	R0, R9
		LSLS	R0, R0,	#1
		BL	sub_800665C
		MOV	R0, R9
		BL	sub_80065E0
		MOVS	R5, #6
		B	loc_80050CA
@ ---------------------------------------------------------------------------

loc_800503E:				@ CODE XREF: sub_8004FF8+32j
		MOV	R1, R9
		MOV	R0, R10
		BL	sub_800664C
		MOV	R1, R9
		MOVS	R0, R4
		BL	sub_800667C

loc_800504E:				@ CODE XREF: sub_8004FF8+64j
					@ sub_8004FF8+D0j
		BL	sub_8006684
		SUBS.W	R1, R9,	R0
		SUBS	R7, R1,	R6
		CBZ	R0, loc_8005062
		CMP	R7, #0xFF
		BLE	loc_800504E
		MOVS	R0, #0x3F
		BICS	R7, R0

loc_8005062:				@ CODE XREF: sub_8004FF8+60j
		LSLS	R3, R7,	#3
		CMP	R1, R9
		BNE	loc_8005076
		LDRH.W	R0, [SP,#0]
		ADDS	R0, R0,	#7
		LSLS	R0, R0,	#0x1D
		LSRS	R0, R0,	#0x1D
		SUBS	R0, R0,	#7
		ADDS	R3, R3,	R0

loc_8005076:				@ CODE XREF: sub_8004FF8+6Ej
		UXTB	R5, R5
		CMP	R5, #0
		BNE	loc_80050A8
		LDR	R0, =0x2000102A
		LDRB	R0, [R0]
		CBNZ	R0, loc_8005094
		MOV	R0, R11
		ADDS	R2, R0,	R6
		MOV	R0, R10
		ADDS	R1, R0,	R6
		ADDS	R0, R4,	R6
		BL	sub_8005FF8

loc_8005090:				@ CODE XREF: sub_8004FF8+AEj
		MOVS	R5, R0
		B	loc_80050B6
@ ---------------------------------------------------------------------------

loc_8005094:				@ CODE XREF: sub_8004FF8+88j
		CMP	R0, #1
		BNE	loc_80050B6
		MOV	R0, R11
		ADDS	R2, R0,	R6
		MOV	R0, R10
		ADDS	R1, R0,	R6
		ADDS	R0, R4,	R6
		BL	sub_8006228
		B	loc_8005090
@ ---------------------------------------------------------------------------

loc_80050A8:				@ CODE XREF: sub_8004FF8+82j
		ADDS	R3, R3,	#7
		ASRS	R2, R3,	#3
		MOVS	R1, #0
		MOV	R0, R11
		ADDS	R0, R0,	R6
		BL	sub_8008F68

loc_80050B6:				@ CODE XREF: sub_8004FF8+9Aj
					@ sub_8004FF8+9Ej
		LDR	R0, [SP,#4]
		CBNZ	R0, loc_80050C4
		MOVS	R1, R7
		MOV	R0, R11
		ADDS	R0, R0,	R6
		BL	sub_8006610

loc_80050C4:				@ CODE XREF: sub_8004FF8+C0j
		ADDS	R6, R6,	R7
		CMP	R6, R9
		BNE	loc_800504E

loc_80050CA:				@ CODE XREF: sub_8004FF8+44j
		LDR	R0, =0x2000101C
		LDRB	R1, [R0]
		CBNZ	R1, loc_80050D2
		STRB	R5, [R0]

loc_80050D2:				@ CODE XREF: sub_8004FF8+D6j
		LDR	R0, [SP,#4]
		CBNZ	R0, loc_80050EC
		MOV	R0, R8
		CMP	R0, #0xCF
		BEQ	loc_80050E6
		CMP	R0, #0xD5
		BEQ	loc_80050E6
		BL	sub_8006644
		B	loc_80050EC
@ ---------------------------------------------------------------------------

loc_80050E6:				@ CODE XREF: sub_8004FF8+E2j
					@ sub_8004FF8+E6j
		UXTB	R0, R5
		BL	sub_8006618

loc_80050EC:				@ CODE XREF: sub_8004FF8+DCj
					@ sub_8004FF8+ECj
		MOVS	R0, R4
		BL	sub_80064CC
		POP.W	{R0,R1,R4-R11,PC}
@ End of function sub_8004FF8

@ ---------------------------------------------------------------------------
		.align 4
dword_80050F8:	.long 0x2000101C	@ DATA XREF: sub_8004FF8:loc_80050CAr
dword_80050FC:	.long 0x2000102A	@ DATA XREF: sub_8004FF8+84r

@ =============== S U B	R O U T	I N E =======================================


sub_8005100:				@ CODE XREF: sub_8005158+72p
		PUSH.W	{R4-R10,LR}
		LDRH.W	R7, [SP,#0x20]
		LDRH.W	R5, [SP,#0x2C]
		MOVS	R4, R2
		MOV	R8, R0
		LDRH.W	R0, [SP,#0x24]
		MOV	R9, R1
		MOV	R10, R3
		ADDS	R6, R4,	R0
		BL	sub_8007136
		BL	sub_8005AA8
		BL	sub_8005AB0

loc_8005126:				@ CODE XREF: sub_8005100+4Cj
		MOVS	R0, R7
		SUBS	R7, R0,	#1
		LSLS	R0, R0,	#0x10
		BEQ	loc_800514E
		MOV	R0, R10
		LSLS	R3, R0,	#3
		MOVS	R2, R4
		MOV	R1, R9
		MOV	R0, R8
		BL	sub_8005FF8
		LDRB	R1, [R6,#1]
		LDRB	R0, [R6]
		ORRS.W	R0, R0,	R1,LSL#8
		LDRH.W	R1, [SP,#0x28]
		ANDS	R1, R0
		CMP	R1, R5
		BNE	loc_8005126

loc_800514E:				@ CODE XREF: sub_8005100+2Cj
		BL	sub_8006A30
		POP.W	{R4-R10,PC}
@ End of function sub_8005100

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005158:				@ CODE XREF: sub_800588C:loc_80059B6p
		PUSH	{R4-R6,LR}
		SUB	SP, SP,	#0x14
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#4
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#8
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#0xC
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#0x10
		BL	sub_800664C
		LDRH.W	R0, [SP,#0]
		MOVS	R1, #3
		MULS	R0, R1
		ADDS	R0, #9
		BL	sub_8006488
		MOVS	R4, R0
		LDRH.W	R0, [SP,#0]
		ADDS	R5, R4,	R0
		ADDS	R6, R5,	R0
		MOV	R1, R0
		MOVS	R0, R4
		BL	sub_800664C
		LDRH.W	R1, [SP,#0]
		MOVS	R0, R5
		BL	sub_800664C
		LDR	R3, [SP,#0x10]
		LDR	R2, [SP,#0xC]
		LDR	R1, [SP,#8]
		LDR	R0, [SP,#4]
		UXTH	R2, R2
		UXTH	R1, R1
		UXTH	R0, R0
		UXTH	R3, R3
		PUSH	{R0-R3}
		LDRH.W	R3, [SP,#0x10]
		MOVS	R0, R5
		MOVS	R2, R6
		MOVS	R1, R4
		BL	sub_8005100
		LDRH.W	R1, [SP,#0x10]
		B	loc_80052AC
@ End of function sub_8005158


@ =============== S U B	R O U T	I N E =======================================


sub_80051D4:				@ CODE XREF: sub_8005230+72p
		PUSH.W	{R4-R10,LR}
		LDR	R6, =0x2000019C
		LDRH.W	R7, [SP,#0x20]
		MOVS	R4, R2
		MOV	R8, R0
		LDRH.W	R0, [SP,#0x24]
		MOV	R9, R1
		MOV	R10, R3
		ADDS	R5, R4,	R0
		MOVS	R0, #1
		BL	sub_8006E24
		BL	sub_8005AA8
		BL	sub_8005AB0
		LDR	R0, [R6]
		ADDS	R7, R0,	R7

loc_80051FE:				@ CODE XREF: sub_80051D4+52j
		MOV	R0, R10
		LSLS	R3, R0,	#3
		MOVS	R2, R4
		MOV	R1, R9
		MOV	R0, R8
		BL	sub_8005FF8
		LDRB	R1, [R5,#1]
		LDRB	R0, [R5]
		ORRS.W	R0, R0,	R1,LSL#8
		LDRH.W	R1, [SP,#0x28]
		ANDS	R1, R0
		LDRH.W	R0, [SP,#0x2C]
		CMP	R1, R0
		BEQ	locret_8005228
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BPL	loc_80051FE

locret_8005228:				@ CODE XREF: sub_80051D4+4Cj
		POP.W	{R4-R10,PC}
@ End of function sub_80051D4

@ ---------------------------------------------------------------------------
dword_800522C:	.long 0x2000019C	@ DATA XREF: sub_80051D4+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8005230:				@ CODE XREF: sub_800588C:loc_80059BCp
		PUSH	{R4-R6,LR}
		SUB	SP, SP,	#0x14
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#4
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#8
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#0xC
		BL	sub_800664C
		MOVS	R1, #2
		ADD	R0, SP,	#0x10
		BL	sub_800664C
		LDRH.W	R0, [SP,#0]
		MOVS	R1, #3
		MULS	R0, R1
		ADDS	R0, #9
		BL	sub_8006488
		MOVS	R4, R0
		LDRH.W	R0, [SP,#0]
		ADDS	R5, R4,	R0
		ADDS	R6, R5,	R0
		MOV	R1, R0
		MOVS	R0, R4
		BL	sub_800664C
		LDRH.W	R1, [SP,#0]
		MOVS	R0, R5
		BL	sub_800664C
		LDR	R3, [SP,#0x10]
		LDR	R2, [SP,#0xC]
		LDR	R1, [SP,#8]
		LDR	R0, [SP,#4]
		UXTH	R2, R2
		UXTH	R1, R1
		UXTH	R0, R0
		UXTH	R3, R3
		PUSH	{R0-R3}
		LDRH.W	R3, [SP,#0x10]
		MOVS	R0, R5
		MOVS	R2, R6
		MOVS	R1, R4
		BL	sub_80051D4
		LDRH.W	R1, [SP,#0x10]
		NOP

loc_80052AC:				@ CODE XREF: sub_8005158+7Aj
		MOVS	R0, R6
		BL	sub_80065C4
		MOVS	R0, R4
		BL	sub_80064CC
		ADD	SP, SP,	#0x24
		POP	{R4-R6,PC}
@ End of function sub_8005230


@ =============== S U B	R O U T	I N E =======================================


sub_80052BC:				@ CODE XREF: sub_800588C:loc_800598Cp
		PUSH	{R0,R1,LR}
		BL	sub_8005E30
		STRH.W	R0, [SP,#0]
		BL	sub_8005E48
		STRB.W	R0, [SP,#2]
		BL	sub_8005E54
		STRB.W	R0, [SP,#3]
		BL	sub_8005E5C
		STRB.W	R0, [SP,#4]
		BL	sub_8005E38
		STRB.W	R0, [SP,#5]
		BL	sub_8005E68
		STRB.W	R0, [SP,#6]
		BL	sub_8005E78
		MOVS	R1, #8
		STRB.W	R0, [SP,#7]
		B	loc_80053C4
@ End of function sub_80052BC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80052FC:				@ CODE XREF: sub_800588C:loc_8005A14p
		PUSH	{LR}
		MOVS	R0, #4
		BL	sub_8006620
		LDR	R0, =0x2EE3
		BL	sub_8006620
		MOVS.W	R0, #0x800
		LDR.W	LR, [SP+0],#4
		B.W	sub_8006620
@ End of function sub_80052FC

@ ---------------------------------------------------------------------------
		.align 4
dword_8005318:	.long 0x2EE3		@ DATA XREF: sub_80052FC+8r

@ =============== S U B	R O U T	I N E =======================================


sub_800531C:				@ CODE XREF: sub_800588C:loc_8005986p
		LDR	R0, =byte_800FC00
		MOVS.W	R1, #0x100
		B.W	sub_80065C4
@ End of function sub_800531C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005328:				@ CODE XREF: sub_8005344+16p
		PUSH	{R4,LR}

loc_800532A:				@ CODE XREF: sub_8005328+16j
		LDRB	R3, [R1]
		LDRB	R4, [R0]
		ANDS	R4, R3
		CMP	R4, R3
		ITT ne
		MOVNE	R0, #0
		POPNE	{R4,PC}
		ADDS	R1, R1,	#1
		ADDS	R0, R0,	#1
		SUBS	R2, R2,	#1
		BNE	loc_800532A
		MOVS	R0, #1
		POP	{R4,PC}
@ End of function sub_8005328


@ =============== S U B	R O U T	I N E =======================================


sub_8005344:				@ CODE XREF: sub_800588C:loc_8005992p
		PUSH	{R4,LR}
		LDR	R4, =byte_800FC00
		SUB	SP, SP,	#0x100
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_800664C
		LSRS	R2, R4,	#0x13
		MOV	R1, SP
		MOVS	R0, R4
		BL	sub_8005328
		CBZ	R0, loc_800536A
		LSRS	R2, R4,	#0x13
		MOV	R1, SP
		MOVS	R0, R4
		BL	sub_8005CA8

loc_800536A:				@ CODE XREF: sub_8005344+1Aj
		MOVS	R0, #0
		BL	nullsub_3
		MOVS	R0, #0
		BL	sub_8006618
		ADD	SP, SP,	#0x100
		POP	{R4,PC}
@ End of function sub_8005344

@ ---------------------------------------------------------------------------
		.align 4
off_800537C:	.long byte_800FC00	@ DATA XREF: sub_800531Cr
					@ sub_8005344+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8005380:				@ CODE XREF: sub_800588C:loc_8005A1Ap
		LDR	R0, =unk_8009254
		MOVS	R1, #4
		B.W	sub_80065C4
@ End of function sub_8005380

@ ---------------------------------------------------------------------------
off_8005388:	.long unk_8009254	@ DATA XREF: sub_8005380r

@ =============== S U B	R O U T	I N E =======================================


sub_800538C:				@ CODE XREF: sub_800588C:loc_8005A20p
		PUSH	{LR}
		SUB	SP, SP,	#0x20
		MOVS	R2, #0x20
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_8008F68
		LDR	R1, =0x88EA5833
		MOV	R0, SP
		BL	sub_8008EA0
		MOVS	R0, #0
		STRB.W	R0, [SP,#4]
		MOVS	R1, #0x20
		MOV	R0, SP
		BL	sub_80065C4
		ADD	SP, SP,	#0x20
		POP	{PC}
@ End of function sub_800538C

@ ---------------------------------------------------------------------------
dword_80053B4:	.long 0x88EA5833	@ DATA XREF: sub_800538C+Er

@ =============== S U B	R O U T	I N E =======================================


sub_80053B8:				@ CODE XREF: sub_800588C:loc_80059C8p
		PUSH	{R0,R1,LR}
		MOV	R0, SP
		BL	sub_8006034
		MOVS	R1, #6
		NOP

loc_80053C4:				@ CODE XREF: sub_80052BC+3Cj
		MOV	R0, SP

loc_80053C6:				@ CODE XREF: sub_800545C+16j
		BL	sub_80065C4
		POP	{R0,R1,PC}
@ End of function sub_80053B8


@ =============== S U B	R O U T	I N E =======================================


sub_80053CC:				@ CODE XREF: sub_800588C:loc_8005980p
		PUSH	{LR}
		BL	sub_8005D84
		LDR.W	LR, [SP+0],#4
		B.W	sub_800662C
@ End of function sub_80053CC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80053DC:				@ CODE XREF: sub_800588C:loc_8005A26p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x84
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800664C
		MOVS	R5, #0
		MOVS	R4, #0
		B	loc_8005408
@ ---------------------------------------------------------------------------

loc_80053EE:				@ CODE XREF: sub_80053DC+30j
		LSLS	R0, R0,	#0x1F
		BPL	loc_8005400
		MOVS	R0, R5
		BL	sub_8006048
		ADD	R1, SP,	#4
		STR.W	R0, [R1,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_8005400:				@ CODE XREF: sub_80053DC+14j
		LDR	R0, [SP,#0]
		ADDS	R5, R5,	#1
		LSRS	R0, R0,	#1
		STR	R0, [SP,#0]

loc_8005408:				@ CODE XREF: sub_80053DC+10j
		LDR	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_80053EE
		B	loc_800544C
@ End of function sub_80053DC


@ =============== S U B	R O U T	I N E =======================================


sub_8005410:				@ CODE XREF: sub_800588C+8p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x84
		MOVS	R4, #0
		MOVS	R5, #0
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800664C
		ADD	R1, SP,	#4
		B	loc_8005444
@ ---------------------------------------------------------------------------

loc_8005424:				@ CODE XREF: sub_8005410+38j
		LSLS	R0, R0,	#0x1F
		BPL	loc_800543C
		MOVS.W	R0, #0xFFFFFFFF
		CMP	R5, #2
		ITT cc
		LDRCC	R0, =0x20000060
		LDRCC.W	R0, [R0,R5,LSL#2]
		STR.W	R0, [R1,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_800543C:				@ CODE XREF: sub_8005410+16j
		LDR	R0, [SP,#0]
		ADDS	R5, R5,	#1
		LSRS	R0, R0,	#1
		STR	R0, [SP,#0]

loc_8005444:				@ CODE XREF: sub_8005410+12j
		LDR	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_8005424
		NOP

loc_800544C:				@ CODE XREF: sub_80053DC+32j
		LSLS	R1, R4,	#2
		ADD	R0, SP,	#4
		BL	sub_80065C4
		ADD	SP, SP,	#0x84
		POP	{R4,R5,PC}
@ End of function sub_8005410

@ ---------------------------------------------------------------------------
dword_8005458:	.long 0x20000060	@ DATA XREF: sub_8005410+20r

@ =============== S U B	R O U T	I N E =======================================


sub_800545C:				@ CODE XREF: sub_800588C:loc_8005A2Cp
		PUSH	{R0,R1,LR}
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800664C
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800664C
		LDR	R1, [SP,#4]
		LDR	R0, [SP,#0]
		B	loc_80053C6
@ End of function sub_800545C


@ =============== S U B	R O U T	I N E =======================================


sub_8005474:				@ CODE XREF: sub_800588C:loc_80059C2p
		PUSH	{LR}
		BL	sub_800646C
		LDR.W	LR, [SP+0],#4
		B.W	sub_800662C
@ End of function sub_8005474

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005484:				@ CODE XREF: sub_800588C:loc_80059FCp
		LDR	R0, =byte_800F800
		MOVS.W	R1, #0x100
		B.W	sub_80065C4
@ End of function sub_8005484

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005490:				@ CODE XREF: sub_800588C:loc_8005A02p
		PUSH	{LR}
		SUB	SP, SP,	#0x100
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_800664C
		LDR	R0, =byte_800F800
		MOVS.W	R2, #0x100
		MOV	R1, SP
		BL	sub_8005CA8
		ADD	SP, SP,	#0x100
		POP	{PC}
@ End of function sub_8005490

@ ---------------------------------------------------------------------------
		.align 0x10
off_80054B0:	.long byte_800F800	@ DATA XREF: sub_8005484r
					@ sub_8005490+Er

@ =============== S U B	R O U T	I N E =======================================


sub_80054B4:				@ CODE XREF: sub_800588C:loc_8005A32p
		PUSH	{R0,R1,LR}
		MOVS	R1, #1
		ADD	R0, SP,	#4
		BL	sub_800664C
		STR	R0, [SP,#0]
		CBNZ	R0, locret_80054E6
		LDRB.W	R0, [SP,#4]
		CMP	R0, #0xFE
		BEQ	loc_80054D2
		CMP	R0, #0xFF
		BNE	loc_80054D8
		MOVS	R0, #3
		B	loc_80054DC
@ ---------------------------------------------------------------------------

loc_80054D2:				@ CODE XREF: sub_80054B4+14j
		LDR	R0, =0x2000102A
		LDRB	R0, [R0]
		B	loc_80054DC
@ ---------------------------------------------------------------------------

loc_80054D8:				@ CODE XREF: sub_80054B4+18j
		BL	sub_8005A7C

loc_80054DC:				@ CODE XREF: sub_80054B4+1Cj
					@ sub_80054B4+22j
		STR	R0, [SP,#0]
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_80065C4

locret_80054E6:				@ CODE XREF: sub_80054B4+Cj
		POP	{R0,R1,PC}
@ End of function sub_80054B4

@ ---------------------------------------------------------------------------
dword_80054E8:	.long 0x2000102A	@ DATA XREF: sub_80054B4:loc_80054D2r

@ =============== S U B	R O U T	I N E =======================================


sub_80054EC:				@ CODE XREF: sub_800588C:loc_800596Ep
		PUSH	{R0,LR}
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800664C
		LDR	R1, =0xFFFF
		LDRH.W	R0, [SP,#0]
		CMP	R0, R1
		ITT eq
		MOVEQ	R0, #0
		STRHEQ.W R0, [SP,#0]
		LDRH.W	R0, [SP,#0]
		MOVS.W	R1, #0x3E8
		MULS	R0, R1
		BL	sub_8005F04
		POP	{R0,PC}
@ End of function sub_80054EC

@ ---------------------------------------------------------------------------
		.align 4
dword_8005518:	.long 0xFFFF		@ DATA XREF: sub_80054EC+Ar

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800551C:				@ CODE XREF: sub_800588C:loc_8005974p
		B.W	sub_8005AAC
@ End of function sub_800551C


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005520:				@ CODE XREF: sub_800588C:loc_800597Ap
		B.W	sub_8005AB0
@ End of function sub_8005520


@ =============== S U B	R O U T	I N E =======================================


sub_8005524:				@ CODE XREF: sub_800588C:loc_8005962p
		PUSH	{R0,R4,LR}
		MOVS	R1, #1
		MOV	R0, SP
		MOVS	R4, #1
		BL	sub_800664C
		MOV	R1, R4
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800664C
		MOVS	R0, #2
		BL	sub_800665C
		CBNZ	R0, locret_8005568
		LDRB.W	R0, [SP,#0]
		LDRB.W	R1, [SP,#1]
		ORRS.W	R0, R1,	R0,LSL#8
		LDR	R1, =0x101
		CMP	R0, R1
		BEQ	loc_8005560
		LDR	R1, =0x301
		CMP	R0, R1
		BEQ	loc_8005560
		LDR	R1, =0x601
		CMP	R0, R1
		BNE	loc_8005562

loc_8005560:				@ CODE XREF: sub_8005524+2Ej
					@ sub_8005524+34j
		LDR	R4, =0x3FF

loc_8005562:				@ CODE XREF: sub_8005524+3Aj
		MOVS	R0, R4
		BL	sub_800662C

locret_8005568:				@ CODE XREF: sub_8005524+1Cj
		POP	{R0,R4,PC}
@ End of function sub_8005524

@ ---------------------------------------------------------------------------
		.align 4
dword_800556C:	.long 0x3FF		@ DATA XREF: sub_8005524:loc_8005560r

@ =============== S U B	R O U T	I N E =======================================


sub_8005570:				@ CODE XREF: sub_800588C:loc_8005968p
		PUSH	{R0,LR}
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#2
		BL	sub_800664C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#3
		BL	sub_800664C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800664C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800664C
		LDRB.W	R0, [SP,#0]
		LDRB.W	R1, [SP,#1]
		ORRS.W	R0, R1,	R0,LSL#8
		LDR	R1, =0x101
		CMP	R0, R1
		BEQ	loc_80055B6
		LDR	R1, =0x301
		CMP	R0, R1
		BEQ	loc_80055B6
		LDR	R1, =0x601
		CMP	R0, R1
		BNE	locret_80055CA

loc_80055B6:				@ CODE XREF: sub_8005570+38j
					@ sub_8005570+3Ej
		LDRB.W	R3, [SP,#1]
		LDRB.W	R2, [SP,#0]
		LDRB.W	R1, [SP,#3]
		LDRB.W	R0, [SP,#2]
		BL	sub_8004F3C

locret_80055CA:				@ CODE XREF: sub_8005570+44j
		POP	{R0,PC}
@ End of function sub_8005570

@ ---------------------------------------------------------------------------
dword_80055CC:	.long 0x101		@ DATA XREF: sub_8005524+2Ar
					@ sub_8005570+34r
dword_80055D0:	.long 0x301		@ DATA XREF: sub_8005524+30r
					@ sub_8005570+3Ar
dword_80055D4:	.long 0x601		@ DATA XREF: sub_8005524+36r
					@ sub_8005570+40r

@ =============== S U B	R O U T	I N E =======================================


sub_80055D8:				@ CODE XREF: sub_8005630+2p
					@ sub_8005648+2p ...
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_80055E0
@ ---------------------------------------------------------------------------

loc_80055DE:				@ CODE XREF: sub_80055D8+16j
		ADDS	R0, R0,	#1

loc_80055E0:				@ CODE XREF: sub_80055D8+4j
		CMP	R0, #4
		BCS	loc_80055F2
		LDR	R2, =0x20000068
		ADDS.W	R2, R2,	R0,LSL#4
		LDRH	R2, [R2,#0xA]
		CMP	R2, R1
		BNE	loc_80055DE
		BX	LR
@ ---------------------------------------------------------------------------

loc_80055F2:				@ CODE XREF: sub_80055D8+Aj
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ End of function sub_80055D8


@ =============== S U B	R O U T	I N E =======================================


sub_80055F8:				@ CODE XREF: sub_8005660+82p
		PUSH	{R4-R7,LR}
		LDRB.W	R5, [SP,#0x14]
		MOVS	R4, R0
		MOVS	R0, #0
		B	loc_8005606
@ ---------------------------------------------------------------------------

loc_8005604:				@ CODE XREF: sub_80055F8+1Cj
		ADDS	R0, R0,	#1

loc_8005606:				@ CODE XREF: sub_80055F8+Aj
		CMP	R0, #4
		BCS	loc_8005628
		LDR	R6, =0x20000068
		ADDS.W	R6, R6,	R0,LSL#4
		LDRH	R7, [R6,#0xA]
		CMP	R7, #0
		BNE	loc_8005604
		STR	R1, [R6]
		LDR	R1, =0x2000019C
		STR	R2, [R6,#4]
		STRB	R3, [R6,#8]
		STRB	R5, [R6,#9]
		STRH	R4, [R6,#0xA]
		LDR	R1, [R1]
		STR	R1, [R6,#0xC]
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8005628:				@ CODE XREF: sub_80055F8+10j
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R7,PC}
@ End of function sub_80055F8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005630:				@ CODE XREF: sub_8005660+68p
		PUSH	{LR}
		BL	sub_80055D8
		CMP	R0, #0
		BMI	locret_8005646
		LDR	R2, =0x2000019C
		LDR	R1, =0x20000068
		LDR	R2, [R2]
		ADDS.W	R1, R1,	R0,LSL#4
		STR	R2, [R1,#0xC]

locret_8005646:				@ CODE XREF: sub_8005630+8j
		POP	{PC}
@ End of function sub_8005630


@ =============== S U B	R O U T	I N E =======================================


sub_8005648:				@ CODE XREF: sub_8005660+8Ep
					@ sub_8005774+20p
		PUSH	{LR}
		BL	sub_80055D8
		CMP	R0, #0
		BMI	locret_800565C
		LDR	R1, =0x20000068
		MOVS	R2, #0
		ADDS.W	R1, R1,	R0,LSL#4
		STRH	R2, [R1,#0xA]

locret_800565C:				@ CODE XREF: sub_8005648+8j
		POP	{PC}
@ End of function sub_8005648

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005660:				@ CODE XREF: sub_800588C:loc_8005A38p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x94
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#2
		BL	sub_800664C
		MOVS	R1, #4
		ADD	R0, SP,	#0xC
		BL	sub_800664C
		MOVS	R1, #4
		ADD	R0, SP,	#0x10
		BL	sub_800664C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#3
		BL	sub_800664C
		MOVS	R1, #1
		ADD	R0, SP,	#8
		BL	sub_800664C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800664C
		LDRB.W	R0, [SP,#2]
		CMP	R0, #0x64
		BEQ	loc_80056A6
		CMP	R0, #0x65
		BEQ	loc_80056EA
		B	loc_80056F2
@ ---------------------------------------------------------------------------

loc_80056A6:				@ CODE XREF: sub_8005660+3Ej
		LDRH.W	R0, [SP,#0]
		CBNZ	R0, loc_80056C4

loc_80056AC:				@ CODE XREF: sub_8005660+62j
		LDR	R0, =0x20001014
		LDRH	R1, [R0]
		ADDS	R1, R1,	#1
		STRH	R1, [R0]
		STRH.W	R1, [SP,#0]
		LDRH.W	R0, [SP,#0]
		BL	sub_80055D8
		CMP	R0, #0
		BPL	loc_80056AC

loc_80056C4:				@ CODE XREF: sub_8005660+4Aj
		LDRH.W	R0, [SP,#0]
		BL	sub_8005630
		CMP	R0, #0
		BPL	loc_80056F2
		LDRB.W	R0, [SP,#8]
		PUSH	{R0}
		LDRB.W	R3, [SP,#7]
		LDR	R2, [SP,#0x14]
		LDR	R1, [SP,#0x10]
		LDRH.W	R0, [SP,#4]
		BL	sub_80055F8
		ADD	SP, SP,	#4
		B	loc_80056F2
@ ---------------------------------------------------------------------------

loc_80056EA:				@ CODE XREF: sub_8005660+42j
		LDRH.W	R0, [SP,#0]
		BL	sub_8005648

loc_80056F2:				@ CODE XREF: sub_8005660+44j
					@ sub_8005660+6Ej ...
		ADD	R0, SP,	#0x14
		STR	R0, [SP,#4]
		LDRH.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		MOVS	R4, #0
		BL	sub_8008E78
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_8008E78
		MOVS	R1, #0x10
		ADD	R0, SP,	#4
		BL	sub_8008E78
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_8008E78
		B	loc_8005754
@ ---------------------------------------------------------------------------

loc_800571C:				@ CODE XREF: sub_8005660+F6j
		LDR	R0, =0x20000068
		ADDS.W	R5, R0,	R4,LSL#4
		LDR	R1, [R5]
		ADD	R0, SP,	#4
		ADDS	R4, R4,	#1
		BL	sub_8008E88
		LDR	R1, [R5,#4]
		ADD	R0, SP,	#4
		BL	sub_8008E88
		LDRB	R1, [R5,#8]
		ADD	R0, SP,	#4
		BL	sub_8008E6C
		LDRB	R1, [R5,#9]
		ADD	R0, SP,	#4
		BL	sub_8008E6C
		LDRH	R1, [R5,#0xA]
		ADD	R0, SP,	#4
		BL	sub_8008E78
		LDR	R1, [R5,#0xC]
		ADD	R0, SP,	#4
		BL	sub_8008E88

loc_8005754:				@ CODE XREF: sub_8005660+BAj
		CMP	R4, #4
		BCC	loc_800571C
		BL	sub_8005E30
		MOVS	R1, R0
		ADD	R0, SP,	#4
		BL	sub_8008E88
		MOVS	R1, #0x4C
		ADD	R0, SP,	#0x14
		BL	sub_80065C4
		ADD	SP, SP,	#0x94
		POP	{R4,R5,PC}
@ End of function sub_8005660

@ ---------------------------------------------------------------------------
dword_8005770:	.long 0x20001014	@ DATA XREF: sub_8005660:loc_80056ACr

@ =============== S U B	R O U T	I N E =======================================


sub_8005774:				@ CODE XREF: sub_80057AC+Ap
		LDR	R0, =0x2000019C
		PUSH	{R4,R5,LR}
		MOVS	R5, #0
		LDR	R4, [R0]
		B	loc_800579A
@ ---------------------------------------------------------------------------

loc_800577E:				@ CODE XREF: sub_8005774+28j
		LDR	R0, =0x20000068
		ADDS.W	R0, R0,	R5,LSL#4
		LDRH	R1, [R0,#0xA]
		CBZ	R1, loc_8005798
		LDR	R1, [R0,#0xC]
		LDR	R2, =0x1388
		SUBS	R1, R4,	R1
		CMP	R1, R2
		ITT ge
		LDRHGE	R0, [R0,#0xA]
		BLGE	sub_8005648

loc_8005798:				@ CODE XREF: sub_8005774+12j
		ADDS	R5, R5,	#1

loc_800579A:				@ CODE XREF: sub_8005774+8j
		CMP	R5, #4
		BCC	loc_800577E
		POP	{R4,R5,PC}
@ End of function sub_8005774

@ ---------------------------------------------------------------------------
dword_80057A0:	.long 0x1388		@ DATA XREF: sub_8005774+16r
dword_80057A4:	.long 0x2000019C	@ DATA XREF: sub_80055F8+20r
					@ sub_8005630+Ar ...
dword_80057A8:	.long 0x20000068	@ DATA XREF: sub_80055D8+Cr
					@ sub_80055F8+12r ...

@ =============== S U B	R O U T	I N E =======================================


sub_80057AC:				@ CODE XREF: sub_8005848+24p
		PUSH	{LR}
		BL	nullsub_2
		LDR.W	LR, [SP+0],#4
		B	sub_8005774
@ End of function sub_80057AC


@ =============== S U B	R O U T	I N E =======================================


sub_80057B8:				@ CODE XREF: sub_8005848+12p
		LDR	R1, =0x2000067C
		PUSH	{LR}
		LDR	R2, [R1]
		MOVS	R0, R2
		CMP	R0, #1
		BLT	loc_80057EE
		MOVS	R2, #0x7FFFFFFF
		CMP	R0, R2
		IT eq
		MOVEQ	R0, #1
		ADDS	R0, R0,	#1
		STR	R0, [R1]
		LDR	R1, =0x2B3
		CMP	R0, R1
		BLT	loc_8005800
		MOVS	R1, #0x64
		BL	sub_8008F94
		CBZ	R0, loc_80057E8
		MOVS	R0, #0
		BL	sub_80063F0
		B	loc_8005800
@ ---------------------------------------------------------------------------

loc_80057E8:				@ CODE XREF: sub_80057B8+26j
		BL	sub_8006400
		B	loc_8005800
@ ---------------------------------------------------------------------------

loc_80057EE:				@ CODE XREF: sub_80057B8+Aj
		CMP	R0, #0
		BPL	loc_8005800
		LDR	R0, =0xFFFFD8F0
		SUBS	R2, R2,	#1
		STR	R2, [R1]
		CMP	R2, R0
		IT eq
		BLEQ	sub_80060E0

loc_8005800:				@ CODE XREF: sub_80057B8+1Ej
					@ sub_80057B8+2Ej ...
		BL	sub_8005E30
		LDR	R1, =0x20000060
		LDR	R2, =0x6D6
		CMP	R0, R2
		LDR	R0, [R1]
		BCC	loc_8005822
		LDR	R2, =0x5265C00
		CMP	R0, R2
		BGE	loc_800582A
		CBNZ	R0, loc_800581C
		LDR	R0, [R1,#4]
		ADDS	R0, R0,	#1
		STR	R0, [R1,#4]

loc_800581C:				@ CODE XREF: sub_80057B8+5Cj
		LDR	R0, [R1]
		ADDS	R0, #0xA
		B	loc_800582C
@ ---------------------------------------------------------------------------

loc_8005822:				@ CODE XREF: sub_80057B8+54j
		CBZ	R0, loc_800582A
		LDR	R0, [R1,#4]
		ADDS	R0, R0,	#1
		STR	R0, [R1,#4]

loc_800582A:				@ CODE XREF: sub_80057B8+5Aj
					@ sub_80057B8:loc_8005822j
		MOVS	R0, #0

loc_800582C:				@ CODE XREF: sub_80057B8+68j
		STR	R0, [R1]
		POP	{PC}
@ End of function sub_80057B8

@ ---------------------------------------------------------------------------
dword_8005830:	.long 0x2000067C	@ DATA XREF: sub_80057B8r
dword_8005834:	.long 0x2B3		@ DATA XREF: sub_80057B8+1Ar
dword_8005838:	.long 0xFFFFD8F0	@ DATA XREF: sub_80057B8+3Ar
dword_800583C:	.long 0x6D6		@ DATA XREF: sub_80057B8+4Er
dword_8005840:	.long 0x5265C00		@ DATA XREF: sub_80057B8+56r
dword_8005844:	.long 0x20000060	@ DATA XREF: sub_80057B8+4Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8005848:				@ CODE XREF: sub_8007164+14p
		LDR	R0, =0x200000A8
		PUSH	{R4,LR}
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		CMP	R1, #0xA
		BNE	locret_8005870
		MOVS	R4, #0
		STR	R4, [R0]
		BL	sub_80057B8
		LDR	R0, =0x200000AC
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		CMP	R1, #0xA
		ITT eq
		STREQ	R4, [R0]
		BLEQ	sub_80057AC

locret_8005870:				@ CODE XREF: sub_8005848+Cj
		POP	{R4,PC}
@ End of function sub_8005848

@ ---------------------------------------------------------------------------
		.align 4
dword_8005874:	.long 0x200000A8	@ DATA XREF: sub_8005848r
dword_8005878:	.long 0x200000AC	@ DATA XREF: sub_8005848+16r

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: noreturn

sub_800587C:				@ CODE XREF: sub_800588C:loc_8005A3Ep
		PUSH	{LR}

loc_800587E:				@ CODE XREF: sub_800587C+Cj
		BL	sub_8007136
		MOVS	R0, #0
		BL	sub_8006410
		B	loc_800587E
@ End of function sub_800587C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800588C:				@ CODE XREF: sub_80064E4+60p
		PUSH	{R4,LR}
		MOVS	R4, R0
		CMP	R4, #0xC2
		BNE	loc_800589A
		BL	sub_8005410
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800589A:				@ CODE XREF: sub_800588C+6j
		CMP	R4, #0xEB
		BNE	loc_80058A4
		BL	sub_8007770

locret_80058A2:				@ CODE XREF: sub_800588C+28j
					@ sub_800588C+5Ej
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80058A4:				@ CODE XREF: sub_800588C+10j
		CMP	R4, #0xCE
		BEQ	loc_80058AC
		CMP	R4, #0xCF
		BNE	loc_80058BC

loc_80058AC:				@ CODE XREF: sub_800588C+1Aj
		MOVS	R0, #1
		BL	sub_800665C
		CMP	R0, #0
		BNE	locret_80058A2
		MOVS	R1, #0
		UXTB	R0, R4
		B	loc_800595C
@ ---------------------------------------------------------------------------

loc_80058BC:				@ CODE XREF: sub_800588C+1Ej
		CMP	R0, #1
		BEQ.W	loc_8005A08
		CMP	R0, #2
		BEQ.W	loc_80059EC
		CMP	R0, #3
		BEQ.W	loc_80059DC
		CMP	R0, #4
		BEQ.W	loc_8005A14
		CMP	R0, #5
		BEQ	loc_800596E
		CMP	R0, #6
		BEQ.W	loc_8005A0E
		CMP	R0, #7
		BEQ	loc_800598C
		CMP	R0, #9
		BEQ.W	loc_8005A38
		CMP	R0, #0xB
		BEQ	locret_80058A2
		CMP	R0, #0xC0
		BEQ	loc_80059C8
		CMP	R0, #0xC1
		BEQ.W	loc_8005A26
		CMP	R0, #0xC7
		BEQ.W	loc_8005A32
		CMP	R0, #0xC8
		BEQ	loc_80059CE
		CMP	R0, #0xC9
		BEQ	loc_8005998
		CMP	R0, #0xCA
		BEQ	loc_800599E
		CMP	R0, #0xCB
		BEQ	loc_80059A4
		CMP	R0, #0xCC
		BEQ	loc_80059AA
		CMP	R0, #0xCD
		BEQ	loc_800595A
		CMP	R0, #0xD0
		BEQ	loc_80059B6
		CMP	R0, #0xD1
		BEQ	loc_80059BC
		CMP	R0, #0xD4
		BEQ	loc_80059C2
		CMP	R0, #0xDC
		BEQ	loc_8005974
		CMP	R0, #0xDD
		BEQ	loc_800597A
		CMP	R0, #0xDE
		BEQ	loc_80059B0
		CMP	R0, #0xDF
		BEQ	loc_80059F6
		CMP	R0, #0xE6
		BEQ	loc_8005986
		CMP	R0, #0xE7
		BEQ	loc_8005992
		CMP	R0, #0xE8
		BEQ	loc_8005A1A
		CMP	R0, #0xE9
		BEQ	loc_8005962
		CMP	R0, #0xEA
		BEQ	loc_8005968
		CMP	R0, #0xED
		BEQ	loc_8005A20
		CMP	R0, #0xF0
		BEQ	loc_8005980
		CMP	R0, #0xF2
		BEQ	loc_80059FC
		CMP	R0, #0xF3
		BEQ	loc_8005A02
		CMP	R0, #0xFE
		BEQ	loc_8005A2C
		B	loc_8005A3E
@ ---------------------------------------------------------------------------

loc_800595A:				@ CODE XREF: sub_800588C+86j
		MOVS	R1, #0

loc_800595C:				@ CODE XREF: sub_800588C+2Ej
		BL	sub_8004FF8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005962:				@ CODE XREF: sub_800588C+B2j
		BL	sub_8005524
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005968:				@ CODE XREF: sub_800588C+B6j
		BL	sub_8005570
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800596E:				@ CODE XREF: sub_800588C+4Aj
		BL	sub_80054EC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005974:				@ CODE XREF: sub_800588C+96j
		BL	sub_800551C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800597A:				@ CODE XREF: sub_800588C+9Aj
		BL	sub_8005520
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005980:				@ CODE XREF: sub_800588C+BEj
		BL	sub_80053CC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005986:				@ CODE XREF: sub_800588C+A6j
		BL	sub_800531C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800598C:				@ CODE XREF: sub_800588C+54j
		BL	sub_80052BC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005992:				@ CODE XREF: sub_800588C+AAj
		BL	sub_8005344
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005998:				@ CODE XREF: sub_800588C+76j
		BL	sub_8005EB0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800599E:				@ CODE XREF: sub_800588C+7Aj
		BL	sub_8005EB4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059A4:				@ CODE XREF: sub_800588C+7Ej
		BL	sub_8005EC0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059AA:				@ CODE XREF: sub_800588C+82j
		BL	sub_8005ED0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059B0:				@ CODE XREF: sub_800588C+9Ej
		BL	sub_8005AA4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059B6:				@ CODE XREF: sub_800588C+8Aj
		BL	sub_8005158
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059BC:				@ CODE XREF: sub_800588C+8Ej
		BL	sub_8005230
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059C2:				@ CODE XREF: sub_800588C+92j
		BL	sub_8005474
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059C8:				@ CODE XREF: sub_800588C+62j
		BL	sub_80053B8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059CE:				@ CODE XREF: sub_800588C+72j
		BL	sub_8005EF8
		BL	sub_8005E54
		BL	sub_8006618
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059DC:				@ CODE XREF: sub_800588C+3Ej
		BL	sub_8005AAC
		MOVS	R0, #2
		BL	sub_8006E24
		BL	sub_8005AB0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059EC:				@ CODE XREF: sub_800588C+38j
		BL	sub_8005AA4
		MOVS	R0, #2
		BL	sub_8006E24

loc_80059F6:				@ CODE XREF: sub_800588C+A2j
		BL	sub_8005AA8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_80059FC:				@ CODE XREF: sub_800588C+C2j
		BL	sub_8005484
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A02:				@ CODE XREF: sub_800588C+C6j
		BL	sub_8005490
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A08:				@ CODE XREF: sub_800588C+32j
		BL	sub_8004FD8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A0E:				@ CODE XREF: sub_800588C+4Ej
		BL	sub_8005BB0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A14:				@ CODE XREF: sub_800588C+44j
		BL	sub_80052FC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A1A:				@ CODE XREF: sub_800588C+AEj
		BL	sub_8005380
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A20:				@ CODE XREF: sub_800588C+BAj
		BL	sub_800538C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A26:				@ CODE XREF: sub_800588C+66j
		BL	sub_80053DC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A2C:				@ CODE XREF: sub_800588C+CAj
		BL	sub_800545C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A32:				@ CODE XREF: sub_800588C+6Cj
		BL	sub_80054B4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A38:				@ CODE XREF: sub_800588C+58j
		BL	sub_8005660
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005A3E:				@ CODE XREF: sub_800588C+CCj
		BL	sub_800587C
@ End of function sub_800588C

@ ---------------------------------------------------------------------------
		POP	{R4,PC}

@ =============== S U B	R O U T	I N E =======================================


sub_8005A44:				@ CODE XREF: sub_8005A6C+4p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R0, R2
		CBZ	R1, locret_8005A6A

loc_8005A4C:				@ CODE XREF: sub_8005A44+24j
		MOVS	R2, R0
		LDRB.W	R0, [R4],#1
		EORS	R0, R2
		MOVS	R2, #8

loc_8005A56:				@ CODE XREF: sub_8005A44+20j
		LSRS	R5, R0,	#1
		LSLS	R0, R0,	#0x1F
		ITEE pl
		MOVPL	R0, R5
		MOVMI	R0, R5
		EORMI	R0, R3
		SUBS	R2, R2,	#1
		BNE	loc_8005A56
		SUBS	R1, R1,	#1
		BNE	loc_8005A4C

locret_8005A6A:				@ CODE XREF: sub_8005A44+6j
		POP	{R4,R5,PC}
@ End of function sub_8005A44


@ =============== S U B	R O U T	I N E =======================================


sub_8005A6C:				@ CODE XREF: sub_8005AB4+Ap
		LDR	R3, =0x8408
		PUSH	{LR}
		BL	sub_8005A44
		UXTH	R0, R0
		POP	{PC}
@ End of function sub_8005A6C

@ ---------------------------------------------------------------------------
dword_8005A78:	.long 0x8408		@ DATA XREF: sub_8005A6Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8005A7C:				@ CODE XREF: sub_80054B4:loc_80054D8p
		PUSH	{R4-R6,LR}
		LDR	R5, =0x2000102A
		MOVS	R4, R0
		LDRB	R0, [R5]
		MOVS	R6, R0
		CMP	R0, #1
		BNE	loc_8005A92
		CMP	R4, #1
		IT ne
		BLNE	sub_80077A8

loc_8005A92:				@ CODE XREF: sub_8005A7C+Cj
		MOVS	R0, R4
		BL	sub_800625C
		STRB	R4, [R5]
		MOVS	R0, R6
		POP	{R4-R6,PC}
@ End of function sub_8005A7C

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8005AA0:	.long 0x2000102A	@ DATA XREF: sub_8005A7C+2r

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005AA4:				@ CODE XREF: sub_800588C:loc_80059B0p
					@ sub_800588C:loc_80059ECp
		B.W	sub_8005E88
@ End of function sub_8005AA4


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005AA8:				@ CODE XREF: sub_8005100+1Ep
					@ sub_80051D4+1Ep ...
		B.W	sub_8005E8C
@ End of function sub_8005AA8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005AAC:				@ CODE XREF: sub_8004B9C+30p
					@ sub_8004C80:loc_8004C8Ep ...
		B.W	sub_8005E90
@ End of function sub_8005AAC


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005AB0:				@ CODE XREF: sub_8004B9C+3Ap
					@ sub_8004C80:loc_8004CC6p ...
		B.W	loc_8005E94
@ End of function sub_8005AB0


@ =============== S U B	R O U T	I N E =======================================


sub_8005AB4:				@ CODE XREF: sub_8005BB0+70p
		PUSH	{R4,R5,LR}
		LDR	R5, =0x5BFE
		MOVS	R4, R0
		MOVS	R2, #0
		MOVS	R1, R5
		BL	sub_8005A6C
		LDRH	R1, [R4,R5]
		CMP	R0, R1
		ITT eq
		MOVEQ	R0, #0
		POPEQ	{R4,R5,PC}
		MOVS	R0, #1
		POP	{R4,R5,PC}
@ End of function sub_8005AB4

@ ---------------------------------------------------------------------------
dword_8005AD0:	.long 0x5BFE		@ DATA XREF: sub_8005AB4+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8005AD4:				@ CODE XREF: sub_8005AFC+1Cp
					@ sub_8005AFC+26p ...
		MOVS	R1, R0
		LDRB	R2, [R1]
		MOVS	R0, #0
		CMP	R2, #0x20
		BNE	loc_8005AEC
		ADDS	R1, R1,	#1
		B	loc_8005AEC
@ ---------------------------------------------------------------------------

loc_8005AE2:				@ CODE XREF: sub_8005AD4+22j
		MOVS	R3, #0xA
		MLA.W	R0, R0,	R3, R2
		SUBS	R0, #0x30
		UXTH	R0, R0

loc_8005AEC:				@ CODE XREF: sub_8005AD4+8j
					@ sub_8005AD4+Cj
		LDRB.W	R2, [R1],#1
		CMP	R2, #0x30
		BCC	locret_8005AF8
		CMP	R2, #0x3A
		BCC	loc_8005AE2

locret_8005AF8:				@ CODE XREF: sub_8005AD4+1Ej
		BX	LR
@ End of function sub_8005AD4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005AFC:				@ CODE XREF: sub_8005B8C+2p
					@ sub_8005B8C+Ap
		LDR	R2, =dword_8009258
		PUSH.W	{R4-R9,LR}
		SUB	SP, SP,	#0x24
		MOV	R1, SP
		MOVS	R4, #0x24

loc_8005B08:				@ CODE XREF: sub_8005AFC+12j
		SUBS	R4, R4,	#4
		LDR	R3, [R2,R4]
		STR	R3, [R1,R4]
		BNE	loc_8005B08
		ADDW	R8, R0,	#0x12D
		MOV	R0, R8
		ADDS	R0, R0,	#4
		BL	sub_8005AD4
		MOV	R9, R0
		MOV	R0, R8
		ADDS	R0, R0,	#7
		BL	sub_8005AD4
		MOVS	R4, R0
		MOV	R0, R8
		ADDS	R0, #0xC
		BL	sub_8005AD4
		MOVS	R5, R0
		MOV	R0, R8
		ADDS	R0, #0xF
		BL	sub_8005AD4
		MOVS	R6, R0
		MOVS	R7, #0
		B	loc_8005B4A
@ ---------------------------------------------------------------------------

loc_8005B40:				@ CODE XREF: sub_8005AFC+4Cj
		MOVS	R0, #0
		B	loc_8005B7C
@ ---------------------------------------------------------------------------

loc_8005B44:				@ CODE XREF: sub_8005AFC+60j
		ADDS	R7, R7,	#1
		CMP	R7, #0xC
		BEQ	loc_8005B40

loc_8005B4A:				@ CODE XREF: sub_8005AFC+42j
		MOVS	R0, #3
		MOV	R3, SP
		MLA.W	R0, R7,	R0, R3
		MOVS	R2, #3
		MOV	R1, R8
		BL	sub_8008F2C
		CMP	R0, #0
		BNE	loc_8005B44
		LDR	R0, =0xFFFFF830
		MOVS	R1, #0xC
		UXTH	R7, R7
		ADDS	R0, R4,	R0
		MLA.W	R0, R0,	R1, R7
		MOVS	R1, #0x1F
		MLA.W	R0, R0,	R1, R9
		MOVS	R1, #0x18
		MLA.W	R0, R0,	R1, R5
		MOVS	R1, #0x3C
		MLA.W	R0, R0,	R1, R6

loc_8005B7C:				@ CODE XREF: sub_8005AFC+46j
		ADD	SP, SP,	#0x24
		POP.W	{R4-R9,PC}
@ End of function sub_8005AFC

@ ---------------------------------------------------------------------------
		.align 4
off_8005B84:	.long dword_8009258	@ DATA XREF: sub_8005AFCr
dword_8005B88:	.long 0xFFFFF830	@ DATA XREF: sub_8005AFC+62r

@ =============== S U B	R O U T	I N E =======================================


sub_8005B8C:				@ CODE XREF: sub_8005BB0+36p
		PUSH	{R4,LR}
		BL	sub_8005AFC
		MOVS	R4, R0
		LDR	R0, =dword_8004000
		BL	sub_8005AFC
		CBZ	R4, loc_8005B9E
		CBNZ	R0, loc_8005BA2

loc_8005B9E:				@ CODE XREF: sub_8005B8C+Ej
		MOVS	R0, #1
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005BA2:				@ CODE XREF: sub_8005B8C+10j
		CMP	R0, R4
		ITT cc
		MOVCC	R0, #1
		POPCC	{R4,PC}
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_8005B8C

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005BB0:				@ CODE XREF: sub_800588C:loc_8005A0Ep
		PUSH	{R5-R7,LR}
		SUBW	SP, SP,	#0x404
		MOVS	R0, #0
		MOVS.W	R5, #0x400
		BL	sub_8006618
		LDR	R0, =0xAA55
		MOVS	R1, #2
		STRH.W	R0, [SP,#0]
		MOV	R0, SP
		BL	sub_800664C
		MOVS.W	R1, #0x400
		ADD	R0, SP,	#4
		BL	sub_800664C
		LDRH.W	R0, [SP,#0]
		MOVS.W	R1, #0x5C00
		CMP	R0, R1
		BNE	loc_8005C40
		ADD	R0, SP,	#4
		BL	sub_8005B8C
		CBZ	R0, loc_8005C40
		LDR	R6, =dword_8009C00
		MOV	R2, R5
		ADD	R1, SP,	#4
		MOVS	R0, R6
		BL	sub_8005CE4
		MOVS	R7, R6

loc_8005BFA:				@ CODE XREF: sub_8005BB0+6Cj
		ADDS.W	R7, R7,	#0x400
		LSRS	R1, R6,	#0x11
		ADD	R0, SP,	#4
		BL	sub_800664C
		LSRS	R2, R6,	#0x11
		ADD	R1, SP,	#4
		MOVS	R0, R7
		BL	sub_8005CE4
		ADDS.W	R5, R5,	#0x400
		UXTH	R5, R5
		MOVS.W	R1, #0x5C00
		CMP	R5, R1
		BCC	loc_8005BFA
		MOVS	R0, R6
		BL	sub_8005AB4
		MOVS	R5, R0
		ITT ne
		MOVNE	R0, R6
		BLNE	sub_8005D00
		MOVS	R0, R5
		BL	sub_8006618
		MOVS	R0, #0x64
		BL	sub_8006E24
		BL	sub_80060E0
@ ---------------------------------------------------------------------------
		B	loc_8005C74
@ ---------------------------------------------------------------------------

loc_8005C40:				@ CODE XREF: sub_8005BB0+32j
					@ sub_8005BB0+3Aj
		ADD	R0, SP,	#4
		ADDW	R1, R0,	#0x110
		LDR	R0, =0x200005FC
		MOVS	R2, #0x80
		BL	sub_8008F50
		B	loc_8005C60
@ ---------------------------------------------------------------------------

loc_8005C50:				@ CODE XREF: sub_8005BB0+B6j
		MOVS.W	R1, #0x400
		ADD	R0, SP,	#4
		BL	sub_800664C
		ADDS.W	R5, R5,	#0x400
		UXTH	R5, R5

loc_8005C60:				@ CODE XREF: sub_8005BB0+9Ej
		LDRH.W	R1, [SP,#0]
		CMP	R5, R1
		BCC	loc_8005C50
		LDR	R0, =0x5DC
		BL	sub_8006E24
		MOVS	R0, #0
		BL	sub_8006618

loc_8005C74:				@ CODE XREF: sub_8005BB0+8Ej
		ADDW	SP, SP,	#0x404
		POP	{R5-R7,PC}
@ End of function sub_8005BB0

@ ---------------------------------------------------------------------------
		.align 4
dword_8005C7C:	.long 0xAA55		@ DATA XREF: sub_8005BB0+10r
dword_8005C80:	.long 0x5DC		@ DATA XREF: sub_8005BB0+B8r
off_8005C84:	.long dword_8009C00	@ DATA XREF: sub_8005BB0+3Cr
off_8005C88:	.long dword_8004000	@ DATA XREF: sub_8005B8C+8r

@ =============== S U B	R O U T	I N E =======================================


sub_8005C8C:				@ CODE XREF: sub_8004FD8+4p
		LDR	R2, =0x200005FC
		MOVS	R1, R0
		LDR	R0, =0x8004110
		LDRB	R3, [R2]
		CBZ	R3, loc_8005C98
		MOVS	R0, R2

loc_8005C98:				@ CODE XREF: sub_8005C8C+8j
		CBZ	R1, locret_8005C9E
		MOVS	R2, #0x70
		STR	R2, [R1]

locret_8005C9E:				@ CODE XREF: sub_8005C8C:loc_8005C98j
		BX	LR
@ End of function sub_8005C8C

@ ---------------------------------------------------------------------------
dword_8005CA0:	.long 0x8004110		@ DATA XREF: sub_8005C8C+4r
dword_8005CA4:	.long 0x200005FC	@ DATA XREF: sub_8005BB0+96r
					@ sub_8005C8Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8005CA8:				@ CODE XREF: sub_8005344+22p
					@ sub_8005490+16p ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		B	loc_8005CC6
@ ---------------------------------------------------------------------------

loc_8005CB2:				@ CODE XREF: sub_8005CA8+16j
		MOVS	R0, #0
		BL	sub_80063F0
		ADDS	R7, R7,	#1

loc_8005CBA:				@ CODE XREF: sub_8005CA8+38j
		CMP.W	R7, R6,LSL#1
		BLT	loc_8005CB2
		MOVS	R0, #0
		BL	sub_8006400

loc_8005CC6:				@ CODE XREF: sub_8005CA8+8j
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_8005D08
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_8008F2C
		CBNZ	R0, loc_8005CDE
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8005CDE:				@ CODE XREF: sub_8005CA8+32j
		MOVS	R7, #0
		B	loc_8005CBA
@ End of function sub_8005CA8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005CE4:				@ CODE XREF: sub_8005BB0+44p
					@ sub_8005BB0+5Cp

@ FUNCTION CHUNK AT 08005D10 SIZE 00000004 BYTES

		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R1, R6
		BL	loc_8005D10
@ ---------------------------------------------------------------------------
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4-R6,LR}
		B	sub_8005CA8
@ End of function sub_8005CE4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005D00:				@ CODE XREF: sub_8005BB0+7Ap
		MOVS.W	R1, #0x400
		B.W	loc_8005D10
@ End of function sub_8005D00


@ =============== S U B	R O U T	I N E =======================================


sub_8005D08:				@ CODE XREF: sub_8005CA8+24p
		LDR	R3, =0x200010F1
		BX	R3
@ End of function sub_8005D08

@ ---------------------------------------------------------------------------
off_8005D0C:	.long 0x200010F1	@ DATA XREF: sub_8005D08r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_8005CE4

loc_8005D10:				@ CODE XREF: sub_8005CE4+Aj
					@ sub_8005D00+4j
		LDR	R3, =0x20001095
		BX	R3
@ END OF FUNCTION CHUNK	FOR sub_8005CE4
@ ---------------------------------------------------------------------------
off_8005D14:	.long 0x20001095	@ DATA XREF: sub_8005CE4:loc_8005D10r

@ =============== S U B	R O U T	I N E =======================================


sub_8005D18:				@ CODE XREF: sub_8005D8C+58p
					@ sub_80060B8+14p ...
		LDR	R0, =0x40010800
		LDR	R1, =0x444CC834
		LDR	R2, =0x44844444
		STR	R1, [R0,#4]
		LDR	R1, =0x40010C00
		STR	R2, [R1]
		LDR	R2, =0x43454444
		STR	R2, [R1,#4]
		LDR	R2, =0x2000101F
		MOVS	R1, #0x20
		LDRB	R2, [R2]
		CBZ	R2, loc_8005D36
		CMP	R2, #1
		BEQ	loc_8005D3E
		BX	LR
@ ---------------------------------------------------------------------------

loc_8005D36:				@ CODE XREF: sub_8005D18+16j
		LDR	R2, =0x38344433
		STR	R2, [R0]
		STR	R1, [R0,#0x10]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8005D3E:				@ CODE XREF: sub_8005D18+1Aj
		LDR	R2, =0x38344434
		STR	R2, [R0]
		STR	R1, [R0,#0x14]
		BX	LR
@ End of function sub_8005D18

@ ---------------------------------------------------------------------------
		.align 4
dword_8005D48:	.long 0x444CC834	@ DATA XREF: sub_8005D18+2r
dword_8005D4C:	.long 0x43454444	@ DATA XREF: sub_8005D18+Cr
dword_8005D50:	.long 0x38344433	@ DATA XREF: sub_8005D18:loc_8005D36r
dword_8005D54:	.long 0x38344434	@ DATA XREF: sub_8005D18:loc_8005D3Er

@ =============== S U B	R O U T	I N E =======================================


sub_8005D58:				@ CODE XREF: sub_8005D8C:loc_8005DEAp
					@ sub_80060B8+22p
		LDR	R0, =0x40010800
		MOVS.W	R1, #0x44444444
		STR	R1, [R0]
		LDR	R1, =0x444CC434
		STR	R1, [R0,#4]
		LDR	R0, =0x40010C00
		LDR	R1, =0x44844444
		STR	R1, [R0]
		LDR	R1, =0x44454444
		STR	R1, [R0,#4]
		BX	LR
@ End of function sub_8005D58

@ ---------------------------------------------------------------------------
dword_8005D70:	.long 0x444CC434	@ DATA XREF: sub_8005D58+8r
dword_8005D74:	.long 0x44454444	@ DATA XREF: sub_8005D58+12r

@ =============== S U B	R O U T	I N E =======================================


sub_8005D78:				@ CODE XREF: sub_8005D8C+50p
					@ sub_80060B8+6p

@ FUNCTION CHUNK AT 08005E40 SIZE 00000006 BYTES

		LDR	R0, =0x40010C08
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1D
		B	loc_8005E40
@ End of function sub_8005D78

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005D84:				@ CODE XREF: sub_80053CC+2p
		LDR	R0, =0x200000C8
		LDR	R0, [R0]
		BX	LR
@ End of function sub_8005D84

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005D8C:				@ CODE XREF: sub_80064E4+14p
		LDR	R0, =0x40010004
		PUSH	{R4,LR}
		LDR	R4, =0x20001020
		LDR	R1, [R0]
		MOVS	R2, #0xF8FFFFFF
		ANDS	R2, R1
		ORRS.W	R1, R2,	#0x4000000
		STR	R1, [R0]
		LDR	R0, =0x4E20
		BL	sub_8005F04
		LDR	R0, =0x40021018
		LDR	R2, =0x4E3
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0xC
		STR	R1, [R0]
		LDR	R0, =0x40010800
		MOVS.W	R1, #0x44444444
		STR	R1, [R0]
		STR	R1, [R0,#4]
		STR	R2, [R0,#0xC]
		LDR	R0, =0x40010C00
		LDR	R2, =0x44844444
		STR	R2, [R0]
		STR	R1, [R0,#4]
		MOVS	R1, #0x20
		STR	R1, [R0,#0xC]
		LDR	R0, =0x200000C8
		LDR	R1, =0x11170
		STR	R1, [R0]
		LDR	R0, =0x2000101E
		MOVS	R1, #1
		STRB	R1, [R0]
		LDR	R0, =0x2000101F
		MOVS	R1, #0
		STRB	R1, [R0]
		BL	sub_8005D78
		STRB	R0, [R4]
		CBZ	R0, loc_8005DEA
		BL	sub_8005D18
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8005DEA:				@ CODE XREF: sub_8005D8C+56j
		BL	sub_8005D58
		POP	{R4,PC}
@ End of function sub_8005D8C

@ ---------------------------------------------------------------------------
dword_8005DF0:	.long 0x40010004	@ DATA XREF: sub_8005D8Cr
dword_8005DF4:	.long 0x4E20		@ DATA XREF: sub_8005D8C+14r
dword_8005DF8:	.long 0x4E3		@ DATA XREF: sub_8005D8C+1Cr
dword_8005DFC:	.long 0x11170		@ DATA XREF: sub_8005D8C+40r
dword_8005E00:	.long 0x40021018	@ DATA XREF: sub_8005D8C+1Ar
dword_8005E04:	.long 0x40010800	@ DATA XREF: sub_8005D18r sub_8005D58r ...
dword_8005E08:	.long 0x40010C00	@ DATA XREF: sub_8005D18+8r
					@ sub_8005D58+Cr ...
dword_8005E0C:	.long 0x44844444	@ DATA XREF: sub_8005D18+4r
					@ sub_8005D58+Er ...
dword_8005E10:	.long 0x200000C8	@ DATA XREF: sub_8005D84r
					@ sub_8005D8C+3Er
dword_8005E14:	.long 0x2000101F	@ DATA XREF: sub_8005D18+10r
					@ sub_8005D8C+4Ar
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_80063F0

loc_8005E18:				@ CODE XREF: sub_8006410-2Ej
					@ sub_80063F0+Aj
		CBNZ	R0, locret_8005E20
		LDR	R0, =0x40010C14
		LSRS	R1, R0,	#0x12
		STR	R1, [R0]

locret_8005E20:				@ CODE XREF: sub_80063F0:loc_8005E18j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_80063F0
@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_8006400

loc_8005E24:				@ CODE XREF: sub_8006410:loc_80063E6j
					@ sub_8006400+Aj
		CBNZ	R0, locret_8005E2C
		LDR	R0, =0x40010C10
		LSRS	R1, R0,	#0x12
		STR	R1, [R0]

locret_8005E2C:				@ CODE XREF: sub_8006400:loc_8005E24j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8006400
@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005E30:				@ CODE XREF: sub_80052BC+2p
					@ sub_8005660+F8p ...
		LDR	R0, =0xCE4
		BX	LR
@ End of function sub_8005E30

@ ---------------------------------------------------------------------------
dword_8005E34:	.long 0xCE4		@ DATA XREF: sub_8005E30r

@ =============== S U B	R O U T	I N E =======================================


sub_8005E38:				@ CODE XREF: sub_80052BC+22p
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1C
@ End of function sub_8005E38

@ START	OF FUNCTION CHUNK FOR sub_8005D78

loc_8005E40:				@ CODE XREF: sub_8005D78+8j
					@ sub_8005E48+8j ...
		MOVS	R0, #1
		ANDS	R0, R1
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8005D78
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005E48:				@ CODE XREF: sub_80052BC+Ap
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1B
		B	loc_8005E40
@ End of function sub_8005E48

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005E54:				@ CODE XREF: sub_80052BC+12p
					@ sub_800588C+146p
		LDR	R0, =0x40010C08
		LDR	R1, [R0]
		B	loc_8005E40
@ End of function sub_8005E54

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005E5C:				@ CODE XREF: sub_80052BC+1Ap
					@ sub_8005F50:loc_8005F94p
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1E
		B	loc_8005E40
@ End of function sub_8005E5C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005E68:				@ CODE XREF: sub_80052BC+2Ap
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1A
		B	loc_8005E40
@ End of function sub_8005E68

@ ---------------------------------------------------------------------------
		.align 4
dword_8005E74:	.long 0x40010808	@ DATA XREF: sub_8005E38r sub_8005E48r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8005E78:				@ CODE XREF: sub_80052BC+32p
		LDR	R0, =0x40010C08
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x19
		B	loc_8005E40
@ End of function sub_8005E78

@ ---------------------------------------------------------------------------
		.align 4
dword_8005E84:	.long 0x40010C08	@ DATA XREF: sub_8005D78r sub_8005E54r ...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8005E88:				@ CODE XREF: sub_8005AA4j
		B	sub_8005EA8
@ End of function sub_8005E88

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005E8C:				@ CODE XREF: sub_8005AA8j

@ FUNCTION CHUNK AT 08005EAA SIZE 00000006 BYTES

		LDR	R0, =0x40010810
		B	loc_8005EAA
@ End of function sub_8005E8C


@ =============== S U B	R O U T	I N E =======================================


sub_8005E90:				@ CODE XREF: sub_8005AACj
		LDR	R0, =0x40010814
		B	loc_8005E98
@ ---------------------------------------------------------------------------

loc_8005E94:				@ CODE XREF: sub_8005AB0j
		LDR	R0, =0x40010810
		NOP

loc_8005E98:				@ CODE XREF: sub_8005E90+2j
		MOVS	R1, #2
		STR	R1, [R0]
		BX	LR
@ End of function sub_8005E90

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8005EA0:	.long 0x20001020	@ DATA XREF: sub_8005D8C+4r
dword_8005EA4:	.long 0x2000101E	@ DATA XREF: sub_8005D8C+44r

@ =============== S U B	R O U T	I N E =======================================


sub_8005EA8:				@ CODE XREF: sub_8005E88j
		LDR	R0, =0x40010814
@ End of function sub_8005EA8

@ START	OF FUNCTION CHUNK FOR sub_8005E8C

loc_8005EAA:				@ CODE XREF: sub_8005E8C+2j
		MOVS	R1, #1
		STR	R1, [R0]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8005E8C

@ =============== S U B	R O U T	I N E =======================================


sub_8005EB0:				@ CODE XREF: sub_800588C:loc_8005998p
					@ sub_8005F50:loc_8005F7Cp ...
		LDR	R0, =0x40010814
		B	loc_8005EB8
@ End of function sub_8005EB0


@ =============== S U B	R O U T	I N E =======================================


sub_8005EB4:				@ CODE XREF: sub_800588C:loc_800599Ep
					@ sub_8005F50+26p
		LDR	R0, =0x40010810
		NOP

loc_8005EB8:				@ CODE XREF: sub_8005EB0+2j
		MOVS	R1, #0x80
		STR	R1, [R0]
		BX	LR
@ End of function sub_8005EB4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8005EC0:				@ CODE XREF: sub_800588C:loc_80059A4p
					@ sub_8005F50:loc_8005F6Ep
		LDR	R0, =0x40010C14
		MOVS.W	R1, #0x4000
		STR	R1, [R0]
		BX	LR
@ End of function sub_8005EC0

@ ---------------------------------------------------------------------------
		.align 4
dword_8005ECC:	.long 0x40010C14	@ DATA XREF: sub_80063F0-5D6r
					@ sub_8005EC0r

@ =============== S U B	R O U T	I N E =======================================


sub_8005ED0:				@ CODE XREF: sub_800588C:loc_80059AAp
					@ sub_8005F50+18p
		LDR	R0, =0x40010C10
		MOVS.W	R1, #0x4000
		STR	R1, [R0]
		BX	LR
@ End of function sub_8005ED0

@ ---------------------------------------------------------------------------
		.align 4
dword_8005EDC:	.long 0x40010C10	@ DATA XREF: sub_8006400-5DAr
					@ sub_8005ED0r

@ =============== S U B	R O U T	I N E =======================================


sub_8005EE0:				@ CODE XREF: sub_8005EF8+2p
					@ sub_8005F50:loc_8005F80p
		LDR	R0, =0x40010814
		B	loc_8005EEC
@ End of function sub_8005EE0

@ ---------------------------------------------------------------------------
dword_8005EE4:	.long 0x40010814	@ DATA XREF: sub_8005E90r sub_8005EA8r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8005EE8:				@ CODE XREF: sub_8005EF8+Ap
					@ sub_8005F50:loc_8005F9Ep
		LDR	R0, =0x40010810
		NOP

loc_8005EEC:				@ CODE XREF: sub_8005EE0+2j
		MOVS	R1, #0x20
		STR	R1, [R0]
		BX	LR
@ End of function sub_8005EE8

@ ---------------------------------------------------------------------------
		.align 4
dword_8005EF4:	.long 0x40010810	@ DATA XREF: sub_8005E8Cr
					@ sub_8005E90:loc_8005E94r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8005EF8:				@ CODE XREF: sub_800588C:loc_80059CEp
		PUSH	{LR}
		BL	sub_8005EE0
		LDR.W	LR, [SP+0],#4
		B	sub_8005EE8
@ End of function sub_8005EF8


@ =============== S U B	R O U T	I N E =======================================


sub_8005F04:				@ CODE XREF: sub_80054EC+24p
					@ sub_8005D8C+16p ...
		LDR	R1, =0x200000B0
		STR	R0, [R1]
		CBZ	R0, locret_8005F3C
		LDR	R2, =0x155CC0
		MOV	R1, R0
		MOVS	R0, #0
		CMP	R1, R2
		BCS	loc_8005F26
		LDR	R2, =0x5B8D7F
		ADDS	R2, R1,	R2
		UDIV.W	R2, R2,	R1
		SUBS	R2, R2,	#3
		CMP	R2, #1
		BGE	loc_8005F28
		MOVS	R2, #1
		B	loc_8005F28
@ ---------------------------------------------------------------------------

loc_8005F26:				@ CODE XREF: sub_8005F04+Ej
		MOVS	R2, #0

loc_8005F28:				@ CODE XREF: sub_8005F04+1Cj
					@ sub_8005F04+20j
		LDR	R3, =0x200000B8
		STR	R2, [R3]
		LDR	R2, =0x5B8D80
		UDIV.W	R1, R2,	R1
		LDR	R2, =0x200000B4
		SUBS	R1, #0xA
		STR	R1, [R2]
		IT mi
		STRMI	R0, [R2]

locret_8005F3C:				@ CODE XREF: sub_8005F04+4j
		BX	LR
@ End of function sub_8005F04

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8005F40:	.long 0x155CC0		@ DATA XREF: sub_8005F04+6r
dword_8005F44:	.long 0x5B8D7F		@ DATA XREF: sub_8005F04+10r
dword_8005F48:	.long 0x5B8D80		@ DATA XREF: sub_8005F04+28r
dword_8005F4C:	.long 0x200000B0	@ DATA XREF: sub_8005F04r

@ =============== S U B	R O U T	I N E =======================================


sub_8005F50:				@ CODE XREF: sub_8005FC8+16p
					@ sub_8005FF8+30p
		PUSH.W	{R4-R10,LR}
		MOVS	R5, R0
		LDR	R0, =0x200000B4
		MOVS	R6, R1
		MOV	R8, R2
		MOV	R9, R3
		MOV	R4, R9
		MOVS	R7, #0
		MOV	R10, R0

loc_8005F64:				@ CODE XREF: sub_8005F50+5Ej
		LSLS	R0, R6,	#0x1F
		BPL	loc_8005F6E
		BL	sub_8005ED0
		B	loc_8005F72
@ ---------------------------------------------------------------------------

loc_8005F6E:				@ CODE XREF: sub_8005F50+16j
		BL	sub_8005EC0

loc_8005F72:				@ CODE XREF: sub_8005F50+1Cj
		LSLS	R0, R5,	#0x1F
		BPL	loc_8005F7C
		BL	sub_8005EB4
		B	loc_8005F80
@ ---------------------------------------------------------------------------

loc_8005F7C:				@ CODE XREF: sub_8005F50+24j
		BL	sub_8005EB0

loc_8005F80:				@ CODE XREF: sub_8005F50+2Aj
		BL	sub_8005EE0
		LDR.W	R0, [R10]
		LSRS	R5, R5,	#1
		LSRS	R6, R6,	#1
		LSRS	R7, R7,	#1
		CBZ	R0, loc_8005F94
		BL	sub_80063D0

loc_8005F94:				@ CODE XREF: sub_8005F50+3Ej
		BL	sub_8005E5C
		CBZ	R0, loc_8005F9E
		ORRS.W	R7, R7,	#0x80

loc_8005F9E:				@ CODE XREF: sub_8005F50+48j
		BL	sub_8005EE8
		LDR.W	R0, [R10]
		CBZ	R0, loc_8005FAC
		BL	sub_80063D0

loc_8005FAC:				@ CODE XREF: sub_8005F50+56j
		SUBS	R4, R4,	#1
		BNE	loc_8005F64
		MOVS	R0, #8
		MOV	R1, R9
		SUBS	R0, R0,	R1
		LSRS	R7, R0
		STRB.W	R7, [R8]
		BL	sub_8005EB0
		POP.W	{R4-R10,PC}
@ End of function sub_8005F50

@ ---------------------------------------------------------------------------
dword_8005FC4:	.long 0x200000B4	@ DATA XREF: sub_8005F04+2Er
					@ sub_8005F50+6r

@ =============== S U B	R O U T	I N E =======================================


sub_8005FC8:				@ CODE XREF: sub_8005FEC+2p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3

loc_8005FD2:				@ CODE XREF: sub_8005FC8+1Ej
		LDRB.W	R1, [R4],#1
		LDRB.W	R0, [R5],#1
		MOVS	R3, #8
		MOVS	R2, R6
		BL	sub_8005F50
		ADDS	R6, R6,	#1
		SUBS	R7, R7,	#1
		BNE	loc_8005FD2
		POP	{R4-R7,PC}
@ End of function sub_8005FC8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005FEC:				@ CODE XREF: sub_8005FF8+12p
		PUSH	{LR}
		BL	sub_8005FC8
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_8005FEC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8005FF8:				@ CODE XREF: sub_8004FF8+94p
					@ sub_8005100+38p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R0
		MOV	R9, R1
		MOVS	R6, R2
		MOVS	R7, R3
		LSRS	R4, R7,	#3
		BEQ	loc_8006014
		MOVS	R3, R4
		BL	sub_8005FEC
		MOVS	R5, R0
		BNE	loc_800602C
		B	loc_8006016
@ ---------------------------------------------------------------------------

loc_8006014:				@ CODE XREF: sub_8005FF8+Ej
		MOVS	R5, #0

loc_8006016:				@ CODE XREF: sub_8005FF8+1Aj
		LSLS	R7, R7,	#0x1D
		LSRS	R7, R7,	#0x1D
		BEQ	loc_800602C
		MOV	R0, R8
		LDRB	R1, [R0,R4]
		MOV	R0, R9
		LDRB	R0, [R0,R4]
		MOVS	R3, R7
		ADDS	R2, R6,	R4
		BL	sub_8005F50

loc_800602C:				@ CODE XREF: sub_8005FF8+18j
					@ sub_8005FF8+22j
		MOVS	R0, R5
		POP.W	{R4-R9,PC}
@ End of function sub_8005FF8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006034:				@ CODE XREF: sub_80053B8+4p
		LDR	R1, =0x2DC6C00
		STR	R1, [R0]
		MOVS	R1, #4
		STRH	R1, [R0,#4]
		BX	LR
@ End of function sub_8006034

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8006040:	.long 0x2DC6C00		@ DATA XREF: sub_8006034r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006048:				@ CODE XREF: sub_80053DC+18p
		LDR	R1, =0x200000BC
		CBZ	R0, loc_800606A
		CMP	R0, #1
		BEQ	loc_8006070
		CMP	R0, #2
		BEQ	loc_8006076
		CMP	R0, #3
		BEQ	loc_800607E
		CMP	R0, #4
		BEQ	loc_8006086
		CMP	R0, #0xA
		BEQ	loc_800608E
		CMP	R0, #0xB
		BEQ	loc_8006092
		CMP	R0, #0xC
		BEQ	loc_8006096
		B	loc_800609A
@ ---------------------------------------------------------------------------

loc_800606A:				@ CODE XREF: sub_8006048+2j
		LDR	R0, =0x2000101D
		LDRB	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006070:				@ CODE XREF: sub_8006048+6j
		LDR	R0, =0x200000C4
		LDR	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006076:				@ CODE XREF: sub_8006048+Aj
		LDR	R0, =0x20001016
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800607E:				@ CODE XREF: sub_8006048+Ej
		LDR	R0, =0x20001018
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006086:				@ CODE XREF: sub_8006048+12j
		LDR	R0, =0x2000101A
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800608E:				@ CODE XREF: sub_8006048+16j
		LDRH	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006092:				@ CODE XREF: sub_8006048+1Aj
		LDRH	R0, [R1,#2]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006096:				@ CODE XREF: sub_8006048+1Ej
		LDRH	R0, [R1,#4]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800609A:				@ CODE XREF: sub_8006048+20j
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ End of function sub_8006048

@ ---------------------------------------------------------------------------
dword_80060A0:	.long 0x200000BC	@ DATA XREF: sub_8006048r
dword_80060A4:	.long 0x2000101D	@ DATA XREF: sub_8006048:loc_800606Ar
dword_80060A8:	.long 0x200000C4	@ DATA XREF: sub_8006048:loc_8006070r
dword_80060AC:	.long 0x20001016	@ DATA XREF: sub_8006048:loc_8006076r
dword_80060B0:	.long 0x20001018	@ DATA XREF: sub_8006048:loc_800607Er
dword_80060B4:	.long 0x2000101A	@ DATA XREF: sub_8006048:loc_8006086r

@ =============== S U B	R O U T	I N E =======================================


sub_80060B8:				@ CODE XREF: sub_8007164+10p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20001020
		LDRB	R5, [R4]
		BL	sub_8005D78
		CBZ	R0, loc_80060D6
		LDR	R0, =0x2000101E
		LDRB	R0, [R0]
		CBZ	R0, loc_80060D0
		CBNZ	R5, loc_80060D0
		BL	sub_8005D18

loc_80060D0:				@ CODE XREF: sub_80060B8+10j
					@ sub_80060B8+12j
		MOVS	R0, #1
		STRB	R0, [R4]
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_80060D6:				@ CODE XREF: sub_80060B8+Aj
		CBZ	R5, locret_80060DE
		STRB	R0, [R4]
		BL	sub_8005D58

locret_80060DE:				@ CODE XREF: sub_80060B8:loc_80060D6j
		POP	{R4,R5,PC}
@ End of function sub_80060B8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: noreturn

sub_80060E0:				@ CODE XREF: sub_80057B8+44p
					@ sub_8005BB0+8Ap
		PUSH	{LR}
		BL	sub_8007136
		LDR	R0, =0xE000ED0C
		LDR	R2, =0x5FA0007
		LDR	R1, [R0]
		UXTH	R1, R1
		ORRS	R2, R1
		STR	R2, [R0]

loc_80060F2:				@ CODE XREF: sub_80060E0:loc_80060F2j
		B	loc_80060F2
@ End of function sub_80060E0

@ ---------------------------------------------------------------------------
dword_80060F4:	.long 0xE000ED0C	@ DATA XREF: sub_80060E0+6r
dword_80060F8:	.long 0x5FA0007		@ DATA XREF: sub_80060E0+8r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_4. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 0x10
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_5. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006104:				@ CODE XREF: sub_80061EC+Cp
		PUSH.W	{R0,R4-R11,LR}
		LDR	R7, =0x40010800
		STR	R2, [SP,#0]
		MOVS	R4, R0
		LDR	R0, =0x200000B8
		MOV	R8, R3
		MOVS	R5, R1
		MOVS	R6, #0
		MOV	R9, R8
		MOV	R10, R0
		MOVS	R0, #0x20
		MOV	R11, R0

loc_800611E:				@ CODE XREF: sub_8006104+6Ej
		MOVS	R0, #0xFFFFFFF
		LSLS	R1, R4,	#0x1F
		LDR	R1, [R7]
		BPL	loc_8006130
		ANDS	R0, R1
		ORRS.W	R0, R0,	#0x30000000
		B	loc_8006136
@ ---------------------------------------------------------------------------

loc_8006130:				@ CODE XREF: sub_8006104+22j
		ANDS	R0, R1
		ORRS.W	R0, R0,	#0x80000000

loc_8006136:				@ CODE XREF: sub_8006104+2Aj
		STR	R0, [R7]
		MOVS	R0, #0x80
		LSLS	R1, R5,	#0x1F
		ITE pl
		STRPL	R0, [R7,#0x14]
		STRMI	R0, [R7,#0x10]
		STR.W	R11, [R7,#0x10]
		LDR.W	R0, [R10]
		LSRS	R4, R4,	#1
		LSRS	R5, R5,	#1
		BL	sub_80063D0
		STR.W	R11, [R7,#0x14]
		LDR.W	R0, [R10]
		LSLS	R6, R6,	#0x17
		LSRS	R6, R6,	#0x18
		BL	sub_80063D0
		LDR	R0, [R7,#8]
		LSLS	R0, R0,	#0x1B
		IT mi
		ORRSMI.W R6, R6, #0x80
		MOV	R0, R9
		SUBS	R0, R0,	#1
		MOV	R9, R0
		BNE	loc_800611E
		LDR	R0, [SP,#0]
		MOVS	R1, #8
		MOV	R2, R8
		SUBS	R1, R1,	R2
		LSRS	R6, R1
		STRB	R6, [R0]
		MOVS	R0, #0
		POP.W	{R1,R4-R11,PC}
@ End of function sub_8006104

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006188:				@ CODE XREF: sub_80061EC+12p
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R2, #0
		MOVS	R4, #0x20
		MOV	R9, R3

loc_8006194:				@ CODE XREF: sub_8006188+4Cj
		LDR	R5, =0x40010800
		MOVS	R6, #0xFFFFFFF
		LSLS	R7, R0,	#0x1F
		LDR	R7, [R5]
		BPL	loc_80061A8
		ANDS	R6, R7
		ORRS.W	R6, R6,	#0x30000000
		B	loc_80061AE
@ ---------------------------------------------------------------------------

loc_80061A8:				@ CODE XREF: sub_8006188+16j
		ANDS	R6, R7
		ORRS.W	R6, R6,	#0x80000000

loc_80061AE:				@ CODE XREF: sub_8006188+1Ej
		STR	R6, [R5]
		MOVS	R6, #0x80
		LSLS	R7, R1,	#0x1F
		ITE pl
		STRPL	R6, [R5,#0x14]
		STRMI	R6, [R5,#0x10]
		STR	R4, [R5,#0x10]
		STR	R4, [R5,#0x10]
		STR	R4, [R5,#0x14]
		LDR	R5, [R5,#8]
		LSRS	R0, R0,	#1
		LSRS	R1, R1,	#1
		LSLS	R2, R2,	#0x17
		LSRS	R2, R2,	#0x18
		LSLS	R5, R5,	#0x1B
		IT mi
		ORRSMI.W R2, R2, #0x80
		SUBS	R3, R3,	#1
		BNE	loc_8006194
		MOVS	R0, #8
		MOV	R1, R9
		SUBS	R0, R0,	R1
		LSRS	R2, R0
		STRB.W	R2, [R8]
		MOVS	R0, #0
		POP.W	{R4-R9,PC}
@ End of function sub_8006188

@ ---------------------------------------------------------------------------
dword_80061E8:	.long 0x40010800	@ DATA XREF: sub_8006104+4r
					@ sub_8006188:loc_8006194r

@ =============== S U B	R O U T	I N E =======================================


sub_80061EC:				@ CODE XREF: sub_8006204+16p
					@ sub_8006228+2Cp
		PUSH	{R4,LR}
		LDR	R4, =0x200000B8
		LDR	R4, [R4]
		CBZ	R4, loc_80061FA
		POP.W	{R4,LR}
		B	sub_8006104
@ ---------------------------------------------------------------------------

loc_80061FA:				@ CODE XREF: sub_80061EC+6j
		POP.W	{R4,LR}
		B	sub_8006188
@ End of function sub_80061EC

@ ---------------------------------------------------------------------------
dword_8006200:	.long 0x200000B8	@ DATA XREF: sub_8005F04:loc_8005F28r
					@ sub_8006104+Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006204:				@ CODE XREF: sub_8006228+12p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3

loc_800620E:				@ CODE XREF: sub_8006204+1Ej
		LDRB.W	R1, [R4],#1
		LDRB.W	R0, [R5],#1
		MOVS	R3, #8
		MOVS	R2, R6
		BL	sub_80061EC
		ADDS	R6, R6,	#1
		SUBS	R7, R7,	#1
		BNE	loc_800620E
		POP	{R4-R7,PC}
@ End of function sub_8006204

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006228:				@ CODE XREF: sub_8004204+8j
					@ sub_8004214+20p ...
		PUSH.W	{R4-R8,LR}
		MOV	R8, R0
		MOVS	R4, R1
		MOVS	R5, R2
		MOVS	R6, R3
		LSRS	R7, R6,	#3
		BEQ	loc_8006242
		MOVS	R3, R7
		BL	sub_8006204
		CBNZ	R0, locret_8006258
		B	loc_8006244
@ ---------------------------------------------------------------------------

loc_8006242:				@ CODE XREF: sub_8006228+Ej
		MOVS	R0, #0

loc_8006244:				@ CODE XREF: sub_8006228+18j
		LSLS	R1, R6,	#0x1D
		BEQ	locret_8006258
		MOV	R0, R8
		LDRB	R1, [R0,R7]
		LDRB	R0, [R4,R7]
		LSLS	R3, R6,	#0x1D
		LSRS	R3, R3,	#0x1D
		ADDS	R2, R5,	R7
		BL	sub_80061EC

locret_8006258:				@ CODE XREF: sub_8006228+16j
					@ sub_8006228+1Ej
		POP.W	{R4-R8,PC}
@ End of function sub_8006228


@ =============== S U B	R O U T	I N E =======================================


sub_800625C:				@ CODE XREF: sub_8005A7C+18p
		LDR	R2, =0x20001020
		LDR	R1, =0x2000101F
		LDRB	R2, [R2]
		CBZ	R2, loc_8006274
		LDR	R2, =0x2000101E
		LDRB	R2, [R2]
		CBZ	R2, loc_8006274
		LDRB	R2, [R1]
		CMP	R2, R0
		BEQ	loc_8006274
		STRB	R0, [R1]
		B	sub_8005D18
@ ---------------------------------------------------------------------------

loc_8006274:				@ CODE XREF: sub_800625C+6j
					@ sub_800625C+Cj ...
		STRB	R0, [R1]
		BX	LR
@ End of function sub_800625C

@ ---------------------------------------------------------------------------
dword_8006278:	.long 0x20001020	@ DATA XREF: sub_80060B8+2r
					@ sub_800625Cr
dword_800627C:	.long 0x2000101F	@ DATA XREF: sub_800625C+2r
dword_8006280:	.long 0x2000101E	@ DATA XREF: sub_80060B8+Cr
					@ sub_800625C+8r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_8006384

loc_8006284:				@ CODE XREF: sub_8006384+Cj
		LDR	R0, =0x40021018
		LDR	R2, =0x4004
		LDR	R3, =0x200000CC
		PUSH	{LR}
		LDR	R1, [R0]
		ORRS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x40010804
		MOVS	R2, #0xFFFFF0FF
		LDR	R1, [R0]
		ANDS	R2, R1
		ORRS.W	R1, R2,	#0x800
		LDR	R2, =0x8954400
		STR	R1, [R0]
		LDR	R0, =0x40013808
		LSRS	R1, R0,	#0x15
		STR	R1, [R0,#8]
		MOVS	R1, #0x24
		STR	R1, [R0,#4]
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R3, [R3]
		LSLS	R3, R3,	#4
		UDIV.W	R2, R2,	R3
		LDR	R3, =0x200000D0
		ADDS	R2, R2,	#1
		LSRS	R2, R2,	#1
		LSLS	R2, R2,	#4
		STR	R2, [R0]
		LDR	R2, =0x200000D8
		LDR	R3, [R3]
		STR	R3, [R2]
		LDR	R3, =0x200000D4
		LDR	R2, =0x200000DC
		LDR	R3, [R3]
		STR	R3, [R2]
		LDR	R2, =0x200000E0
		STR	R1, [R2]
		LDR	R1, [R0,#4]
		ORRS.W	R1, R1,	#0x2000
		STR	R1, [R0,#4]
		MOVS	R1, #0x10
		MOVS	R0, #0x35
		BL	sub_800727C
		MOVS	R0, #0x35
		BL	sub_8007210
		POP	{PC}
@ END OF FUNCTION CHUNK	FOR sub_8006384
@ ---------------------------------------------------------------------------
		.align 0x10
dword_80062F0:	.long 0x4004		@ DATA XREF: sub_8006384-FEr
dword_80062F4:	.long 0x40010804	@ DATA XREF: sub_8006384-F2r
dword_80062F8:	.long 0x8954400		@ DATA XREF: sub_8006384-E4r
dword_80062FC:	.long 0x40013808	@ DATA XREF: sub_8006384-E0r
dword_8006300:	.long 0x40021018	@ DATA XREF: sub_8006384:loc_8006284r

@ =============== S U B	R O U T	I N E =======================================


sub_8006304:				@ CODE XREF: sub_80063A0j
		LDR	R0, =0x4001380C
		MOVS	R2, #4
		LDR	R1, [R0]
		BICS	R1, R2
		STR	R1, [R0]
		BX	LR
@ End of function sub_8006304

@ ---------------------------------------------------------------------------
dword_8006310:	.long 0x4001380C	@ DATA XREF: sub_8006304r

@ =============== S U B	R O U T	I N E =======================================


sub_8006314:				@ CODE XREF: sub_80063A4j
		CPSID	I
		LDR	R2, =0x200000D8
		LDR	R2, [R2]
		STR	R2, [R0]
		LDR	R0, =0x200000DC
		LDR	R0, [R0]
		STR	R0, [R1]
		CPSIE	I
		BX	LR
@ End of function sub_8006314

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006328:				@ CODE XREF: sub_80063A8j
		CPSID	I
		LDR	R1, =0x200000D8
		LDR	R1, [R1]
		SUBS	R2, R0,	R1
		CMP	R2, #1
		BGE	loc_8006346
		LDR	R2, =0x200000D0
		LDR	R3, [R2]
		LDR	R2, =0x200000D4
		SUBS	R0, R0,	R3
		LDR	R2, [R2]
		ADDS	R2, R3,	R2
		SUBS	R2, R2,	R1
		LDR	R1, =0x200000E0
		STR	R0, [R1]

loc_8006346:				@ CODE XREF: sub_8006328+Aj
		LDR	R0, =0x200000DC
		STR	R2, [R0]
		CPSIE	I
		BX	LR
@ End of function sub_8006328

@ ---------------------------------------------------------------------------
		.align 0x10

loc_8006350:				@ CODE XREF: ROM:080063BAj
		LDR	R1, =0x200000DC
		LDR	R3, =0x200000D8
		PUSH	{R4,LR}
		LDR	R2, [R1]
		LDR	R4, [R3]
		CBZ	R2, loc_8006372
		SUBS	R2, R2,	#1
		STRB.W	R0, [R4],#1
		BNE	loc_8006370
		LDR	R0, =0x200000E0
		MOVS	R4, #0
		LDR	R2, [R0]
		STR	R4, [R0]
		LDR	R0, =0x200000D0
		LDR	R4, [R0]

loc_8006370:				@ CODE XREF: ROM:08006362j
		STR	R2, [R1]

loc_8006372:				@ CODE XREF: ROM:0800635Aj
		STR	R4, [R3]
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_8006378:	.long 0x200000DC	@ DATA XREF: sub_8006384-B8r
					@ sub_8006314+8r ...
dword_800637C:	.long 0x200000D8	@ DATA XREF: sub_8006384-C0r
					@ sub_8006314+2r ...
dword_8006380:	.long 0x200000E0	@ DATA XREF: sub_8006384-B2r
					@ sub_8006328+1Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006384:				@ CODE XREF: sub_80074D8+54p

@ FUNCTION CHUNK AT 08006284 SIZE 0000006A BYTES

		LDR	R0, =0x200000CC
		STR	R1, [R0]
		LDR	R0, =0x200000D0
		STR	R2, [R0]
		LDR	R0, =0x200000D4
		STR	R3, [R0]
		B	loc_8006284
@ End of function sub_8006384

@ ---------------------------------------------------------------------------
		.align 4
dword_8006394:	.long 0x200000CC	@ DATA XREF: sub_8006384-FCr
					@ sub_8006384r
dword_8006398:	.long 0x200000D0	@ DATA XREF: sub_8006384-CAr
					@ sub_8006328+Cr ...
dword_800639C:	.long 0x200000D4	@ DATA XREF: sub_8006384-BAr
					@ sub_8006328+10r ...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80063A0:				@ CODE XREF: sub_80074D8:loc_8007520p
					@ sub_800753C+8p
		B	sub_8006304
@ End of function sub_80063A0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80063A4:				@ CODE XREF: sub_8007590+20p
		B	sub_8006314
@ End of function sub_80063A4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80063A8:				@ CODE XREF: sub_8007558+2Ap
		B	sub_8006328
@ End of function sub_80063A8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80063AC:				@ CODE XREF: sub_800760C+58p
					@ sub_8007670+22p
		LDR	R0, =dword_800927C
		BX	LR
@ End of function sub_80063AC

@ ---------------------------------------------------------------------------
off_80063B0:	.long dword_800927C	@ DATA XREF: sub_80063ACr
@ ---------------------------------------------------------------------------
		LDR	R0, =0x40013804
		LDR	R0, [R0]
		UXTB	R0, R0
		B	loc_8006350
@ ---------------------------------------------------------------------------
dword_80063BC:	.long 0x40013804	@ DATA XREF: ROM:080063B4r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_7. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_8. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80063C8:				@ CODE XREF: sub_80064E4+4p
		LDR	R0, =0x20004FFF
		BX	LR
@ End of function sub_80063C8

@ ---------------------------------------------------------------------------
dword_80063CC:	.long 0x20004FFF	@ DATA XREF: sub_80063C8r

@ =============== S U B	R O U T	I N E =======================================


sub_80063D0:				@ CODE XREF: sub_8005F50+40p
					@ sub_8005F50+58p ...
		SUBS	R0, R0,	#1
		BNE	sub_80063D0
		BX	LR
@ End of function sub_80063D0

@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_8006410

loc_80063D8:				@ CODE XREF: sub_8006410+10j
		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MULS	R1, R0
		LDRB	R1, [R2,R1]
		CBZ	R1, loc_80063E6
		B.W	loc_8005E18
@ ---------------------------------------------------------------------------

loc_80063E6:				@ CODE XREF: sub_8006410-30j
		B.W	loc_8005E24
@ END OF FUNCTION CHUNK	FOR sub_8006410
@ ---------------------------------------------------------------------------
		.align 4
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_6. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_80063F0:				@ CODE XREF: sub_80057B8+2Ap
					@ sub_8005CA8+Cp ...

@ FUNCTION CHUNK AT 08005E18 SIZE 0000000A BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MOVS	R3, #1
		MULS	R1, R0
		STRB	R3, [R2,R1]
		B.W	loc_8005E18
@ End of function sub_80063F0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8006400:				@ CODE XREF: sub_80057B8:loc_80057E8p
					@ sub_8005CA8+1Ap ...

@ FUNCTION CHUNK AT 08005E24 SIZE 0000000A BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MOVS	R3, #0
		MULS	R1, R0
		STRB	R3, [R2,R1]
		B.W	loc_8005E24
@ End of function sub_8006400

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8006410:				@ CODE XREF: sub_800587C+8p
					@ sub_80064E4+78p

@ FUNCTION CHUNK AT 080063D8 SIZE 00000012 BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MLA.W	R1, R0,	R1, R2
		LDRB	R2, [R1]
		EORS.W	R2, R2,	#1
		STRB	R2, [R1]
		B	loc_80063D8
@ End of function sub_8006410

@ ---------------------------------------------------------------------------
		.align 4
dword_8006424:	.long 0x200000E4	@ DATA XREF: sub_8006410:loc_80063D8r
					@ sub_80063F0r	...
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800644C

loc_8006428:				@ CODE XREF: sub_800644C+1Ej
		LDR	R0, =0x200000F0
		LDR	R0, [R0]
		CBNZ	R0, loc_8006432

locret_800642E:				@ CODE XREF: sub_800644C-16j
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006430:				@ CODE XREF: sub_800644C-Ej
		MOVS	R0, R1

loc_8006432:				@ CODE XREF: sub_800644C-20j
					@ sub_800644C-2j
		LDR	R1, [R0,#4]
		CMP	R1, #0
		BEQ	locret_800642E
		LDR	R2, [R0]
		ADDS	R3, R0,	R2
		CMP	R3, R1
		BNE	loc_8006430
		LDR	R3, [R1,#4]
		STR	R3, [R0,#4]
		LDR	R1, [R1]
		ADDS	R1, R2,	R1
		STR	R1, [R0]
		B	loc_8006432
@ END OF FUNCTION CHUNK	FOR sub_800644C

@ =============== S U B	R O U T	I N E =======================================


sub_800644C:				@ CODE XREF: sub_80064CC+8p
					@ sub_80064DC+4j

@ FUNCTION CHUNK AT 08006428 SIZE 00000024 BYTES

		MOVS	R2, #0
		STR	R2, [R0,#4]
		STR	R1, [R0]
		LDR	R1, =0x200000F0
		LDR	R2, [R1]
		CBNZ	R2, loc_800645E
		STR	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800645C:				@ CODE XREF: sub_800644C+18j
		ADDS	R1, R2,	#4

loc_800645E:				@ CODE XREF: sub_800644C+Aj
		LDR	R2, [R1]
		CBZ	R2, loc_8006466
		CMP	R0, R2
		BCS	loc_800645C

loc_8006466:				@ CODE XREF: sub_800644C+14j
		STR	R2, [R0,#4]
		STR	R0, [R1]
		B	loc_8006428
@ End of function sub_800644C


@ =============== S U B	R O U T	I N E =======================================


sub_800646C:				@ CODE XREF: sub_8004CD0+24p
					@ sub_8004DAC+28p ...
		LDR	R1, =0x200000F0
		MOVS	R0, #0
		LDR	R1, [R1]
		B	loc_800647E
@ ---------------------------------------------------------------------------

loc_8006474:				@ CODE XREF: sub_800646C+14j
		LDR	R2, [R1]
		CMP	R0, R2
		IT cc
		MOVCC	R0, R2
		LDR	R1, [R1,#4]

loc_800647E:				@ CODE XREF: sub_800646C+6j
		CMP	R1, #0
		BNE	loc_8006474
		CBZ	R0, locret_8006486
		SUBS	R0, #8

locret_8006486:				@ CODE XREF: sub_800646C+16j
		BX	LR
@ End of function sub_800646C


@ =============== S U B	R O U T	I N E =======================================


sub_8006488:				@ CODE XREF: sub_8004CD0+34p
					@ sub_8004DAC+38p ...
		PUSH	{R4,LR}
		MOVS	R1, R0
		MOVS	R0, #0
		ADDS	R1, R1,	#7
		MOVS	R2, #7
		BICS	R1, R2
		LDR	R2, =0x200000F0
		ADDS	R1, #8
		B	loc_800649C
@ ---------------------------------------------------------------------------

loc_800649A:				@ CODE XREF: sub_8006488:loc_80064B8j
		ADDS	R2, R3,	#4

loc_800649C:				@ CODE XREF: sub_8006488+10j
		LDR	R3, [R2]
		CBZ	R3, locret_80064C6
		LDR	R4, [R3]
		CMP	R1, R4
		BCS	loc_80064B8
		MOVS	R0, R3
		ADDS	R3, R3,	R1
		STR	R3, [R2]
		LDR	R2, [R0]
		SUBS	R2, R2,	R1
		STR	R2, [R3]
		LDR	R2, [R0,#4]
		STR	R2, [R3,#4]
		B	loc_80064C0
@ ---------------------------------------------------------------------------

loc_80064B8:				@ CODE XREF: sub_8006488+1Cj
		BNE	loc_800649A
		MOVS	R0, R3
		LDR	R3, [R3,#4]
		STR	R3, [R2]

loc_80064C0:				@ CODE XREF: sub_8006488+2Ej
		CBZ	R0, locret_80064C6
		STR.W	R1, [R0],#8

locret_80064C6:				@ CODE XREF: sub_8006488+16j
					@ sub_8006488:loc_80064C0j
		POP	{R4,PC}
@ End of function sub_8006488

@ ---------------------------------------------------------------------------
dword_80064C8:	.long 0x200000F0	@ DATA XREF: sub_800644C:loc_8006428r
					@ sub_800644C+6r ...

@ =============== S U B	R O U T	I N E =======================================


sub_80064CC:				@ CODE XREF: sub_8004CD0+7Ap
					@ sub_8004DAC+4Cp ...
		PUSH	{LR}
		CBZ	R0, locret_80064D8
		LDR.W	R1, [R0,#-8]!
		BL	sub_800644C

locret_80064D8:				@ CODE XREF: sub_80064CC+2j
		POP	{PC}
@ End of function sub_80064CC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80064DC:				@ CODE XREF: sub_80064E4+10p
		MOVS	R2, #7
		BICS	R1, R2
		B	sub_800644C
@ End of function sub_80064DC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: noreturn

sub_80064E4:				@ DATA XREF: sub_8008ECC+22o
					@ ROM:off_8008F10o ...
		PUSH	{R0,R4,LR}
		LDR	R4, =0x20001408
		BL	sub_80063C8
		SUBS	R1, R0,	R4
		ADDS	R1, R1,	#1
		MOVS	R0, R4
		LDR	R4, =0x2000067C
		BL	sub_80064DC
		BL	sub_8005D8C
		LDR	R0, =0x4E20
		BL	sub_8005F04
		MOVS	R0, #1
		BL	nullsub_3
		BL	sub_8005E30
		BL	nullsub_6
		MOVS	R0, #0
		BL	sub_80063F0
		BL	sub_8006694
		B	loc_8006554
@ ---------------------------------------------------------------------------

loc_800651C:				@ CODE XREF: sub_80064E4+6Aj
		BL	sub_80063F0
		MOVS	R0, #1
		STR	R0, [R4]
		BL	nullsub_4
		MOV	R0, SP
		BL	sub_80066D4
		CBNZ	R0, loc_8006548
		BL	nullsub_5
		MOVS.W	R0, #0xFFFFFFFF
		STR	R0, [R4]
		MOVS	R0, #0
		BL	sub_8006400
		LDRB.W	R0, [SP,#0]
		BL	sub_800588C

loc_8006548:				@ CODE XREF: sub_80064E4+4Aj
					@ sub_80064E4+76j
		BL	sub_80065B8
		CMP	R0, #0
		BEQ	loc_800651C
		BL	sub_80066B8

loc_8006554:				@ CODE XREF: sub_80064E4+36j
					@ sub_80064E4+82j
		BL	sub_80066D0
		CMP	R0, #0
		BNE	loc_8006548
		BL	sub_8006410
		MOVS	R0, #0x32
		BL	sub_8006E24
		B	loc_8006554
@ End of function sub_80064E4

@ ---------------------------------------------------------------------------
dword_8006568:	.long 0x20001408	@ DATA XREF: sub_80064E4+2r
dword_800656C:	.long 0x2000067C	@ DATA XREF: sub_80064E4+Er
dword_8006570:	.long 0x4E20		@ DATA XREF: sub_80064E4+18r

@ =============== S U B	R O U T	I N E =======================================


sub_8006574:				@ CODE XREF: sub_80066D4:loc_80066E6p
		PUSH	{R0,R4,LR}
		LDR	R4, =0x200000F8
		BL	sub_80069D8
		CBNZ	R0, loc_8006588
		MOVS	R1, #2
		MOVS	R0, R4
		BL	sub_8006FF4
		POP	{R0,R4,PC}
@ ---------------------------------------------------------------------------

loc_8006588:				@ CODE XREF: sub_8006574+8j
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_80069B8
		MOVS	R0, R4
		BL	sub_8006FC8
		POP	{R0,R4,PC}
@ End of function sub_8006574


@ =============== S U B	R O U T	I N E =======================================


sub_8006598:				@ CODE XREF: sub_80066D4+16p
		PUSH	{LR}
		BL	sub_80069D8
		CBZ	R0, loc_80065B2
		BL	sub_80069D4
		CMP	R0, #1
		BLT	loc_80065B2
		LDR	R0, =0x200000F4
		LDR	R1, =off_80092A0
		STR	R1, [R0]
		MOVS	R0, #1
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_80065B2:				@ CODE XREF: sub_8006598+6j
					@ sub_8006598+Ej
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_8006598

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80065B8:				@ CODE XREF: sub_80064E4:loc_8006548p
					@ sub_80066D4+4p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#8]
		BX	R0
@ End of function sub_80065B8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80065C0:				@ CODE XREF: sub_80066B8+2p
		B.W	sub_8006814
@ End of function sub_80065C0


@ =============== S U B	R O U T	I N E =======================================


sub_80065C4:				@ CODE XREF: sub_8004CD0+62p
					@ sub_8004E34+32p ...
		PUSH	{LR}
		MOVS	R2, R1
		ORRS	R2, R0
		BEQ	locret_80065D4
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x18]
		BLX	R2

locret_80065D4:				@ CODE XREF: sub_80065C4+6j
		POP	{PC}
@ End of function sub_80065C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80065D8:				@ CODE XREF: sub_800663C-6p
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x20]
		BX	R2
@ End of function sub_80065D8


@ =============== S U B	R O U T	I N E =======================================


sub_80065E0:				@ CODE XREF: sub_8004CD0+72p
					@ sub_8004FF8+3Ep
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x20
		MOVS	R4, R0
		MOV	R0, SP
		MOVS	R1, #0
		MOVS	R2, #0x20

loc_80065EC:				@ CODE XREF: sub_80065E0+10j
		SUBS	R2, R2,	#4
		STR	R1, [R0,R2]
		BNE	loc_80065EC

loc_80065F2:				@ CODE XREF: sub_80065E0+28j
		CMP	R4, #0x21
		ITE cc
		MOVCC	R5, R4
		MOVCS	R5, #0x20
		LDR	R2, =0x200000F4
		MOVS	R1, R5
		MOV	R0, SP
		LDR	R2, [R2]
		LDR	R2, [R2,#0x18]
		BLX	R2
		SUBS	R4, R4,	R5
		BNE	loc_80065F2
		ADD	SP, SP,	#0x20
		POP	{R4,R5,PC}
@ End of function sub_80065E0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8006610:				@ CODE XREF: sub_8004FF8+C8p
					@ sub_8007558+Cp
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x1C]
		BX	R2
@ End of function sub_8006610


@ =============== S U B	R O U T	I N E =======================================


sub_8006618:				@ CODE XREF: sub_8004FF8+F0p
					@ sub_8005344+2Ep ...
		PUSH	{R0,LR}
		MOVS	R1, #1
		B	loc_8006624
@ End of function sub_8006618

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8006620:				@ CODE XREF: sub_8004FD8+Ep
					@ sub_80052FC+4p ...
		PUSH	{R0,LR}
		MOVS	R1, #2
@ End of function sub_8006620

@ START	OF FUNCTION CHUNK FOR sub_800662C

loc_8006624:				@ CODE XREF: sub_8006618+4j
					@ sub_800662C+4j
		MOV	R0, SP
		BL	sub_80065C4
		POP	{R0,PC}
@ END OF FUNCTION CHUNK	FOR sub_800662C

@ =============== S U B	R O U T	I N E =======================================


sub_800662C:				@ CODE XREF: sub_8004F3C+8Cp
					@ sub_80053CC+Ap ...

@ FUNCTION CHUNK AT 08006624 SIZE 00000008 BYTES

		PUSH	{R0,LR}
		MOVS	R1, #4
		B	loc_8006624
@ End of function sub_800662C

@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800663C

loc_8006634:				@ CODE XREF: sub_800663C+4j
		MOV	R0, SP
		BL	sub_80065D8
		POP	{R0,PC}
@ END OF FUNCTION CHUNK	FOR sub_800663C

@ =============== S U B	R O U T	I N E =======================================


sub_800663C:				@ CODE XREF: sub_800760C+4Cp
					@ sub_800760C+52p

@ FUNCTION CHUNK AT 08006634 SIZE 00000008 BYTES

		PUSH	{R0,LR}
		MOVS	R1, #4
		B	loc_8006634
@ End of function sub_800663C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006644:				@ CODE XREF: sub_8004FF8+E8p
					@ sub_8007590:loc_8007602p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#0x24]
		BX	R0
@ End of function sub_8006644


@ =============== S U B	R O U T	I N E =======================================


sub_800664C:				@ CODE XREF: sub_8004CD0+8p
					@ sub_8004CD0+10p ...
		CBNZ	R1, loc_8006652
		MOVS	R0, #0
		BX	LR
@ ---------------------------------------------------------------------------

loc_8006652:				@ CODE XREF: sub_800664Cj
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0xC]
		BX	R2
@ End of function sub_800664C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800665C:				@ CODE XREF: sub_8004DAC+44p
					@ sub_8004ED0+64p ...
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x20
		MOVS	R4, R0

loc_8006662:				@ CODE XREF: sub_800665C+1Aj
		CMP	R4, #0x21
		ITE cc
		MOVCC	R5, R4
		MOVCS	R5, #0x20
		MOVS	R1, R5
		MOV	R0, SP
		BL	sub_800664C
		CBNZ	R0, loc_8006678
		SUBS	R4, R4,	R5
		BNE	loc_8006662

loc_8006678:				@ CODE XREF: sub_800665C+16j
		ADD	SP, SP,	#0x20
		POP	{R4,R5,PC}
@ End of function sub_800665C


@ =============== S U B	R O U T	I N E =======================================


sub_800667C:				@ CODE XREF: sub_8004D54+10p
					@ sub_8004FF8+52p
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x10]
		BX	R2
@ End of function sub_800667C


@ =============== S U B	R O U T	I N E =======================================


sub_8006684:				@ CODE XREF: sub_8004D54:loc_8004D6Ap
					@ sub_8004FF8:loc_800504Ep
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0]
		BX	R0
@ End of function sub_8006684


@ =============== S U B	R O U T	I N E =======================================


sub_800668C:				@ CODE XREF: sub_8007558:loc_8007568p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#4]
		BX	R0
@ End of function sub_800668C


@ =============== S U B	R O U T	I N E =======================================


sub_8006694:				@ CODE XREF: sub_80064E4+32p
		LDR	R0, =0x200000F8
		PUSH	{LR}
		BL	sub_8006F24
		BL	sub_80067D8
		LDR	R0, =0x200000F4
		LDR	R1, =off_80092A0
		STR	R1, [R0]
		POP	{PC}
@ End of function sub_8006694

@ ---------------------------------------------------------------------------
off_80066A8:	.long off_80092A0	@ DATA XREF: sub_8006598+12r
					@ sub_8006694+Er

@ =============== S U B	R O U T	I N E =======================================


sub_80066AC:				@ CODE XREF: ROM:loc_8006798j
					@ sub_800679C+Ep
		LDR	R0, =0x200000F8
		B.W	sub_8006F84
@ End of function sub_80066AC

@ ---------------------------------------------------------------------------
		.align 4
dword_80066B4:	.long 0x200000F8	@ DATA XREF: sub_8006574+2r
					@ sub_8006694r	...

@ =============== S U B	R O U T	I N E =======================================


sub_80066B8:				@ CODE XREF: sub_80064E4+6Cp
					@ sub_80066D4+Ap
		PUSH	{LR}
		BL	sub_80065C0
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#0x14]
		LDR.W	LR, [SP+0],#4
		BX	R0
@ End of function sub_80066B8

@ ---------------------------------------------------------------------------
		.align 4
dword_80066CC:	.long 0x200000F4	@ DATA XREF: sub_8006598+10r
					@ sub_80065B8r	...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80066D0:				@ CODE XREF: sub_80064E4:loc_8006554p
		B.W	sub_80069D8
@ End of function sub_80066D0


@ =============== S U B	R O U T	I N E =======================================


sub_80066D4:				@ CODE XREF: sub_80064E4+46p
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_80065B8
		CBZ	R0, loc_80066E2
		BL	sub_80066B8

loc_80066E2:				@ CODE XREF: sub_80066D4+8j
		BL	sub_80069F0

loc_80066E6:				@ CODE XREF: sub_80066D4+1Cj
		BL	sub_8006574
		BL	sub_8006598
		CMP	R0, #0
		BEQ	loc_80066E6
		MOVS	R1, #1
		MOVS	R0, R4
		BL	sub_800664C
		MOVS	R4, R0
		BL	sub_8006A00
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_80066D4


@ =============== S U B	R O U T	I N E =======================================


sub_8006704:				@ CODE XREF: sub_80067D8+Ap
		PUSH	{R0,LR}
		MOVS	R3, #0
		MOVS	R0, #0
		PUSH	{R0}
		MOVS	R2, #0x40
		MOVS	R1, #2
		MOVS	R0, #1
		BL	sub_8007F38
		LDR	R3, =0x20000114
		STRB.W	R0, [SP,#4]
		MOVS	R0, #0x40
		PUSH	{R0}
		MOV	R2, R0
		MOVS	R1, #2
		MOVS	R0, #0
		BL	sub_8007F38
		STRB.W	R0, [SP,#9]
		ADD	R0, SP,	#8
		BL	sub_8007824
		POP	{R0-R2,PC}
@ End of function sub_8006704

@ ---------------------------------------------------------------------------
		.align 4
dword_8006738:	.long 0x20000114	@ DATA XREF: sub_8006704+12r

@ =============== S U B	R O U T	I N E =======================================


sub_800673C:				@ CODE XREF: sub_800675C+16j
		PUSH	{R4,LR}
		MOVS	R2, R0
		LDR	R4, =0x20000014
		MOVS	R3, #0xA

loc_8006744:				@ CODE XREF: sub_800673C+1Cj
		MOVS	R0, R2
		MOVS	R1, #0xA
		BL	sub_8008F88
		ADDS	R0, #0x30
		STRB	R0, [R4,R3]
		MOVS	R0, #0xA
		UDIV.W	R2, R2,	R0
		SUBS	R3, R3,	#1
		BNE	loc_8006744
		POP	{R4,PC}
@ End of function sub_800673C


@ =============== S U B	R O U T	I N E =======================================


sub_800675C:				@ CODE XREF: sub_80067D8+2p
		LDR	R0, =byte_800F801
		LDRB	R0, [R0]
		CMP	R0, #1
		BEQ	loc_800676A
		CMP	R0, #2
		BEQ	loc_800676E
		B	loc_8006774
@ ---------------------------------------------------------------------------

loc_800676A:				@ CODE XREF: sub_800675C+6j
		LDR	R0, =byte_800FC00
		B	loc_8006770
@ ---------------------------------------------------------------------------

loc_800676E:				@ CODE XREF: sub_800675C+Aj
		LDR	R0, =unk_800F808

loc_8006770:				@ CODE XREF: sub_800675C+10j
		LDR	R0, [R0]
		B	sub_800673C
@ ---------------------------------------------------------------------------

loc_8006774:				@ CODE XREF: sub_800675C+Cj
		LDR	R0, =byte_800F800
		LDRB	R0, [R0]
		CMP	R0, #4
		ITTT cc
		LDRCC	R1, =0x2000004A
		ADDCCW	R0, R0,	#0x101
		STRHCC	R0, [R1]
		BX	LR
@ End of function sub_800675C

@ ---------------------------------------------------------------------------
		.align 4
off_8006788:	.long byte_800F801	@ DATA XREF: sub_800675Cr
off_800678C:	.long byte_800FC00	@ DATA XREF: sub_800675C:loc_800676Ar
off_8006790:	.long unk_800F808	@ DATA XREF: sub_800675C:loc_800676Er
off_8006794:	.long byte_800F800	@ DATA XREF: sub_800675C:loc_8006774r
@ ---------------------------------------------------------------------------

loc_8006798:				@ DATA XREF: sub_80067D8+12o
					@ ROM:off_8006800o ...
		B.W	sub_80066AC

@ =============== S U B	R O U T	I N E =======================================


sub_800679C:				@ DATA XREF: sub_80067D8+18o
					@ ROM:off_8006804o ...
		PUSH	{LR}
		BL	sub_8008478
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		IT ne
		BLNE	sub_80066AC
		POP	{PC}
@ End of function sub_800679C


@ =============== S U B	R O U T	I N E =======================================


sub_80067B0:				@ CODE XREF: sub_8008924+50p
		LDR	R0, =0x20000048
		LDRH	R0, [R0]
		BX	LR
@ End of function sub_80067B0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80067B8:				@ CODE XREF: sub_8008924+5Cp
		LDR	R0, =0x2000004A
		LDRH	R0, [R0]
		BX	LR
@ End of function sub_80067B8

@ ---------------------------------------------------------------------------
		.align 0x10
@ START	OF FUNCTION CHUNK FOR sub_8008A24

loc_80067C0:				@ CODE XREF: sub_8008A24:loc_8008A36j
		LDR	R0, =0x20000020
		LDR	R0, [R0]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8008A24
@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_8008A24

loc_80067C8:				@ CODE XREF: sub_8008A24:loc_8008A3Aj
		LDR	R0, =0x20000024
		LDR	R0, [R0]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8008A24
@ ---------------------------------------------------------------------------
		.align 0x10
@ START	OF FUNCTION CHUNK FOR sub_8008A24

loc_80067D0:				@ CODE XREF: sub_8008A24:loc_8008A3Ej
		LDR	R0, =0x20000014
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8008A24
@ ---------------------------------------------------------------------------
dword_80067D4:	.long 0x20000014	@ DATA XREF: sub_800673C+4r
					@ sub_8008A24:loc_80067D0r

@ =============== S U B	R O U T	I N E =======================================


sub_80067D8:				@ CODE XREF: sub_8006694+8p
		PUSH	{LR}
		BL	sub_800675C
		BL	sub_800803C
		BL	sub_8006704
		BL	sub_8008078
		LDR	R0, =(loc_8006798+1)
		BL	sub_8007864
		LDR	R1, =(sub_800679C+1)
		LDR	R0, =0x20000104
		MOVS	R3, #0
		MOVS	R2, #0
		LDR.W	LR, [SP+0],#4
		B.W	sub_800840C
@ End of function sub_80067D8

@ ---------------------------------------------------------------------------
off_8006800:	.long loc_8006798+1	@ DATA XREF: sub_80067D8+12r
off_8006804:	.long sub_800679C+1	@ DATA XREF: sub_80067D8+18r
dword_8006808:	.long 0x20000104	@ DATA XREF: sub_80067D8+1Ar
@ ---------------------------------------------------------------------------

loc_800680C:				@ DATA XREF: ROM:080092A8o
					@ ROM:0800EEA8o
		LDR	R0, =0x20001021
		LDRB	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006814:				@ CODE XREF: sub_80065C0j
		LDR	R0, =0x20001021
		MOVS	R1, #0
		STRB	R1, [R0]
		BX	LR
@ End of function sub_8006814


@ =============== S U B	R O U T	I N E =======================================


sub_800681C:				@ DATA XREF: ROM:080092B4o
					@ ROM:0800EEB4o
		PUSH	{LR}
		BL	nullsub_8
		MOVS	R0, #0xA
		BL	sub_8006E24
		LDR.W	LR, [SP+0],#4
		B.W	nullsub_7
@ End of function sub_800681C


@ =============== S U B	R O U T	I N E =======================================


sub_8006830:				@ DATA XREF: ROM:080092C0o
					@ ROM:0800EEC0o
		PUSH.W	{R4-R11,LR}
		MOV	R11, R1
		LDR	R1, =0x20001021
		MOV	R8, R1
		LDRB.W	R1, [R8]
		CMP	R1, #0
		BNE	locret_80068D4
		LDR	R5, =0x20000194
		MOVS	R4, R0
		LDR	R0, =0x20000154
		LDR	R7, [R5]
		MOV	R6, R11
		MOV	R9, R0
		CBZ	R7, loc_8006892
		MOVS	R0, #0x40
		SUBS	R0, R0,	R7
		CMP	R6, R0
		ITE cs
		MOVCS	R10, R0
		MOVCC	R10, R6
		MOV	R2, R10
		MOVS	R1, R4
		MOV	R0, R9
		ADDS	R0, R0,	R7
		BL	sub_8008F50
		ADDS.W	R7, R10, R7
		ADDS.W	R4, R10, R4
		SUBS.W	R6, R6,	R10
		CMP	R7, #0x40
		BNE	loc_8006892
		LDR	R0, =0x20000010
		MOVS	R2, #0
		MOVS	R1, #0x40
		LDR	R3, [R0]
		MOV	R0, R9
		BL	sub_80077FC
		CMP	R0, #0x40
		ITT ne
		MOVNE	R0, #1
		STRBNE.W R0, [R8]
		MOVS	R7, #0

loc_8006892:				@ CODE XREF: sub_8006830+1Ej
					@ sub_8006830+46j
		LSRS	R0, R6,	#6
		LSLS	R0, R0,	#6
		MOV	R10, R0
		BEQ	loc_80068BA
		LDR	R0, =0x20000010
		MOVS	R2, #0
		MOV	R1, R10
		LDR	R3, [R0]
		MOVS	R0, R4
		BL	sub_80077FC
		CMP	R0, R10
		ITT ne
		MOVNE	R0, #1
		STRBNE.W R0, [R8]
		ADDS.W	R4, R10, R4
		SUBS.W	R6, R6,	R10

loc_80068BA:				@ CODE XREF: sub_8006830+68j
		CBZ	R6, loc_80068C8
		MOVS	R2, R6
		MOVS	R1, R4
		MOV	R0, R9
		BL	sub_8008F50
		MOVS	R7, R6

loc_80068C8:				@ CODE XREF: sub_8006830:loc_80068BAj
		LDR	R0, =0x20000198
		STR	R7, [R5]
		MOV	R2, R11
		LDR	R1, [R0]
		ADDS	R1, R1,	R2
		STR	R1, [R0]

locret_80068D4:				@ CODE XREF: sub_8006830+10j
		POP.W	{R4-R11,PC}
@ End of function sub_8006830


@ =============== S U B	R O U T	I N E =======================================


sub_80068D8:				@ CODE XREF: sub_800691C+Cp
					@ sub_8006944+12p
					@ DATA XREF: ...
		PUSH	{R4-R7,LR}
		LDR	R4, =0x20000198
		LDR	R0, [R4]
		CBZ	R0, locret_8006916
		LDR	R5, =0x20001021
		LDRB	R1, [R5]
		CBNZ	R1, locret_8006916
		LDR	R6, =0x20000194
		MOVS	R7, #0
		LDR	R1, [R6]
		CBZ	R1, loc_8006908
		LDR	R0, =0x20000010
		MOVS	R2, #1
		LDR	R3, [R0]
		LDR	R0, =0x20000154
		BL	sub_80077FC
		LDR	R1, [R6]
		CMP	R0, R1
		ITT ne
		MOVNE	R0, #1
		STRBNE	R0, [R5]
		STR	R7, [R6]
		B	loc_8006914
@ ---------------------------------------------------------------------------

loc_8006908:				@ CODE XREF: sub_80068D8+14j
		LSLS	R1, R0,	#0x1A
		BNE	loc_8006914
		LSLS	R0, R0,	#0x15
		IT ne
		BLNE	sub_80077EC

loc_8006914:				@ CODE XREF: sub_80068D8+2Ej
					@ sub_80068D8+32j
		STR	R7, [R4]

locret_8006916:				@ CODE XREF: sub_80068D8+6j
					@ sub_80068D8+Cj
		POP	{R4-R7,PC}
@ End of function sub_80068D8

@ ---------------------------------------------------------------------------
dword_8006918:	.long 0x20000154	@ DATA XREF: sub_8006830+16r
					@ sub_80068D8+1Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800691C:				@ DATA XREF: ROM:080092B8o
					@ ROM:0800EEB8o
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20001021
		MOVS	R4, R0
		MOVS	R5, R1
		LDRB	R0, [R6]
		CBNZ	R0, locret_8006942
		BL	sub_80068D8
		LDR	R0, =0x20000010
		MOVS	R2, #1
		MOVS	R1, R5
		LDR	R3, [R0]
		MOVS	R0, R4
		BL	sub_80077FC
		CMP	R0, R5
		ITT ne
		MOVNE	R0, #1
		STRBNE	R0, [R6]

locret_8006942:				@ CODE XREF: sub_800691C+Aj
		POP	{R4-R6,PC}
@ End of function sub_800691C


@ =============== S U B	R O U T	I N E =======================================


sub_8006944:				@ DATA XREF: ROM:080092BCo
					@ ROM:0800EEBCo
		PUSH	{R4,R5,LR}
		MOVS	R5, R0
		LDR	R0, =0x20001021
		MOVS	R4, R1
		LDRB	R0, [R0]
		CBNZ	R0, locret_8006974
		LDR	R0, =0x20000194
		LDR	R0, [R0]
		CBZ	R0, loc_800695A
		BL	sub_80068D8

loc_800695A:				@ CODE XREF: sub_8006944+10j
		MOVS	R1, R4
		MOVS	R0, R5
		BL	sub_80077C8
		LDR	R0, =0x20000198
		LSLS	R1, R4,	#0x1A
		ITTT ne
		MOVNE	R1, #0
		STRNE	R1, [R0]
		POPNE	{R4,R5,PC}
		LDR	R1, [R0]
		ADDS	R1, R1,	R4
		STR	R1, [R0]

locret_8006974:				@ CODE XREF: sub_8006944+Aj
		POP	{R4,R5,PC}
@ End of function sub_8006944

@ ---------------------------------------------------------------------------
		.align 4
dword_8006978:	.long 0x20000194	@ DATA XREF: sub_8006830+12r
					@ sub_80068D8+Er ...
dword_800697C:	.long 0x20000198	@ DATA XREF: sub_8006830:loc_80068C8r
					@ sub_80068D8+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006980:				@ CODE XREF: sub_800760C+Ep
					@ sub_800760C+16p ...
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20001021
		MOVS	R4, R0
		MOVS	R5, R1
		LDRB	R0, [R6]
		CBZ	R0, loc_8006992
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_8006992:				@ CODE XREF: sub_8006980+Aj
		LDR	R0, =0x20000010
		LDR	R2, [R0]
		MOVS	R0, R4
		BL	sub_8007814
		CMP	R0, R5
		BEQ	loc_80069B4
		MOVS	R2, R5
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_8008F68
		MOVS	R0, #1
		STRB	R0, [R6]
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_80069B4:				@ CODE XREF: sub_8006980+1Ej
		MOVS	R0, #0
		POP	{R4-R6,PC}
@ End of function sub_8006980


@ =============== S U B	R O U T	I N E =======================================


sub_80069B8:				@ CODE XREF: sub_8006574+18p
					@ DATA XREF: ROM:080092B0o ...

@ FUNCTION CHUNK AT 080077BC SIZE 0000000C BYTES

		LDR	R2, =0x20001021
		LDRB	R2, [R2]
		CBZ	R2, loc_80069C4
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ ---------------------------------------------------------------------------

loc_80069C4:				@ CODE XREF: sub_80069B8+4j
		B.W	loc_80077BC
@ End of function sub_80069B8

@ ---------------------------------------------------------------------------
dword_80069C8:	.long 0x20001021	@ DATA XREF: ROM:loc_800680Cr
					@ sub_8006814r	...
@ ---------------------------------------------------------------------------

loc_80069CC:				@ DATA XREF: ROM:off_80092A0o
					@ ROM:0800EEA0o
		B.W	loc_80077E4
@ ---------------------------------------------------------------------------

loc_80069D0:				@ DATA XREF: ROM:080092A4o
					@ ROM:0800EEA4o
		B.W	loc_80077E0

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80069D4:				@ CODE XREF: sub_8006598+8p
		B.W	sub_80077D8
@ End of function sub_80069D4


@ =============== S U B	R O U T	I N E =======================================


sub_80069D8:				@ CODE XREF: sub_8006574+4p
					@ sub_8006598+2p ...
		PUSH	{LR}
		BL	sub_8008478
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		ITT eq
		MOVEQ	R0, #1
		POPEQ	{PC}
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_80069D8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_80069F0:				@ CODE XREF: sub_80066D4:loc_80066E2p
		LDR	R0, =0x20000010
		LDR	R1, =0x20000100
		LDR	R2, [R0]
		STR	R2, [R1]
		MOVS	R1, #0
		STR	R1, [R0]
		BX	LR
@ End of function sub_80069F0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8006A00:				@ CODE XREF: sub_80066D4+28p
		LDR	R1, =0x20000100
		LDR	R0, =0x20000010
		LDR	R1, [R1]
		STR	R1, [R0]
		BX	LR
@ End of function sub_8006A00

@ ---------------------------------------------------------------------------
		.align 4
dword_8006A0C:	.long 0x20000100	@ DATA XREF: sub_80069F0+2r
					@ sub_8006A00r
dword_8006A10:	.long 0x20000010	@ DATA XREF: sub_8006830+48r
					@ sub_8006830+6Ar ...
dword_8006A14:	.long 0x20000048	@ DATA XREF: sub_80067B0r
dword_8006A18:	.long 0x2000004A	@ DATA XREF: sub_800675C+20r
					@ sub_80067B8r
dword_8006A1C:	.long 0x20000020	@ DATA XREF: sub_8008A24:loc_80067C0r
dword_8006A20:	.long 0x20000024	@ DATA XREF: sub_8008A24:loc_80067C8r

@ =============== S U B	R O U T	I N E =======================================


sub_8006A24:				@ CODE XREF: sub_8006DBC:loc_8006DD0p
		LDR	R0, =0x20001208
		BX	LR
@ End of function sub_8006A24

@ ---------------------------------------------------------------------------
dword_8006A28:	.long 0x20001208	@ DATA XREF: sub_8006A24r

@ =============== S U B	R O U T	I N E =======================================


sub_8006A2C:				@ CODE XREF: sub_8006DBC+1Ap
		MOV	R0, SP
		BX	LR
@ End of function sub_8006A2C


@ =============== S U B	R O U T	I N E =======================================


sub_8006A30:				@ CODE XREF: sub_8005100:loc_800514Ep
					@ sub_80071C0+30p ...
		LDR	R0, =0x200001A1
		PUSH	{LR}
		LDRB	R0, [R0]
		CBNZ	R0, locret_8006A3C
		BL	sub_800712A

locret_8006A3C:				@ CODE XREF: sub_8006A30+6j
		POP	{PC}
@ End of function sub_8006A30

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8006A40:	.long 0x200001A1	@ DATA XREF: sub_8006A30r

@ =============== S U B	R O U T	I N E =======================================


sub_8006A44:				@ CODE XREF: sub_8006E34+64p
					@ sub_8006F2C+34p ...
		PUSH	{R4,LR}
		LDR	R4, =0x200001A0
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		LSLS	R0, R0,	#0x18
		BNE	locret_8006A70
		BL	sub_8007136
		LDR	R0, =0x20001022
		LDRB	R0, [R0]
		CBZ	R0, loc_8006A68
		MOVS	R0, #1
		STRB	R0, [R4]
		BL	sub_8007108
		MOVS	R0, #0
		STRB	R0, [R4]

loc_8006A68:				@ CODE XREF: sub_8006A44+16j
		LDRB	R0, [R4,#1]
		CBNZ	R0, locret_8006A70
		BL	sub_800712A

locret_8006A70:				@ CODE XREF: sub_8006A44+Cj
					@ sub_8006A44+26j
		POP	{R4,PC}
@ End of function sub_8006A44

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006A74:				@ CODE XREF: sub_8006AF4+3Ap
					@ sub_8006B34+92p ...
		PUSH.W	{R4,R5,R7,R8,LR}
		LDR	R1, [R0,#8]
		MOVS	R2, #0
		MOV	R8, R2
		CBZ	R1, loc_8006A8E
		LDR	R2, [R1]
		LDR	R1, [R1,#4]
		CBZ	R2, loc_8006A88
		STR	R1, [R2,#4]

loc_8006A88:				@ CODE XREF: sub_8006A74+10j
		STR	R2, [R1]
		STR.W	R8, [R0,#8]

loc_8006A8E:				@ CODE XREF: sub_8006A74+Aj
		LDRB	R1, [R0,#0x11]
		LDR	R4, =0x200001A0
		LSLS	R1, R1,	#0x1E
		LSRS	R1, R1,	#0x1E
		STRB	R1, [R0,#0x11]
		BNE	loc_8006ABE
		LDR	R1, =0x200001AC
		LDR	R2, [R1]
		CBNZ	R2, loc_8006ACA

loc_8006AA0:				@ CODE XREF: sub_8006A74+5Cj
					@ sub_8006A74+78j
		STR	R0, [R1]

loc_8006AA2:				@ CODE XREF: sub_8006A74+60j
		LDRB	R0, [R4]
		CBNZ	R0, loc_8006AB4
		MOVS	R0, #1
		STRB	R0, [R4]
		BL	sub_8007108
		MOVS	R0, #0
		STRB	R0, [R4]
		B	loc_8006ABE
@ ---------------------------------------------------------------------------

loc_8006AB4:				@ CODE XREF: sub_8006A74+30j
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ORRS.W	R1, R1,	#2
		STRB	R1, [R0]

loc_8006ABE:				@ CODE XREF: sub_8006A74+24j
					@ sub_8006A74+3Ej ...
		LDRB	R0, [R4,#1]
		CBNZ	R0, locret_8006AC6
		BL	sub_800712A

locret_8006AC6:				@ CODE XREF: sub_8006A74+4Cj
		POP.W	{R4,R5,R7,R8,PC}
@ ---------------------------------------------------------------------------

loc_8006ACA:				@ CODE XREF: sub_8006A74+2Aj
		LDRB	R3, [R0,#0x10]
		LDRB	R5, [R2,#0x10]
		CMP	R5, R3
		BCC	loc_8006AA0
		CMP	R2, R0
		BEQ	loc_8006AA2
		CMP	R3, R5
		BNE	loc_8006ABE
		MOVS	R5, R0

loc_8006ADC:				@ CODE XREF: sub_8006A74+76j
		LDR	R5, [R5]
		CMP	R5, #0
		BEQ	loc_8006ABE
		LDRB	R7, [R5,#0x10]
		CMP	R3, R7
		BNE	loc_8006ABE
		CMP	R5, R2
		BNE	loc_8006ADC
		B	loc_8006AA0
@ End of function sub_8006A74

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8006AF0:	.long 0x200001A0	@ DATA XREF: sub_8006A44+2r
					@ sub_8006A74+1Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8006AF4:				@ CODE XREF: sub_8006E34+60p
		LDR	R1, =0x200001A4
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		LDRB	R0, [R4,#0x10]
		B	loc_8006B00
@ ---------------------------------------------------------------------------

loc_8006AFE:				@ CODE XREF: sub_8006AF4+14j
		MOVS	R1, R2

loc_8006B00:				@ CODE XREF: sub_8006AF4+8j
		LDR	R2, [R1]
		CBZ	R2, loc_8006B0A
		LDRB	R5, [R2,#0x10]
		CMP	R0, R5
		BCC	loc_8006AFE

loc_8006B0A:				@ CODE XREF: sub_8006AF4+Ej
		STR	R2, [R4]
		STR	R1, [R4,#0x14]
		STR	R4, [R1]
		CBZ	R2, loc_8006B24
		STR	R4, [R2,#0x14]
		LDRB	R2, [R2,#0x10]
		MOVS	R1, R4
		ADDS	R1, #0x24
		CMP	R2, R0
		ITE ne
		MOVNE	R0, #0
		LDRBEQ	R0, [R1,#1]
		STRB	R0, [R1]

loc_8006B24:				@ CODE XREF: sub_8006AF4+1Cj
		LDRB	R0, [R4,#0x11]
		CBNZ	R0, locret_8006B32
		BL	sub_8007136
		MOVS	R0, R4
		BL	sub_8006A74

locret_8006B32:				@ CODE XREF: sub_8006AF4+32j
		POP	{R4,R5,PC}
@ End of function sub_8006AF4


@ =============== S U B	R O U T	I N E =======================================


sub_8006B34:				@ CODE XREF: sub_8006C50+E4p
		PUSH	{R4-R7,LR}
		LDR	R4, =0x20000028
		LDR	R5, =0x2000019C
		LDR	R6, =0x200001B0
		LDR	R7, =0x200001B4
		BL	sub_8007136
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ANDS.W	R1, R1,	#0xFE
		STRB	R1, [R0]
		LDR	R0, [R5]
		ADDS.W	R0, R0,	#0xFA0
		STR	R0, [R4]
		B	loc_8006B72
@ ---------------------------------------------------------------------------

loc_8006B56:				@ CODE XREF: sub_8006B34+4Aj
		STR	R0, [R7]
		LDR	R1, [R0]
		STR	R1, [R6]
		MOVS	R1, #0
		STRB	R1, [R0,#0x10]
		LDR	R0, [R7]
		STR	R1, [R0,#8]
		BL	sub_800712A
		LDR	R0, [R7]
		LDR	R0, [R0,#4]
		BLX	R0
		BL	sub_8007136

loc_8006B72:				@ CODE XREF: sub_8006B34+20j
		LDR	R0, [R6]
		CBZ	R0, loc_8006B84
		LDR	R1, [R0,#8]
		LDR	R2, [R5]
		SUBS	R1, R1,	R2
		CMP	R1, #1
		BLT	loc_8006B56
		LDR	R0, [R0,#8]
		STR	R0, [R4]

loc_8006B84:				@ CODE XREF: sub_8006B34+40j
		BL	sub_800712A
		LDR	R0, =0x200001A4
		LDR	R6, [R0]
		B	loc_8006B9E
@ ---------------------------------------------------------------------------

loc_8006B8E:				@ CODE XREF: sub_8006B34+8Ej
					@ sub_8006B34+9Ej
		LDR	R0, [R6,#0xC]
		LDR	R1, [R4]
		SUBS	R1, R0,	R1
		IT mi
		STRMI	R0, [R4]

loc_8006B98:				@ CODE XREF: sub_8006B34+84j
		BL	sub_800712A
		LDR	R6, [R6]

loc_8006B9E:				@ CODE XREF: sub_8006B34+58j
		CBZ	R6, locret_8006BD4
		BL	sub_8007136
		LDR	R0, =0x200001AC
		LDR	R1, [R0]
		CBZ	R1, loc_8006BB4
		LDRB	R1, [R6,#0x10]
		LDR	R0, [R0]
		LDRB	R0, [R0,#0x10]
		CMP	R1, R0
		BCC	locret_8006BD4

loc_8006BB4:				@ CODE XREF: sub_8006B34+74j
		LDRB	R0, [R6,#0x11]
		LSLS	R0, R0,	#0x1D
		BPL	loc_8006B98
		LDR	R0, [R6,#0xC]
		LDR	R1, [R5]
		SUBS	R0, R0,	R1
		CMP	R0, #1
		BGE	loc_8006B8E
		MOVS	R0, R6
		BL	sub_8006A74
		BL	sub_8007136
		LDRB	R0, [R6,#0x11]
		CMP	R0, #0
		BNE	loc_8006B8E

locret_8006BD4:				@ CODE XREF: sub_8006B34:loc_8006B9Ej
					@ sub_8006B34+7Ej
		POP	{R4-R7,PC}
@ End of function sub_8006B34

@ ---------------------------------------------------------------------------
		.align 4
dword_8006BD8:	.long 0x200001B0	@ DATA XREF: sub_8006B34+6r
dword_8006BDC:	.long 0x200001B4	@ DATA XREF: sub_8006B34+8r
dword_8006BE0:	.long 0x200001A4	@ DATA XREF: sub_8006AF4r
					@ sub_8006B34+54r

@ =============== S U B	R O U T	I N E =======================================


sub_8006BE4:				@ CODE XREF: sub_8006C50+4Ap
		PUSH	{R4,R5,LR}
		BL	sub_8007136
		LDR	R0, =0x200001A8
		LDR	R4, [R0]
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ANDS.W	R1, R1,	#0xFB
		STRB	R1, [R0]
		BL	sub_800712A
		CBZ	R4, loc_8006C42
		LDR	R5, [R4]
		CBZ	R5, loc_8006C42
		LDRB	R0, [R4,#0x10]
		LDRB	R1, [R5,#0x10]
		CMP	R1, R0
		BNE	loc_8006C42
		B	loc_8006C0E
@ ---------------------------------------------------------------------------

loc_8006C0C:				@ CODE XREF: sub_8006BE4+32j
		MOVS	R5, R1

loc_8006C0E:				@ CODE XREF: sub_8006BE4+26j
		LDR	R1, [R5]
		CBZ	R1, loc_8006C18
		LDRB	R2, [R1,#0x10]
		CMP	R2, R0
		BEQ	loc_8006C0C

loc_8006C18:				@ CODE XREF: sub_8006BE4+2Cj
		BL	sub_8007136
		LDR	R0, =0x200001AC
		LDR	R1, [R0]
		CMP	R1, R4
		ITT eq
		LDREQ	R1, [R4]
		STREQ	R1, [R0]
		LDR	R0, [R4,#0x14]
		LDR	R1, [R4]
		STR	R1, [R0]
		STR	R0, [R1,#0x14]
		STR	R5, [R4,#0x14]
		LDR	R0, [R5]
		STR	R0, [R4]
		CBZ	R0, loc_8006C3A
		STR	R4, [R0,#0x14]

loc_8006C3A:				@ CODE XREF: sub_8006BE4+52j
		STR.W	R4, [R5],#0x24
		LDRB	R0, [R5,#1]
		STRB	R0, [R5]

loc_8006C42:				@ CODE XREF: sub_8006BE4+18j
					@ sub_8006BE4+1Cj ...
		BL	sub_800712A
		POP	{R4,R5,PC}
@ End of function sub_8006BE4

@ ---------------------------------------------------------------------------
dword_8006C48:	.long 0x20001022	@ DATA XREF: sub_8006A44+12r
					@ sub_8006A74:loc_8006AB4r ...
dword_8006C4C:	.long 0x200001AC	@ DATA XREF: sub_8006A74+26r
					@ sub_8006B34+70r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006C50:				@ CODE XREF: ROM:080070B2p
		PUSH.W	{R4-R11,LR}
		MOVS	R0, #0
		MOVS	R1, #0
		MOV	R8, R0
		LDR	R0, =0x200001A1
		STRB	R1, [R0]
		LDR	R0, =0x200001A0
		MOVS	R1, #1
		STRB	R1, [R0]
		LDR	R0, =0x200001A8
		MOV	R9, R0
		LDR.W	R0, [R9]
		CBZ	R0, loc_8006C7C
		LDR	R1, [R0,#0x28]
		CBZ	R1, loc_8006C7C
		LDR	R1, [R1]
		MOVS	R2, R1
		ITT ne
		LDRNE	R0, [R0,#4]
		BLXNE	R1

loc_8006C7C:				@ CODE XREF: sub_8006C50+1Cj
					@ sub_8006C50+20j
		LDR	R5, =0x20001025
		LDR	R0, =0x20001022
		LDR	R4, =0x20001024
		MOV	R10, R0
		LDRB	R0, [R5]
		CBZ	R0, loc_8006C9E
		LDR.W	R0, [R9]
		LDRB	R1, [R4]
		STRB.W	R1, [R0,#0x24]!
		LDRB.W	R0, [R10]
		LSLS	R0, R0,	#0x1D
		IT mi
		BLMI	sub_8006BE4

loc_8006C9E:				@ CODE XREF: sub_8006C50+36j
		LDR	R0, =0x200001AC
		MOV	R11, R0
		LDR.W	R0, [R11]
		CBZ	R0, loc_8006CFE
		B	loc_8006CB4
@ ---------------------------------------------------------------------------

loc_8006CAA:				@ CODE XREF: sub_8006C50+A0j
					@ sub_8006C50+ACj
		LDR	R0, [R6]
		STR.W	R0, [R11]
		BL	sub_800712A

loc_8006CB4:				@ CODE XREF: sub_8006C50+58j
		BL	sub_8007136
		LDR.W	R6, [R11]
		CBZ	R6, loc_8006CFE
		LDRB	R7, [R6,#0x11]
		MOVS	R0, R7
		BEQ	loc_8006CFE
		LSLS	R0, R7,	#0x1D
		BPL	loc_8006CEA
		LDR	R1, =0x2000019C
		LDR	R0, [R6,#0xC]
		LDR	R1, [R1]
		SUBS	R1, R0,	R1
		CMP	R1, #1
		BGE	loc_8006CE0
		MOVS	R0, R6
		BL	sub_8006A74
		LDRB	R0, [R6,#0x11]
		CBNZ	R0, loc_8006CEA
		B	loc_8006CFE
@ ---------------------------------------------------------------------------

loc_8006CE0:				@ CODE XREF: sub_8006C50+82j
		LDR	R1, =0x20000028
		LDR	R2, [R1]
		SUBS	R2, R0,	R2
		IT mi
		STRMI	R0, [R1]

loc_8006CEA:				@ CODE XREF: sub_8006C50+76j
					@ sub_8006C50+8Cj
		ANDS.W	R0, R7,	#0xFB
		CMP	R0, #0x10
		BNE	loc_8006CAA
		LDR	R0, [R6,#8]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#4]
		LDRB	R0, [R0,#0x11]
		CMP	R0, #0
		BNE	loc_8006CAA

loc_8006CFE:				@ CODE XREF: sub_8006C50+56j
					@ sub_8006C50+6Cj ...
		BL	sub_8007136
		LDRB.W	R0, [R10]
		LSLS	R0, R0,	#0x1F
		BMI	loc_8006D30
		LDRB.W	R0, [R10]
		ANDS.W	R0, R0,	#0xFD
		STRB.W	R0, [R10]
		LDR.W	R0, [R11]
		CBZ	R0, loc_8006D70
		LDR.W	R0, [R11]
		LDRB	R0, [R0,#0x11]
		CBZ	R0, loc_8006D3A
		LDR.W	R0, [R11]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#4]
		B	loc_8006D3E
@ ---------------------------------------------------------------------------

loc_8006D30:				@ CODE XREF: sub_8006C50+B8j
		BL	sub_800712A
		BL	sub_8006B34
		B	loc_8006CFE
@ ---------------------------------------------------------------------------

loc_8006D3A:				@ CODE XREF: sub_8006C50+D2j
		LDR.W	R0, [R11]

loc_8006D3E:				@ CODE XREF: sub_8006C50+DEj
		STR.W	R0, [R9]
		LDR	R0, [R0,#0x20]
		LDRB	R0, [R0]
		CMP	R0, #0xCD
		ITT ne
		MOVNE	R0, #0x78
		BLNE	sub_8007044
		LDR.W	R0, [R9]
		LDR	R1, [R0,#0x28]
		CBZ	R1, loc_8006D62
		LDR	R1, [R1,#4]
		MOVS	R2, R1
		ITT ne
		LDRNE	R0, [R0,#4]
		BLXNE	R1

loc_8006D62:				@ CODE XREF: sub_8006C50+106j
		LDR.W	R0, [R9]
		ADDS	R0, #0x24
		LDRB	R0, [R0]
		STRB	R0, [R4]
		STRB	R0, [R5]
		B	locret_8006D82
@ ---------------------------------------------------------------------------

loc_8006D70:				@ CODE XREF: sub_8006C50+CAj
		STRB	R0, [R5]
		STRB	R0, [R4]
		LDR	R0, =0x200001A0
		STR.W	R8, [R9]
		MOVS	R1, #0
		STRB	R1, [R0]
		BL	sub_800712A

locret_8006D82:				@ CODE XREF: sub_8006C50+11Ej
		POP.W	{R4-R11,PC}
@ End of function sub_8006C50

@ ---------------------------------------------------------------------------
		.align 4
dword_8006D88:	.long 0x20001025	@ DATA XREF: sub_8006C50:loc_8006C7Cr
dword_8006D8C:	.long 0x20001024	@ DATA XREF: sub_8006C50+30r
dword_8006D90:	.long 0x200001A1	@ DATA XREF: sub_8006C50+Ar
dword_8006D94:	.long 0x200001AC	@ DATA XREF: sub_8006C50:loc_8006C9Er
dword_8006D98:	.long 0x2000019C	@ DATA XREF: sub_8006B34+4r
					@ sub_8006C50+78r
dword_8006D9C:	.long 0x20000028	@ DATA XREF: sub_8006B34+2r
					@ sub_8006C50:loc_8006CE0r

@ =============== S U B	R O U T	I N E =======================================


sub_8006DA0:				@ CODE XREF: sub_8006DF0+28p
					@ sub_8006EA8+2Ep ...
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		LDRB	R5, [R4]
		ADDS	R0, R5,	#1
		STRB	R0, [R4]
		BL	sub_8007108
		LDRB	R0, [R4,#1]
		STRB	R5, [R4]
		CBNZ	R0, locret_8006DB8
		BL	sub_800712A

locret_8006DB8:				@ CODE XREF: sub_8006DA0+12j
		POP	{R4,R5,PC}
@ End of function sub_8006DA0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8006DBC:				@ CODE XREF: sub_8008ECC+16p
		PUSH	{R4,LR}
		BL	sub_8007120
		LDR	R0, =0x200001A0
		MOVS	R1, #1
		STRB	R1, [R0]
		LDRB	R0, [R0,#1]
		CBNZ	R0, loc_8006DD0
		BL	sub_800712A

loc_8006DD0:				@ CODE XREF: sub_8006DBC+Ej
		BL	sub_8006A24
		MOVS	R4, R0
		BL	sub_8006A2C
		SUBS	R2, R0,	R4
		SUBS	R2, #0x20
		CMP	R2, #1
		ITTT ge
		MOVGE	R1, #0xCD
		MOVGE	R0, R4
		BLGE	sub_8008F68
		POP	{R4,PC}
@ End of function sub_8006DBC

@ ---------------------------------------------------------------------------
dword_8006DEC:	.long 0x20001022	@ DATA XREF: sub_8006C50+2Er

@ =============== S U B	R O U T	I N E =======================================


sub_8006DF0:				@ CODE XREF: sub_8006E24+6j
		PUSH	{R4,LR}
		MOVS	R4, R0
		LDR	R0, =0x200001A0
		LDRB	R0, [R0]
		CBZ	R0, loc_8006E08
		BL	sub_800712A

loc_8006DFE:				@ CODE XREF: sub_8006DF0+16j
		LDR	R0, =0x2000019C
		LDR	R0, [R0]
		SUBS	R0, R0,	R4
		BPL	locret_8006E1C
		B	loc_8006DFE
@ ---------------------------------------------------------------------------

loc_8006E08:				@ CODE XREF: sub_8006DF0+8j
		BL	sub_8007136
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		STR	R4, [R1,#0xC]
		LDR	R0, [R0]
		MOVS	R1, #4
		STRB	R1, [R0,#0x11]
		BL	sub_8006DA0

locret_8006E1C:				@ CODE XREF: sub_8006DF0+14j
		POP	{R4,PC}
@ End of function sub_8006DF0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8006E20:	.long 0x200001A0	@ DATA XREF: sub_8006C50+Er
					@ sub_8006C50+124r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006E24:				@ CODE XREF: sub_8004AB8+AAp
					@ sub_8004B9C+2Cp ...
		LDR	R1, =0x2000019C
		LDR	R1, [R1]
		ADDS	R0, R0,	R1
		B	sub_8006DF0
@ End of function sub_8006E24

@ ---------------------------------------------------------------------------
dword_8006E2C:	.long 0x2000019C	@ DATA XREF: sub_8006DF0:loc_8006DFEr
					@ sub_8006E24r
dword_8006E30:	.long 0x200001A8	@ DATA XREF: sub_8006BE4+6r
					@ sub_8006C50+14r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8006E34:				@ CODE XREF: sub_8008ECC+2Ep
		PUSH.W	{R4-R10,LR}
		LDR	R6, [SP,#0x20]
		LDR	R7, [SP,#0x24]
		MOVS	R4, R0
		MOV	R8, R1
		MOV	R9, R2
		MOV	R10, R3
		MOVS	R2, #0x2C
		MOVS	R1, #0
		BL	sub_8008F68
		ADDS	R5, R4,	#4
		STRB.W	R9, [R5,#0xC]
		LDR	R0, [SP,#0x28]
		STRB.W	R0, [R4,#0x25]
		MOV	R0, R8
		CBZ	R0, loc_8006E60
		STR.W	R8, [R5,#0x14]

loc_8006E60:				@ CODE XREF: sub_8006E34+26j
		STR	R6, [R5,#0x1C]
		STR	R7, [R5,#0x18]
		MOVS	R2, R7
		MOVS	R1, #0xCD
		MOVS	R0, R6
		BL	sub_8008F68
		ADDS	R0, R6,	R7
		SUBS	R0, #0x48
		MOVS	R1, #7
		BICS	R0, R1
		MOVS	R1, #0
		STR	R1, [R0]
		MOVS.W	R1, #0x1000000
		STR	R1, [R0,#0x40]
		LDR	R1, =(loc_80070F4+1)
		STR	R1, [R0,#0x3C]
		STR.W	R10, [R0,#0x44]
		STR	R0, [R5]
		LDR	R0, =0x200001A0
		LDRB	R1, [R0]
		ADDS	R1, R1,	#1
		STRB	R1, [R0]
		MOVS	R0, R4
		BL	sub_8006AF4
		BL	sub_8006A44
		POP.W	{R4-R10,PC}
@ End of function sub_8006E34

@ ---------------------------------------------------------------------------
off_8006EA0:	.long loc_80070F4+1	@ DATA XREF: sub_8006E34+4Cr
dword_8006EA4:	.long 0x200001A0	@ DATA XREF: sub_8006E34+56r

@ =============== S U B	R O U T	I N E =======================================


sub_8006EA8:				@ CODE XREF: sub_8006FC8+14p
		PUSH	{R0-R6,LR}
		LDR	R6, =0x200001A8
		MOVS	R4, R0
		STR	R4, [SP,#8]
		LDR	R0, [R6]
		MOVS	R5, R1
		STR	R4, [SP,#4]
		STR	R0, [SP,#0xC]
		BL	sub_8007136
		LDR	R0, [R4]
		STR	R0, [SP,#0]
		MOV	R0, SP
		STR	R0, [R4]
		LDR	R0, [SP,#0]
		CBZ	R0, loc_8006ECC
		MOV	R1, SP
		STR	R1, [R0,#4]

loc_8006ECC:				@ CODE XREF: sub_8006EA8+1Ej
		LDR	R0, [R6]
		MOV	R1, SP
		STR	R1, [R0,#8]
		LDR	R0, [R6]
		STRB	R5, [R0,#0x11]
		BL	sub_8006DA0
		POP	{R0-R6,PC}
@ End of function sub_8006EA8

@ ---------------------------------------------------------------------------
dword_8006EDC:	.long 0x200001A8	@ DATA XREF: sub_8006EA8+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8006EE0:				@ CODE XREF: sub_8006FF4+1Cp
		PUSH	{R0-R7,LR}
		LDR	R7, =0x200001A8
		MOVS	R4, R0
		STR	R4, [SP,#8]
		LDR	R0, [R7]
		MOVS	R5, R1
		MOVS	R6, R2
		STR	R4, [SP,#4]
		STR	R0, [SP,#0xC]
		BL	sub_8007136
		LDR	R0, [R4]
		STR	R0, [SP,#0]
		MOV	R0, SP
		STR	R0, [R4]
		LDR	R0, [SP,#0]
		CBZ	R0, loc_8006F06
		MOV	R1, SP
		STR	R1, [R0,#4]

loc_8006F06:				@ CODE XREF: sub_8006EE0+20j
		LDR	R0, [R7]
		MOV	R1, SP
		STR	R6, [R0,#0xC]
		LDR	R0, [R7]
		STR	R1, [R0,#8]
		LDR	R0, [R7]
		ORRS.W	R1, R5,	#4
		STRB	R1, [R0,#0x11]
		BL	sub_8006DA0
		POP	{R0-R7,PC}
@ End of function sub_8006EE0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8006F20:	.long 0x200001A8	@ DATA XREF: sub_8006EE0+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8006F24:				@ CODE XREF: sub_8006694+4p
					@ sub_800855C+Ap
		MOVS	R2, #8
		MOVS	R1, #0
		B.W	sub_8008F68
@ End of function sub_8006F24


@ =============== S U B	R O U T	I N E =======================================


sub_8006F2C:				@ CODE XREF: sub_800859C+6j
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		MOVS	R5, R0
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_8007136
		LDRB	R0, [R4,#1]
		ADDS	R0, R0,	#1
		STRB	R0, [R4,#1]
		MOVS	R0, R5
		BL	sub_8006F84
		MOVS	R0, R5
		BL	sub_8006F68
		LDRB	R0, [R4,#1]
		SUBS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LSLS	R0, R0,	#0x18
		IT eq
		BLEQ	sub_800712A
		POP.W	{R4,R5,LR}
		B.W	sub_8006A44
@ End of function sub_8006F2C

@ ---------------------------------------------------------------------------
dword_8006F64:	.long 0x200001A0	@ DATA XREF: sub_8006F2C+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8006F68:				@ CODE XREF: sub_8006F2C+1Ep
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8007136
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_8006F7E
		BL	sub_800712A

locret_8006F7E:				@ CODE XREF: sub_8006F68+10j
		POP	{R4,PC}
@ End of function sub_8006F68

@ ---------------------------------------------------------------------------
dword_8006F80:	.long 0x200001A1	@ DATA XREF: sub_8006F68+Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8006F84:				@ CODE XREF: sub_80066AC+2j
					@ sub_8006F2C+18p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		MOVS	R5, R0
		BL	sub_8007136
		LDRB	R0, [R4,#1]
		ADDS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LDR	R0, [R5]
		CBZ	R0, loc_8006FAE
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		MOVS	R0, #0
		STRB	R0, [R5,#4]
		MOVS	R0, R5
		BL	sub_800706C
		BL	sub_8006A44
		B	loc_8006FB2
@ ---------------------------------------------------------------------------

loc_8006FAE:				@ CODE XREF: sub_8006F84+12j
		MOVS	R0, #1
		STRB	R0, [R5,#4]

loc_8006FB2:				@ CODE XREF: sub_8006F84+28j
		LDRB	R0, [R4,#1]
		SUBS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LSLS	R0, R0,	#0x18
		IT eq
		BLEQ	sub_800712A
		POP	{R4,R5,PC}
@ End of function sub_8006F84

@ ---------------------------------------------------------------------------
		.align 4
dword_8006FC4:	.long 0x200001A0	@ DATA XREF: sub_8006F84+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8006FC8:				@ CODE XREF: sub_8006574+1Ep
					@ sub_80085A8+6j
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8007136
		LDRB	R0, [R4,#4]
		CBNZ	R0, loc_8006FE0
		MOVS	R1, #0x48
		MOVS	R0, R4
		POP.W	{R4,LR}
		B.W	sub_8006EA8
@ ---------------------------------------------------------------------------

loc_8006FE0:				@ CODE XREF: sub_8006FC8+Aj
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_8006FEE
		BL	sub_800712A

locret_8006FEE:				@ CODE XREF: sub_8006FC8+20j
		POP	{R4,PC}
@ End of function sub_8006FC8

@ ---------------------------------------------------------------------------
dword_8006FF0:	.long 0x200001A1	@ DATA XREF: sub_8006FC8+1Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8006FF4:				@ CODE XREF: sub_8006574+Ep
					@ sub_80085B4+8j
		PUSH	{R4-R7,LR}
		LDR	R5, =0x2000019C
		LDR	R7, =0x200001A0
		MOVS	R4, R0
		MOVS	R6, R1
		BL	sub_8007136
		LDR	R0, [R5]
		ADDS	R6, R0,	R6
		LDRB	R0, [R4,#4]
		CBNZ	R0, loc_800702C
		MOVS	R2, R6
		MOVS	R1, #0x48
		MOVS	R0, R4
		BL	sub_8006EE0
		BL	sub_8007136
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		CMP	R0, #1
		BGE	loc_800702C
		LDRB	R0, [R7,#1]
		CBNZ	R0, loc_8007028
		BL	sub_800712A

loc_8007028:				@ CODE XREF: sub_8006FF4+2Ej
		MOVS	R0, #1
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800702C:				@ CODE XREF: sub_8006FF4+14j
					@ sub_8006FF4+2Aj
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDRB	R0, [R7,#1]
		CBNZ	R0, loc_8007038
		BL	sub_800712A

loc_8007038:				@ CODE XREF: sub_8006FF4+3Ej
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ End of function sub_8006FF4

@ ---------------------------------------------------------------------------
dword_800703C:	.long 0x2000019C	@ DATA XREF: sub_8006FF4+2r
dword_8007040:	.long 0x200001A0	@ DATA XREF: sub_8006FF4+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8007044:				@ CODE XREF: sub_8006C50+FCp
		PUSH	{R4,LR}
		MOVS	R4, R0
		LDR	R0, =0x200001A0
		LDRB	R1, [R0]
		ADDS	R1, R1,	#1
		STRB	R1, [R0]
		MOVS	R1, #0
		STRB	R1, [R0,#1]
		BL	sub_800712A
		LDR	R0, =0x20001023
		STRB	R4, [R0]

loc_800705C:				@ CODE XREF: sub_8007044+1Cj
		LDRB	R1, [R0]
		CMP	R1, #0
		BNE	loc_800705C
		POP	{R4,PC}
@ End of function sub_8007044

@ ---------------------------------------------------------------------------
dword_8007064:	.long 0x200001A0	@ DATA XREF: sub_8007044+4r
dword_8007068:	.long 0x20001023	@ DATA XREF: sub_8007044+14r

@ =============== S U B	R O U T	I N E =======================================


sub_800706C:				@ CODE XREF: sub_8006F84+20p
		PUSH	{R4,LR}
		MOVS	R4, R0
		B	loc_8007078
@ ---------------------------------------------------------------------------

loc_8007072:				@ CODE XREF: sub_800706C+14j
		LDR	R0, [R0,#0xC]
		BL	sub_8006A74

loc_8007078:				@ CODE XREF: sub_800706C+4j
		BL	sub_8007136
		LDR	R0, [R4]
		CMP	R0, #0
		BNE	loc_8007072
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800708C
		BL	sub_800712A

locret_800708C:				@ CODE XREF: sub_800706C+1Aj
		POP	{R4,PC}
@ End of function sub_800706C

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007090:	.long 0x200001A1	@ DATA XREF: sub_800706C+16r
@ ---------------------------------------------------------------------------
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		CBZ	R1, loc_80070B0
		MRS.W	R0, PSP
		SUB.W	R0, R0,	#0x24
		LDR	R1, =0x200001A0
		LDR	R3, [R1]
		STMIA.W	R0, {R3-R11}
		LDR	R1, =0x200001A8
		LDR	R2, [R1]
		STR	R0, [R2,#4]

loc_80070B0:				@ CODE XREF: ROM:08007098j
		PUSH	{LR}
		BL	sub_8006C50
		LDR.W	LR, [SP],#4
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		CBZ	R1, loc_80070DE
		LDR	R0, [R1,#4]
		LDMIA.W	R0, {R3-R11}
		LDR	R1, =0x200001A0
		STR	R3, [R1]
		ADD.W	R0, R0,	#0x24
		MSR.W	PSP, R0
		ORR.W	LR, LR,	#4
		TST.W	R3, #0xFF00
		BEQ	sub_800712A
		BX	LR
@ ---------------------------------------------------------------------------

loc_80070DE:				@ CODE XREF: ROM:080070BEj
		LDR	R0, =0x200013E8
		MOV.W	R1, #0x1000000
		STR	R1, [R0,#0x1C]
		LDR	R1, =(loc_8007200+1)
		STR	R1, [R0,#0x18]
		MSR.W	PSP, R0
		ORR.W	LR, LR,	#4
		BX	LR
@ ---------------------------------------------------------------------------

loc_80070F4:				@ DATA XREF: sub_8006E34+4Co
					@ ROM:off_8006EA0o ...
		BL	sub_800712A
		MOV	R0, R4
		POP	{PC}
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_8008ECC

loc_80070FC:				@ CODE XREF: sub_8008ECC+32j
		BL	sub_800712A
		BL	sub_8007118

loc_8007104:				@ CODE XREF: sub_8008ECC:loc_8007104j
		B	loc_8007104
@ END OF FUNCTION CHUNK	FOR sub_8008ECC

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8007106:				@ CODE XREF: sub_8007164+3Ep
					@ sub_800788C+28p
		B	sub_8007118
@ End of function sub_8007106


@ =============== S U B	R O U T	I N E =======================================


sub_8007108:				@ CODE XREF: sub_8006A44+1Cp
					@ sub_8006A74+36p ...
		PUSH	{LR}
		BL	sub_8007118
		BL	sub_800712A
		LDR.W	LR, [SP+0],#4
		B	sub_8007136
@ End of function sub_8007108


@ =============== S U B	R O U T	I N E =======================================


sub_8007118:				@ CODE XREF: sub_8008ECC-1DCCp
					@ sub_8007106j	...
		LDR	R0, =0xE000ED04
		LDR	R1, =0x10000000
		STR	R1, [R0]
		BX	LR
@ End of function sub_8007118


@ =============== S U B	R O U T	I N E =======================================


sub_8007120:				@ CODE XREF: sub_8006DBC+2p
		LDR	R0, =0xE000ED20
		LDR	R1, =0xFFFF0000
		STR	R1, [R0]
		BX	LR
@ End of function sub_8007120

@ ---------------------------------------------------------------------------
		NOP

@ =============== S U B	R O U T	I N E =======================================


sub_800712A:				@ CODE XREF: sub_8006A30+8p
					@ sub_8006A44+28p ...
		MOV.W	R0, #0
		MSR.W	BASEPRI, R0
		BX	LR
@ End of function sub_800712A

@ ---------------------------------------------------------------------------
		NOP

@ =============== S U B	R O U T	I N E =======================================


sub_8007136:				@ CODE XREF: sub_8005100+1Ap
					@ sub_800587C:loc_800587Ep ...
		MOV.W	R0, #0x80
		MSR.W	BASEPRI, R0
		BX	LR
@ End of function sub_8007136

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte 0xBF
		.ds.b 2, 0
dword_8007144:	.long 0x200001A8	@ DATA XREF: ROM:08007094r
					@ ROM:080070AAr ...
dword_8007148:	.long 0x200001A0	@ DATA XREF: ROM:080070A2r
					@ ROM:080070C6r
dword_800714C:	.long 0x200013E8	@ DATA XREF: ROM:loc_80070DEr
off_8007150:	.long loc_8007200+1	@ DATA XREF: ROM:080070E6r
dword_8007154:	.long 0xE000ED04	@ DATA XREF: sub_8007118r
dword_8007158:	.long 0x10000000	@ DATA XREF: sub_8007118+2r
dword_800715C:	.long 0xE000ED20	@ DATA XREF: sub_8007120r
dword_8007160:	.long 0xFFFF0000	@ DATA XREF: sub_8007120+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8007164:				@ DATA XREF: ROM:0800403Co
					@ sub_80071C0+12o ...
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		LDR	R5, =0x20001022
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_800712A
		BL	sub_80060B8
		BL	sub_8005848
		LDR	R0, =0x2000019C
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		LDR	R0, =0x20000028
		LDR	R0, [R0]
		SUBS	R0, R1,	R0
		BMI	loc_8007194
		LDRB	R0, [R5]
		ORRS.W	R0, R0,	#1
		STRB	R0, [R5]

loc_8007194:				@ CODE XREF: sub_8007164+26j
		BL	sub_8007136
		LDRB	R0, [R4]
		CMP	R0, #1
		BNE	loc_80071A6
		LDRB	R0, [R5]
		CBZ	R0, loc_80071A6
		BL	sub_8007106

loc_80071A6:				@ CODE XREF: sub_8007164+38j
					@ sub_8007164+3Cj
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		POP.W	{R4,R5,LR}
		B.W	sub_800712A
@ End of function sub_8007164

@ ---------------------------------------------------------------------------
dword_80071B4:	.long 0x200001A0	@ DATA XREF: sub_8007164+2r
dword_80071B8:	.long 0x20001022	@ DATA XREF: sub_8007164+4r
dword_80071BC:	.long 0x20000028	@ DATA XREF: sub_8007164+20r

@ =============== S U B	R O U T	I N E =======================================


sub_80071C0:				@ CODE XREF: sub_8008ECC+1Ap
		PUSH	{LR}
		BL	sub_8007136
		LDR	R0, =0xE000E014
		LDR	R1, =0x1193F
		STR	R1, [R0]
		LDR	R0, =0xE000E010
		MOVS	R1, #5
		STR	R1, [R0]
		LDR	R1, =(sub_8007164+1)
		MOVS	R0, #0xF
		BL	sub_800720C
		MOVS	R1, #0xFF
		MOVS	R0, #0xF
		BL	sub_800727C
		MOVS	R0, #0xF
		BL	sub_8007210
		BL	nullsub_1
		LDR.W	LR, [SP+0],#4
		B.W	sub_8006A30
@ End of function sub_80071C0

@ ---------------------------------------------------------------------------
dword_80071F4:	.long 0xE000E014	@ DATA XREF: sub_80071C0+6r
dword_80071F8:	.long 0x1193F		@ DATA XREF: sub_80071C0+8r
off_80071FC:	.long sub_8007164+1	@ DATA XREF: sub_80071C0+12r
@ ---------------------------------------------------------------------------

loc_8007200:				@ CODE XREF: ROM:loc_8007200j
					@ DATA XREF: ROM:080070E6o ...
		B	loc_8007200
@ ---------------------------------------------------------------------------
		.align 4
dword_8007204:	.long 0x2000019C	@ DATA XREF: sub_8007164+18r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800720C:				@ CODE XREF: sub_80071C0+16p
		MOVS	R0, #0
		BX	LR
@ End of function sub_800720C


@ =============== S U B	R O U T	I N E =======================================


sub_8007210:				@ CODE XREF: sub_8006384-9Cp
					@ sub_80071C0+24p ...
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8007136
		CMP	R4, #0x3B
		BGE	loc_8007268
		CMP	R4, #0x10
		BLT	loc_8007234
		LDR	R1, =0xE000E100
		SUBS	R4, #0x10
		ASRS	R0, R4,	#5
		MOVS	R2, #1
		LSLS	R3, R4,	#0x1B
		LSRS	R3, R3,	#0x1B
		LSLS	R2, R3
		STR.W	R2, [R1,R0,LSL#2]
		B	loc_8007268
@ ---------------------------------------------------------------------------

loc_8007234:				@ CODE XREF: sub_8007210+Ej
		LDR	R0, =0xE000ED24
		CMP	R4, #4
		BNE	loc_8007242
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x10000
		B	loc_8007266
@ ---------------------------------------------------------------------------

loc_8007242:				@ CODE XREF: sub_8007210+28j
		CMP	R4, #5
		BNE	loc_800724E
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x20000
		B	loc_8007266
@ ---------------------------------------------------------------------------

loc_800724E:				@ CODE XREF: sub_8007210+34j
		CMP	R4, #6
		BNE	loc_800725A
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x40000
		B	loc_8007266
@ ---------------------------------------------------------------------------

loc_800725A:				@ CODE XREF: sub_8007210+40j
		CMP	R4, #0xF
		BNE	loc_8007268
		LDR	R0, =0xE000E010
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#2

loc_8007266:				@ CODE XREF: sub_8007210+30j
					@ sub_8007210+3Cj ...
		STR	R1, [R0]

loc_8007268:				@ CODE XREF: sub_8007210+Aj
					@ sub_8007210+22j ...
		POP.W	{R4,LR}
		B.W	sub_8006A30
@ End of function sub_8007210

@ ---------------------------------------------------------------------------
dword_8007270:	.long 0xE000E100	@ DATA XREF: sub_8007210+10r
dword_8007274:	.long 0xE000ED24	@ DATA XREF: sub_8007210:loc_8007234r
dword_8007278:	.long 0xE000E010	@ DATA XREF: sub_80071C0+Cr
					@ sub_8007210+4Er

@ =============== S U B	R O U T	I N E =======================================


sub_800727C:				@ CODE XREF: sub_8006384-A2p
					@ sub_80071C0+1Ep ...
		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #0
		CMP	R4, #0x3B
		BGE	loc_80072CE
		CMP	R4, #0x10
		BLT	loc_8007296
		BL	sub_8007136
		LDR	R0, =0xE000E3F0
		ADDS	R0, R4,	R0
		B	loc_80072C6
@ ---------------------------------------------------------------------------

loc_8007296:				@ CODE XREF: sub_800727C+Ej
		MOVS	R0, #1
		CMP	R4, #4
		BGE	loc_80072A6
		MOVS	R2, #1

loc_800729E:				@ CODE XREF: sub_800727C+2Ej
					@ sub_800727C+32j
		MOVS	R3, #0
		CMP	R4, #0xD
		BNE	loc_80072B2
		B	loc_80072B4
@ ---------------------------------------------------------------------------

loc_80072A6:				@ CODE XREF: sub_800727C+1Ej
		MOVS	R2, #0
		CMP	R4, #7
		BLT	loc_800729E
		CMP	R4, #0xB
		BGE	loc_800729E
		MOVS	R3, #1

loc_80072B2:				@ CODE XREF: sub_800727C+26j
		MOVS	R0, #0

loc_80072B4:				@ CODE XREF: sub_800727C+28j
		ORRS	R3, R2
		ORRS	R0, R3
		LSLS	R0, R0,	#0x18
		BNE	loc_80072CE
		BL	sub_8007136
		LDR	R0, =0xE000ED18
		SUBS	R4, R4,	#4
		ADDS	R0, R0,	R4

loc_80072C6:				@ CODE XREF: sub_800727C+18j
		LDRB	R6, [R0]
		STRB	R5, [R0]
		BL	sub_8006A30

loc_80072CE:				@ CODE XREF: sub_800727C+Aj
					@ sub_800727C+3Ej
		MOVS	R0, R6
		POP	{R4-R6,PC}
@ End of function sub_800727C

@ ---------------------------------------------------------------------------
		.align 4
dword_80072D4:	.long 0xE000E3F0	@ DATA XREF: sub_800727C+14r
dword_80072D8:	.long 0xE000ED18	@ DATA XREF: sub_800727C+44r

@ =============== S U B	R O U T	I N E =======================================


sub_80072DC:				@ CODE XREF: sub_800021C+3F96p
					@ DATA XREF: sub_800021C:loc_80041B0o ...
		LDR	R1, =0x4002100C
		PUSH	{R4,R5,LR}
		LDR	R4, =0xF8FF0000
		MOVS	R0, #0
		STR.W	R0, [R1],#4
		MOVS	R2, #0x14
		STR.W	R0, [R1],#4
		MOVS	R5, #0xFF80FFFF
		STR.W	R2, [R1],#4
		STR.W	R0, [R1],#4
		STR.W	R0, [R1],#-0x1C
		LDR	R2, [R1]
		ORRS.W	R2, R2,	#1
		STR	R2, [R1]
		LDR	R2, =0x40021004
		LDR	R3, [R2]
		ANDS	R4, R3
		STR	R4, [R2]
		LDR	R3, [R1]
		LDR	R4, =0xFEF6FFFF
		ANDS	R4, R3
		STR	R4, [R1]
		LDR	R4, [R1]
		MOVS	R3, #0xFFFBFFFF
		ANDS	R4, R3
		STR	R4, [R1]
		LDR	R4, [R2]
		ANDS	R5, R4
		LDR	R4, =0x40021008
		STR	R5, [R2]
		MOVS	R5, #0xFFFEFFFF
		STR	R0, [R4]
		LDR	R4, [R1]
		ANDS	R5, R4
		STR	R5, [R1]
		LDR	R4, [R1]
		ANDS	R3, R4
		STR	R3, [R1]
		LDR	R3, [R1]
		ORRS.W	R3, R3,	#0x10000
		STR	R3, [R1]

loc_8007342:				@ CODE XREF: sub_80072DC+6Aj
		LDR	R3, [R1]
		LSLS	R3, R3,	#0xE
		BMI	loc_8007342
		LDR	R3, =0x40022000
		MOVS	R5, #0x10
		LDR	R4, [R3]
		ANDS.W	R4, R4,	#0x38
		STR	R4, [R3]
		LDR	R4, [R3]
		ORRS.W	R4, R4,	#2
		STR	R4, [R3]
		LDR	R4, [R3]
		BICS	R4, R5
		STR	R4, [R3]
		LDR	R4, [R3]
		ORRS.W	R4, R4,	#0x10
		STR	R4, [R3]
		LDR	R3, [R2]
		MOVS	R4, #0xF0
		BICS	R3, R4
		STR	R3, [R2]
		LDR	R3, [R2]
		MOVS	R4, #0xFFFFC7FF
		STR	R3, [R2]
		LDR	R3, [R2]
		ANDS	R4, R3
		STR	R4, [R2]
		STR	R0, [R2]
		LDR	R0, [R2]
		MOVS	R3, #0xFFFFF8FF
		ANDS	R3, R0
		STR	R3, [R2]
		LSRS	R0, R1,	#0x14
		STR	R0, [R2]
		LDR	R0, [R2]
		MOVS	R3, #0xFFC0FFFF
		ANDS	R3, R0
		ORRS.W	R0, R3,	#0x1D0000
		STR	R0, [R2]
		LDR	R0, =0x42420060
		MOVS	R3, #1
		STR	R3, [R0]

loc_80073A4:				@ CODE XREF: sub_80072DC+CCj
		LDR	R0, [R1]
		LSLS	R0, R0,	#6
		BMI	loc_80073A4
		LDR	R0, [R2]
		MOVS	R1, #3
		BICS	R0, R1
		ORRS.W	R0, R0,	#2
		STR	R0, [R2]

loc_80073B6:				@ CODE XREF: sub_80072DC+E2j
		LDR	R0, [R2]
		ANDS.W	R0, R0,	#0xC
		CMP	R0, #8
		BNE	loc_80073B6
		MOVS	R0, #1
		POP	{R4,R5,PC}
@ End of function sub_80072DC

@ ---------------------------------------------------------------------------
dword_80073C4:	.long 0x4002100C	@ DATA XREF: sub_80072DCr
dword_80073C8:	.long 0xF8FF0000	@ DATA XREF: sub_80072DC+4r
dword_80073CC:	.long 0x40021004	@ DATA XREF: sub_80072DC+2Ar
dword_80073D0:	.long 0xFEF6FFFF	@ DATA XREF: sub_80072DC+34r
dword_80073D4:	.long 0x40021008	@ DATA XREF: sub_80072DC+48r
dword_80073D8:	.long 0x40022000	@ DATA XREF: sub_80072DC+6Cr
dword_80073DC:	.long 0x42420060	@ DATA XREF: sub_80072DC+C2r

@ =============== S U B	R O U T	I N E =======================================


sub_80073E0:				@ CODE XREF: sub_80073EC+Cp
		LDR	R0, =0x20001026
		LDRB	R1, [R0]
		EORS.W	R1, R1,	#1
		STRB	R1, [R0]
		BX	LR
@ End of function sub_80073E0


@ =============== S U B	R O U T	I N E =======================================


sub_80073EC:				@ CODE XREF: sub_800915C-1D56j
					@ sub_8007408+8j ...
		LDR	R1, =0x20001026
		PUSH	{R4,LR}
		LDRB	R1, [R1]
		MOVS	R4, R1
		CMP	R1, R0
		IT ne
		BLNE	sub_80073E0
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_80073EC

@ ---------------------------------------------------------------------------
dword_8007400:	.long 0x20001026	@ DATA XREF: sub_80073E0r sub_80073ECr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800915C

loc_8007404:				@ CODE XREF: sub_800915C+2j
					@ sub_800ED5C+2j
					@ DATA XREF: ...
		MOVS	R0, #0
		B	sub_80073EC
@ END OF FUNCTION CHUNK	FOR sub_800915C

@ =============== S U B	R O U T	I N E =======================================


sub_8007408:				@ CODE XREF: sub_8008ECC+12p
		LDR	R0, =0xE000ED08
		LDR	R1, =dword_8004000
		STR	R1, [R0]
		MOVS	R0, #1
		B	sub_80073EC
@ End of function sub_8007408

@ ---------------------------------------------------------------------------
		.align 4
dword_8007414:	.long 0xE000ED08	@ DATA XREF: sub_8007408r
off_8007418:	.long dword_8004000	@ DATA XREF: sub_8007408+2r
@ ---------------------------------------------------------------------------

locret_800741C:				@ DATA XREF: ROM:08004008o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007420:				@ DATA XREF: ROM:0800400Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007424:				@ DATA XREF: ROM:08004010o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007428:				@ DATA XREF: ROM:08004014o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800742C:				@ DATA XREF: ROM:08004018o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007430:				@ DATA XREF: ROM:08004030o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007434:				@ DATA XREF: ROM:0800402Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007438:				@ DATA XREF: ROM:08004040o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800743C:				@ DATA XREF: ROM:08004044o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007440:				@ DATA XREF: ROM:08004048o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007444:				@ DATA XREF: ROM:0800404Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007448:				@ DATA XREF: ROM:08004050o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800744C:				@ DATA XREF: ROM:08004054o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007450:				@ DATA XREF: ROM:08004058o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007454:				@ DATA XREF: ROM:0800405Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007458:				@ DATA XREF: ROM:08004060o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800745C:				@ DATA XREF: ROM:08004064o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007460:				@ DATA XREF: ROM:08004068o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007464:				@ DATA XREF: ROM:0800406Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007468:				@ DATA XREF: ROM:08004070o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800746C:				@ DATA XREF: ROM:08004074o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007470:				@ DATA XREF: ROM:08004078o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007474:				@ DATA XREF: ROM:0800407Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007478:				@ DATA XREF: ROM:08004080o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800747C:				@ DATA XREF: ROM:08004084o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007480:				@ DATA XREF: ROM:08004088o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007484:				@ DATA XREF: ROM:08004094o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007488:				@ DATA XREF: ROM:08004098o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800748C:				@ DATA XREF: ROM:0800409Co
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_8007490:				@ DATA XREF: ROM:080040A0o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007494:				@ DATA XREF: ROM:080040A4o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_8007498:				@ DATA XREF: ROM:080040A8o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_800749C:				@ DATA XREF: ROM:080040ACo
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_80074A0:				@ DATA XREF: ROM:080040B0o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074A4:				@ DATA XREF: ROM:080040B4o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074A8:				@ DATA XREF: ROM:080040B8o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074AC:				@ DATA XREF: ROM:080040BCo
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_80074B0:				@ DATA XREF: ROM:080040C0o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074B4:				@ DATA XREF: ROM:080040C4o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074B8:				@ DATA XREF: ROM:080040C8o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

locret_80074BC:				@ DATA XREF: ROM:080040CCo
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

locret_80074C0:				@ DATA XREF: ROM:080040D0o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80074D8:				@ CODE XREF: sub_8007670+46p
		PUSH	{R4,LR}
		LDR	R4, =0x2000002C
		LDR	R0, [R4]
		CBZ	R0, loc_80074F0
		LDR	R1, [R4,#0xC]
		LDR	R2, [R4,#0x10]
		CMP	R1, R2
		BEQ	loc_8007520
		BL	sub_80064CC
		MOVS	R0, #0
		STR	R0, [R4]

loc_80074F0:				@ CODE XREF: sub_80074D8+6j
		LDR	R0, [R4,#0x10]
		CBNZ	R0, loc_800750C
		BL	sub_800646C
		LDR	R1, =0xFFFFFE00
		ADDS	R0, R0,	R1
		ANDS	R1, R0
		CMP.W	R1, #0x200
		BGE	loc_800750A
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800750A:				@ CODE XREF: sub_80074D8+2Aj
		STR	R1, [R4,#0x10]

loc_800750C:				@ CODE XREF: sub_80074D8+1Aj
		LDR	R0, [R4,#0x10]
		BL	sub_8006488
		STR	R0, [R4]
		LDR	R0, [R4,#0x10]
		LDR	R1, [R4]
		STR	R0, [R4,#0xC]
		ADDS	R0, R1,	R0
		STR	R0, [R4,#4]
		CBZ	R1, loc_8007534

loc_8007520:				@ CODE XREF: sub_80074D8+Ej
		BL	sub_80063A0
		LDR	R3, [R4,#0x10]
		LDR	R2, [R4]
		LDR	R1, [R4,#0x18]
		LDR	R0, [R4,#0x14]
		BL	sub_8006384
		LDR	R0, [R4]
		STR	R0, [R4,#8]

loc_8007534:				@ CODE XREF: sub_80074D8+46j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_80074D8

@ ---------------------------------------------------------------------------
dword_8007538:	.long 0xFFFFFE00	@ DATA XREF: sub_80074D8+20r

@ =============== S U B	R O U T	I N E =======================================


sub_800753C:				@ CODE XREF: sub_80076FC+26p
					@ sub_80077A8j
		PUSH	{R4,LR}
		LDR	R4, =0x2000002C
		LDR	R0, [R4]
		CBZ	R0, loc_8007552
		BL	sub_80063A0
		LDR	R0, [R4]
		BL	sub_80064CC
		MOVS	R0, #0
		STR	R0, [R4]

loc_8007552:				@ CODE XREF: sub_800753C+6j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800753C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007558:				@ CODE XREF: sub_8007590+64p
					@ sub_8007590+6Ep
		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		BEQ	locret_800758A
		LDR	R5, =0x2000002C
		MOVS	R1, R4
		LDR	R0, [R5,#8]
		BL	sub_8006610

loc_8007568:				@ CODE XREF: sub_8007558+16j
					@ sub_8007558+30j
		BL	sub_800668C
		SUBS	R6, R4,	R0
		BEQ	loc_8007568
		LDR	R0, [R5,#8]
		LDR	R1, [R5,#4]
		ADDS	R0, R0,	R6
		STR	R0, [R5,#8]
		CMP	R0, R1
		ITT cs
		LDRCS	R0, [R5]
		STRCS	R0, [R5,#8]
		LDR	R0, [R5,#8]
		BL	sub_80063A8
		SUBS	R4, R4,	R6
		BNE	loc_8007568

locret_800758A:				@ CODE XREF: sub_8007558+4j
		POP	{R4-R6,PC}
@ End of function sub_8007558

@ ---------------------------------------------------------------------------
dword_800758C:	.long 0x2000002C	@ DATA XREF: sub_8007558+6r

@ =============== S U B	R O U T	I N E =======================================


sub_8007590:				@ CODE XREF: sub_800772C+22p
		PUSH	{R4-R7,LR}
		LDR	R5, =0x2000002C
		SUB	SP, SP,	#0x14
		MOVS	R4, R0
		LDR	R0, [R5]
		MOVS	R6, #0
		CBNZ	R0, loc_80075AC
		STR	R6, [SP,#8]
		STR	R6, [SP,#0xC]
		MOVS	R1, #8
		ADD	R0, SP,	#8
		BL	sub_80065C4
		B	loc_8007606
@ ---------------------------------------------------------------------------

loc_80075AC:				@ CODE XREF: sub_8007590+Cj
		ADD	R1, SP,	#0x10
		ADD	R0, SP,	#4
		BL	sub_80063A4
		LDR	R1, [R5,#8]
		LDR	R0, [SP,#4]
		SUBS	R7, R0,	R1
		BNE	loc_80075C6
		LDR	R0, [SP,#0x10]
		CBNZ	R0, loc_80075CC
		LDR	R7, [R5,#0xC]
		MOVS	R6, #1
		B	loc_80075CC
@ ---------------------------------------------------------------------------

loc_80075C6:				@ CODE XREF: sub_8007590+2Aj
		ITT mi
		LDRMI	R0, [R5,#0xC]
		ADDMI	R7, R7,	R0

loc_80075CC:				@ CODE XREF: sub_8007590+2Ej
					@ sub_8007590+34j
		CMP	R7, R4
		IT cc
		MOVCC	R4, R7
		STR	R6, [SP,#8]
		STR	R4, [SP,#0xC]
		MOVS	R1, #8
		ADD	R0, SP,	#8
		BL	sub_80065C4
		CBZ	R4, loc_80075FA
		LDR	R0, [R5,#8]
		LDR	R1, [SP,#4]
		CMP	R0, R1
		BCC	loc_80075FC
		LDR	R1, [R5,#4]
		SUBS	R7, R1,	R0
		CMP	R7, R4
		IT cs
		MOVCS	R7, R4
		MOVS	R0, R7
		BL	sub_8007558
		SUBS	R4, R4,	R7

loc_80075FA:				@ CODE XREF: sub_8007590+4Ej
		CBZ	R4, loc_8007602

loc_80075FC:				@ CODE XREF: sub_8007590+56j
		MOVS	R0, R4
		BL	sub_8007558

loc_8007602:				@ CODE XREF: sub_8007590:loc_80075FAj
		BL	sub_8006644

loc_8007606:				@ CODE XREF: sub_8007590+1Aj
		ADD	SP, SP,	#0x14
		POP	{R4-R7,PC}
@ End of function sub_8007590

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800760C:				@ CODE XREF: sub_8007770:loc_80077A2p
		PUSH	{R0,R1,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		B	loc_800761E
@ ---------------------------------------------------------------------------

loc_8007614:				@ CODE XREF: sub_800760C+3Ej
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_8006980

loc_800761E:				@ CODE XREF: sub_800760C+6j
					@ sub_800760C+48j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_800763A
		LDR	R0, [SP,#4]
		CBZ	R0, loc_8007656
		MOVS.W	R0, #0xFFFFFFFF
		BL	sub_800662C
		POP	{R0,R1,PC}
@ ---------------------------------------------------------------------------

loc_800763A:				@ CODE XREF: sub_800760C+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_8006980
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_8007614
		LDRB.W	R0, [SP,#0]
		BL	sub_800665C
		B	loc_800761E
@ ---------------------------------------------------------------------------

loc_8007656:				@ CODE XREF: sub_800760C+22j
		MOVS	R0, #0x1C
		BL	sub_800663C
		LDR	R0, [SP,#4]
		BL	sub_800663C
		LDR	R0, [SP,#4]
		BL	sub_80063AC
		MOVS	R1, #0x14
		BL	sub_80065C4
		POP	{R0,R1,PC}
@ End of function sub_800760C


@ =============== S U B	R O U T	I N E =======================================


sub_8007670:				@ CODE XREF: sub_8007770:loc_8007796p
		PUSH	{R0,R4,LR}
		B	loc_8007680
@ ---------------------------------------------------------------------------

loc_8007674:				@ CODE XREF: sub_8007670+60j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x14

loc_800767A:				@ CODE XREF: sub_8007670+72j
					@ sub_8007670+7Aj
		MOVS	R0, R4
		BL	sub_8006980

loc_8007680:				@ CODE XREF: sub_8007670+2j
					@ sub_8007670+84j
		MOVS	R1, #1
		LDR	R4, =0x2000002C
		MOV	R0, SP
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_80076C0
		LDR	R0, [R4,#0x14]
		BL	sub_80063AC
		LDR	R1, [R0]
		LDR	R2, [R0,#4]
		UDIV.W	R1, R1,	R2
		LDR	R2, [R4,#0x18]
		CMP	R1, R2
		IT cc
		STRCC	R1, [R4,#0x18]
		LDR	R1, [R0]
		LDR	R0, [R0,#8]
		UDIV.W	R0, R1,	R0
		LDR	R1, [R4,#0x18]
		CMP	R1, R0
		IT cc
		STRCC	R0, [R4,#0x18]
		BL	sub_80074D8
		BL	sub_800662C
		POP	{R0,R4,PC}
@ ---------------------------------------------------------------------------

loc_80076C0:				@ CODE XREF: sub_8007670+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_8006980
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_8007674
		CMP	R0, #2
		BEQ	loc_80076DC
		CMP	R0, #4
		BEQ	loc_80076E4
		B	loc_80076EC
@ ---------------------------------------------------------------------------

loc_80076DC:				@ CODE XREF: sub_8007670+64j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x18
		B	loc_800767A
@ ---------------------------------------------------------------------------

loc_80076E4:				@ CODE XREF: sub_8007670+68j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x10
		B	loc_800767A
@ ---------------------------------------------------------------------------

loc_80076EC:				@ CODE XREF: sub_8007670+6Aj
		LDRB.W	R0, [SP,#0]
		BL	sub_800665C
		B	loc_8007680
@ End of function sub_8007670

@ ---------------------------------------------------------------------------
		.align 4
dword_80076F8:	.long 0x2000002C	@ DATA XREF: sub_80074D8+2r
					@ sub_800753C+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_80076FC:				@ CODE XREF: sub_8007770:loc_800779Cp
		PUSH	{R0,LR}
		B	loc_8007712
@ ---------------------------------------------------------------------------

loc_8007700:				@ CODE XREF: sub_80076FC+24j
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		BL	sub_800665C

loc_8007712:				@ CODE XREF: sub_80076FC+2j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_8007700
		BL	sub_800753C
		BL	sub_800662C
		POP	{R0,PC}
@ End of function sub_80076FC


@ =============== S U B	R O U T	I N E =======================================


sub_800772C:				@ CODE XREF: sub_8007770+12p
		PUSH	{R0,R1,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		B	loc_800773E
@ ---------------------------------------------------------------------------

loc_8007734:				@ CODE XREF: sub_800772C+38j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_8006980

loc_800773E:				@ CODE XREF: sub_800772C+6j
					@ sub_800772C+42j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_8007754
		LDR	R0, [SP,#4]
		BL	sub_8007590
		POP	{R0,R1,PC}
@ ---------------------------------------------------------------------------

loc_8007754:				@ CODE XREF: sub_800772C+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_8006980
		LDRB.W	R0, [SP,#1]
		CMP	R0, #3
		BEQ	loc_8007734
		LDRB.W	R0, [SP,#0]
		BL	sub_800665C
		B	loc_800773E
@ End of function sub_800772C


@ =============== S U B	R O U T	I N E =======================================


sub_8007770:				@ CODE XREF: sub_800588C+12p
		PUSH	{R0,LR}
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_8006980
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0x66
		BNE	loc_8007788
		BL	sub_800772C
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_8007788:				@ CODE XREF: sub_8007770+10j
		CMP	R0, #0x64
		BEQ	loc_8007796
		CMP	R0, #0x65
		BEQ	loc_800779C
		CMP	R0, #0x6E
		BEQ	loc_80077A2
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_8007796:				@ CODE XREF: sub_8007770+1Aj
		BL	sub_8007670
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800779C:				@ CODE XREF: sub_8007770+1Ej
		BL	sub_80076FC
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_80077A2:				@ CODE XREF: sub_8007770+22j
		BL	sub_800760C
		POP	{R0,PC}
@ End of function sub_8007770


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_80077A8:				@ CODE XREF: sub_8005A7C+12p
		B	sub_800753C
@ End of function sub_80077A8

@ ---------------------------------------------------------------------------
		.align 4

loc_80077AC:				@ CODE XREF: ROM:080077EAj
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDR	R0, [R0,#0xC]
		BX	LR
@ ---------------------------------------------------------------------------
dword_80077B8:	.long 0x20000310	@ DATA XREF: ROM:loc_80077ACr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_80069B8

loc_80077BC:				@ CODE XREF: sub_80069B8:loc_80069C4j
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	sub_8008178
@ END OF FUNCTION CHUNK	FOR sub_80069B8

@ =============== S U B	R O U T	I N E =======================================


sub_80077C8:				@ CODE XREF: sub_8006944+1Ap
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001027
		MOVS	R3, #0
		LDRB	R0, [R0]
		B.W	sub_8008198
@ End of function sub_80077C8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80077D8:				@ CODE XREF: sub_80069D4j

@ FUNCTION CHUNK AT 080084C4 SIZE 0000000C BYTES

		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	loc_80084C4
@ End of function sub_80077D8

@ ---------------------------------------------------------------------------

loc_80077E0:				@ CODE XREF: ROM:loc_80069D0j
		LDR	R0, =0x20001027
		B	loc_80077E8
@ ---------------------------------------------------------------------------

loc_80077E4:				@ CODE XREF: ROM:loc_80069CCj
		LDR	R0, =0x20001028
		NOP

loc_80077E8:				@ CODE XREF: ROM:080077E2j
		LDRB	R0, [R0]
		B	loc_80077AC

@ =============== S U B	R O U T	I N E =======================================


sub_80077EC:				@ CODE XREF: sub_80068D8+38p
		LDR	R0, =0x20001027
		MOVS	R3, #1
		LDRB	R0, [R0]
		MOVS	R2, #0
		MOVS	R1, #1
		B.W	sub_8008220
@ End of function sub_80077EC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80077FC:				@ CODE XREF: sub_8006830+52p
					@ sub_8006830+74p ...
		PUSH	{LR}
		PUSH	{R3}
		MOVS	R3, R2
		NOP
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001027
		LDRB	R0, [R0]
		BL	sub_8008264
		POP	{R1,PC}
@ End of function sub_80077FC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007814:				@ CODE XREF: sub_8006980+18p
		MOVS	R3, R2
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	sub_8008154
@ End of function sub_8007814

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007824:				@ CODE XREF: sub_8006704+2Cp
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8008508
		LDR	R2, =0x20000450
		MOVS	R1, #0x14
		MLA.W	R0, R0,	R1, R2
		MOVS	R1, #0xFF
		ADDS	R0, #8
		STRB	R1, [R0,#2]
		STRB	R1, [R0,#3]
		STRB	R1, [R0,#4]
		LDRB	R2, [R4]
		LDRB	R3, [R4,#1]
		MOVS	R1, #1
		LSLS	R1, R2
		MOVS	R2, #1
		LSLS	R2, R3
		ORRS	R2, R1
		STRH	R2, [R0]
		LDR	R0, =0x20001027
		LDRB	R1, [R4]
		STRB	R1, [R0]
		LDRB	R1, [R4,#1]
		STRB	R1, [R0,#1]
		POP	{R4,PC}
@ End of function sub_8007824

@ ---------------------------------------------------------------------------
		.align 4
dword_800785C:	.long 0x20000450	@ DATA XREF: sub_8007824+8r
dword_8007860:	.long 0x20001027	@ DATA XREF: sub_80077C8+4r
					@ ROM:loc_80077E0r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8007864:				@ CODE XREF: sub_80067D8+14p

@ FUNCTION CHUNK AT 0800854C SIZE 0000000C BYTES

		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	loc_800854C
@ End of function sub_8007864

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007870:	.long 0x20001028	@ DATA XREF: sub_80069B8+E08r
					@ sub_80077D8r	...
@ ---------------------------------------------------------------------------

loc_8007874:				@ CODE XREF: ROM:loc_8007CCCj
		LDR	R0, =0x40010810
		LSRS	R1, R0,	#0x15
		STR	R1, [R0]
		BX	LR
@ ---------------------------------------------------------------------------
dword_800787C:	.long 0x40010810	@ DATA XREF: ROM:loc_8007874r

@ =============== S U B	R O U T	I N E =======================================


sub_8007880:				@ CODE XREF: sub_800803C+20p

@ FUNCTION CHUNK AT 08008400 SIZE 00000006 BYTES

		LDR	R0, =off_80092C8
		B.W	loc_8008400
@ End of function sub_8007880

@ ---------------------------------------------------------------------------
		.align 4
off_8007888:	.long off_80092C8	@ DATA XREF: sub_8007880r

@ =============== S U B	R O U T	I N E =======================================


sub_800788C:				@ DATA XREF: ROM:0800408Co
					@ ROM:08004090o
		PUSH	{R4,LR}
		LDR	R4, =0x200001A0
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_800712A
		LDR	R0, =0x200001B8
		LDR	R0, [R0]
		MOVS	R1, R0
		IT ne
		BLXNE	R0
		BL	sub_8007136
		LDRB	R0, [R4]
		CMP	R0, #1
		BNE	loc_80078B8
		LDR	R0, =0x20001022
		LDRB	R0, [R0]
		CBZ	R0, loc_80078B8
		BL	sub_8007106

loc_80078B8:				@ CODE XREF: sub_800788C+20j
					@ sub_800788C+26j
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		POP.W	{R4,LR}
		B.W	sub_800712A
@ End of function sub_800788C

@ ---------------------------------------------------------------------------
		.align 4
dword_80078C8:	.long 0x200001A0	@ DATA XREF: sub_800788C+2r
dword_80078CC:	.long 0x20001022	@ DATA XREF: sub_800788C+22r

@ =============== S U B	R O U T	I N E =======================================


sub_80078D0:				@ CODE XREF: sub_8007C6C+3Ep
		LDR	R1, =0x200001B8
		PUSH	{LR}
		STR	R0, [R1]
		MOVS	R1, #0xF0
		MOVS	R0, #0x23
		BL	sub_800727C
		MOVS	R1, #0xF0
		MOVS	R0, #0x24
		BL	sub_800727C
		MOVS	R0, #0x23
		BL	sub_8007210
		MOVS	R0, #0x24
		LDR.W	LR, [SP+0],#4
		B.W	sub_8007210
@ End of function sub_80078D0

@ ---------------------------------------------------------------------------
		.align 4
dword_80078F8:	.long 0x200001B8	@ DATA XREF: sub_800788C+Er
					@ sub_80078D0r

@ =============== S U B	R O U T	I N E =======================================


sub_80078FC:				@ CODE XREF: sub_8007A20+10p
		LDR	R0, =0x200002BC
		MOVS	R1, #0x40
		STR	R1, [R0]
		MOVS	R0, #0
		MOVS	R1, #0

loc_8007906:				@ CODE XREF: sub_80078FC+1Aj
		LDR	R2, =0x200001BC
		STR.W	R0, [R2,R1,LSL#2]
		LDR	R2, =0x2000023C
		STR.W	R0, [R2,R1,LSL#2]
		ADDS	R1, R1,	#1
		CMP	R1, #0x20
		BCC	loc_8007906
		BX	LR
@ End of function sub_80078FC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800791C:				@ CODE XREF: sub_8007A20+16p
					@ sub_8007A20+30p ...
		LDR	R2, =0x200002BC
		MOVS	R1, R0
		LDR	R0, [R2]
		LDR	R3, [R2]
		ADDS	R1, R3,	R1
		STR	R1, [R2]
		BX	LR
@ End of function sub_800791C

@ ---------------------------------------------------------------------------
		.align 4
dword_800792C:	.long 0x200002BC	@ DATA XREF: sub_80078FCr sub_800791Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8007930:				@ CODE XREF: sub_8007A20+20p
					@ sub_8007A20+3Ap ...
		LDR	R3, =0x40006000
		PUSH	{R4,R5,LR}
		LDR	R5, =0x40005C50
		LSLS	R4, R0,	#3
		CMP	R2, #0
		LDR	R5, [R5]
		BEQ	loc_8007946
		ADDS	R4, R5,	R4
		ADDS.W	R4, R3,	R4,LSL#1
		B	loc_800794E
@ ---------------------------------------------------------------------------

loc_8007946:				@ CODE XREF: sub_8007930+Cj
		ADDS	R4, R5,	R4
		LDR	R5, =0x40006008
		ADDS.W	R4, R5,	R4,LSL#1

loc_800794E:				@ CODE XREF: sub_8007930+14j
		LSLS	R1, R1,	#1
		LSRS	R1, R1,	#1
		STRH	R1, [R4]
		LDR	R1, =0x200001BC
		ADDS.W	R0, R2,	R0,LSL#1
		LDRH	R2, [R4]
		ADDS.W	R2, R3,	R2,LSL#1
		STR.W	R2, [R1,R0,LSL#2]
		POP	{R4,R5,PC}
@ End of function sub_8007930

@ ---------------------------------------------------------------------------
		.align 4
dword_8007968:	.long 0x40006000	@ DATA XREF: sub_8007930r
dword_800796C:	.long 0x40006008	@ DATA XREF: sub_8007930+18r

@ =============== S U B	R O U T	I N E =======================================


sub_8007970:				@ CODE XREF: sub_8007A20+2Ap
					@ sub_8007A20+44p ...
		PUSH	{R4,R5,LR}
		LDR	R4, =0x40005C50
		LSLS	R3, R0,	#3
		CMP	R2, #0
		LDR	R4, [R4]
		BEQ	loc_8007986
		ADDS	R3, R4,	R3
		LDR	R4, =0x40006004
		ADDS.W	R3, R4,	R3,LSL#1
		B	loc_80079B6
@ ---------------------------------------------------------------------------

loc_8007986:				@ CODE XREF: sub_8007970+Aj
		MOVS	R5, #0
		ADDS	R3, R4,	R3
		LDR	R4, =0x4000600C
		ADDS.W	R3, R4,	R3,LSL#1
		CMP	R1, #0x3F
		BCS	loc_80079A2
		LSRS	R4, R1,	#1
		UXTH	R4, R4
		LSLS	R1, R1,	#0x1F
		BPL	loc_80079B0
		ADDS	R4, R4,	#1
		UXTH	R4, R4
		B	loc_80079B0
@ ---------------------------------------------------------------------------

loc_80079A2:				@ CODE XREF: sub_8007970+22j
		LSRS	R4, R1,	#5
		UXTH	R4, R4
		MOVS	R5, #1
		LSLS	R1, R4,	#0x1B
		ITT ne
		ADDNE	R4, R4,	#1
		UXTHNE	R4, R4

loc_80079B0:				@ CODE XREF: sub_8007970+2Aj
					@ sub_8007970+30j
		LSLS	R1, R4,	#0xA
		ORRS.W	R1, R1,	R5,LSL#15

loc_80079B6:				@ CODE XREF: sub_8007970+14j
		STR	R1, [R3]
		LDR	R1, =0x2000023C
		ADDS.W	R0, R2,	R0,LSL#1
		STR.W	R3, [R1,R0,LSL#2]
		POP	{R4,R5,PC}
@ End of function sub_8007970

@ ---------------------------------------------------------------------------
dword_80079C4:	.long 0x40006004	@ DATA XREF: sub_8007970+Er
dword_80079C8:	.long 0x4000600C	@ DATA XREF: sub_8007970+1Ar
dword_80079CC:	.long 0x40005C50	@ DATA XREF: sub_8007930+4r
					@ sub_8007970+2r

@ =============== S U B	R O U T	I N E =======================================


sub_80079D0:				@ CODE XREF: sub_8007A9C+32p
					@ sub_8007AF0+48p ...
		LDR	R2, =0x40005C00
		ANDS.W	R1, R1,	#0x3000
		ADDS.W	R0, R2,	R0,LSL#2
		LDR	R2, [R0]
		EORS	R1, R2
		LDR	R2, =0xBF8F
		B	loc_80079F8
@ ---------------------------------------------------------------------------
		.align 4
dword_80079E4:	.long 0xBF8F		@ DATA XREF: sub_80079D0+Er
@ ---------------------------------------------------------------------------

loc_80079E8:				@ CODE XREF: sub_8007BF4+20p
					@ sub_8007BF4+36p ...
		LDR	R2, =0x40005C00
		ANDS.W	R1, R1,	#0x30
		ADDS.W	R0, R2,	R0,LSL#2
		LDR	R2, [R0]
		EORS	R1, R2
		LDR	R2, =0x8FBF

loc_80079F8:				@ CODE XREF: sub_80079D0+10j
		ANDS	R2, R1
		STR	R2, [R0]
		BX	LR
@ End of function sub_80079D0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007A00:	.long 0x8FBF		@ DATA XREF: sub_80079D0+26r

@ =============== S U B	R O U T	I N E =======================================


sub_8007A04:				@ CODE XREF: sub_8007A9C+22p
					@ sub_8007A9C+42p ...
		CMP	R2, #2
		BCC	loc_8007A16

loc_8007A08:				@ CODE XREF: sub_8007A04+10j
		LDR.W	R3, [R1],#4
		SUBS	R2, R2,	#2
		CMP	R2, #2
		STRH.W	R3, [R0],#2
		BCS	loc_8007A08

loc_8007A16:				@ CODE XREF: sub_8007A04+2j
		CBZ	R2, locret_8007A1C
		LDR	R1, [R1]
		STRB	R1, [R0]

locret_8007A1C:				@ CODE XREF: sub_8007A04:loc_8007A16j
		BX	LR
@ End of function sub_8007A04

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8007A20:				@ CODE XREF: sub_8007B50+14p
					@ sub_8007C6C+42p
		LDR	R0, =0x40005C40
		PUSH	{LR}
		MOVS.W	R1, #0x9E00
		STR.W	R1, [R0],#0x10
		MOVS	R1, #0
		STR	R1, [R0]
		BL	sub_80078FC
		MOVS	R0, #8
		BL	sub_800791C
		MOVS	R2, #0
		MOVS	R1, R0
		MOVS	R0, #0
		BL	sub_8007930
		MOVS	R2, #0
		MOVS	R1, #8
		MOV	R0, R2
		BL	sub_8007970
		MOVS	R0, #8
		BL	sub_800791C
		MOVS	R2, #1
		MOVS	R1, R0
		MOVS	R0, #0
		BL	sub_8007930
		MOVS	R2, #1
		MOVS	R1, #8
		MOVS	R0, #0
		BL	sub_8007970
		LDR	R0, =0x40005C00
		LDR	R1, =0x3230
		STR.W	R1, [R0],#0x4C
		MOVS	R1, #0x80
		STR	R1, [R0]
		LDR.W	LR, [SP+0],#4
		B.W	sub_8008440
@ End of function sub_8007A20

@ ---------------------------------------------------------------------------
dword_8007A7C:	.long 0x3230		@ DATA XREF: sub_8007A20+4Ar

@ =============== S U B	R O U T	I N E =======================================


sub_8007A80:				@ CODE XREF: sub_8007B50+3Ep
		PUSH	{LR}
		BL	sub_8008480
		LDR	R0, =0x40005C40
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#8
		STR	R1, [R0]
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#4
		STR	R1, [R0]
		POP	{PC}
@ End of function sub_8007A80

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007A9C:				@ CODE XREF: sub_8007B50:loc_8007BA4p
		PUSH	{R0-R4,LR}
		LDR	R0, =0x40005C00
		LDR	R2, =0xF8F
		LDR	R1, [R0]
		ANDS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x2000023C
		LDR	R0, [R0]
		LDR	R0, [R0]
		LSLS	R4, R0,	#0x16
		LSRS	R4, R4,	#0x16
		LSLS	R0, R1,	#0x14
		BPL	loc_8007AD4
		LDR	R0, =0x200001BC
		MOVS	R2, R4
		LDR	R1, [R0]
		MOV	R0, SP
		BL	sub_8007A04
		MOV	R0, SP
		BL	sub_8008DA4
		MOVS.W	R1, #0x3000
		MOVS	R0, #0
		BL	sub_80079D0
		POP	{R0-R4,PC}
@ ---------------------------------------------------------------------------

loc_8007AD4:				@ CODE XREF: sub_8007A9C+18j
		CBZ	R4, locret_8007AEC
		LDR	R0, =0x200001BC
		MOVS	R2, R4
		LDR	R1, [R0]
		ADD	R0, SP,	#8
		BL	sub_8007A04
		MOVS	R2, R4
		ADD	R1, SP,	#8
		MOVS	R0, #0
		BL	sub_80082AC

locret_8007AEC:				@ CODE XREF: sub_8007A9C:loc_8007AD4j
		POP	{R0-R4,PC}
@ End of function sub_8007A9C

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8007AF0:				@ CODE XREF: sub_8007B50+86p
		LDR	R2, =0xF8F
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R0, =0x40005C00
		MOVS	R5, R4
		ADDS.W	R0, R0,	R5,LSL#2
		LDR	R1, [R0]
		ANDS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x2000023C
		LDR.W	R0, [R0,R5,LSL#3]
		LDR	R0, [R0]
		LSLS	R6, R0,	#0x16
		LSRS	R6, R6,	#0x16
		BEQ	locret_8007B3C
		LDR	R0, =0x200001BC
		LDR	R7, =0x200002D0
		MOVS	R2, R6
		LDR.W	R1, [R0,R5,LSL#3]
		MOVS	R0, R7
		BL	sub_8007A04
		MOVS	R2, R6
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_80082AC
		LDR	R0, =0x200002C0
		LDRB	R0, [R0,R5]
		CBZ	R0, locret_8007B3C
		MOVS.W	R1, #0x3000
		MOVS	R0, R4
		BL	sub_80079D0

locret_8007B3C:				@ CODE XREF: sub_8007AF0+20j
					@ sub_8007AF0+40j
		POP	{R4-R7,PC}
@ End of function sub_8007AF0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007B40:	.long 0x200002D0	@ DATA XREF: sub_8007AF0+24r
dword_8007B44:	.long 0xF8F		@ DATA XREF: sub_8007A9C+4r
					@ sub_8007AF0r
dword_8007B48:	.long 0x2000023C	@ DATA XREF: sub_80078FC+10r
					@ sub_8007970+48r ...
dword_8007B4C:	.long 0x200001BC	@ DATA XREF: sub_80078FC:loc_8007906r
					@ sub_8007930+24r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8007B50:				@ DATA XREF: sub_8007C6C+3Co
					@ ROM:off_8007CC0o ...
		PUSH	{R4,LR}
		LDR	R4, =0x40005C44
		LDR	R0, [R4]
		ANDS.W	R0, R0,	#0x9E00
		LSLS	R1, R0,	#0x15
		BPL	loc_8007B6A
		MOVS	R0, #0xFFFFFBFF
		STR	R0, [R4]
		BL	sub_8007A20
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8007B6A:				@ CODE XREF: sub_8007B50+Cj
		LSLS	R1, R0,	#0x13
		BPL	loc_8007B84
		MOVS	R0, #0xFFFFEFFF
		STR	R0, [R4]
		LDR	R0, =0x40005C40
		MOVS	R2, #8
		LDR	R1, [R0]
		BICS	R1, R2
		STR	R1, [R0]
		BL	sub_800848C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8007B84:				@ CODE XREF: sub_8007B50+1Cj
		LSLS	R1, R0,	#0x14
		BPL	loc_8007B94
		MOVS	R0, #0xFFFFF7FF
		STR	R0, [R4]
		BL	sub_8007A80
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8007B94:				@ CODE XREF: sub_8007B50+36j
		LSLS	R1, R0,	#0x10
		BMI	loc_8007BA8
		LSLS	R0, R0,	#0x16
		BPL	loc_8007BE4
		MOVS	R0, #0xFFFFFDFF
		STR	R0, [R4]
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8007BA4:				@ CODE XREF: sub_8007B50+74j
		BL	sub_8007A9C

loc_8007BA8:				@ CODE XREF: sub_8007B50+46j
					@ sub_8007B50+82j ...
		LDR	R0, [R4]
		LSLS	R0, R0,	#0x10
		BPL	locret_8007BEA
		LDR	R0, [R4]
		LDR	R1, [R4]
		MOVS	R2, #1
		LSLS	R0, R0,	#0x1C
		LSRS	R0, R0,	#0x1C
		LSRS	R1, R1,	#4
		ANDS	R2, R1
		LDR	R1, =0x8F0F
		MOVS	R3, R0
		BNE	loc_8007BD4
		CMP	R2, #0
		BNE	loc_8007BA4
		LDR	R2, =0x40005C00

loc_8007BC8:				@ CODE XREF: sub_8007B50+92j
		LDR	R3, [R2]
		ANDS	R1, R3
		STR	R1, [R2]
		BL	sub_8008390
		B	loc_8007BA8
@ ---------------------------------------------------------------------------

loc_8007BD4:				@ CODE XREF: sub_8007B50+70j
		CBZ	R2, loc_8007BDC
		BL	sub_8007AF0
		B	loc_8007BA8
@ ---------------------------------------------------------------------------

loc_8007BDC:				@ CODE XREF: sub_8007B50:loc_8007BD4j
		LDR	R3, =0x40005C00
		ADDS.W	R2, R3,	R0,LSL#2
		B	loc_8007BC8
@ ---------------------------------------------------------------------------

loc_8007BE4:				@ CODE XREF: sub_8007B50+4Aj
		MOVS	R0, #0xFFFF61FF
		STR	R0, [R4]

locret_8007BEA:				@ CODE XREF: sub_8007B50+5Cj
		POP	{R4,PC}
@ End of function sub_8007B50

@ ---------------------------------------------------------------------------
dword_8007BEC:	.long 0x8F0F		@ DATA XREF: sub_8007B50+6Cr
dword_8007BF0:	.long 0x40005C00	@ DATA XREF: sub_80079D0r
					@ sub_80079D0:loc_80079E8r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8007BF4:				@ DATA XREF: ROM:080092E8o
					@ ROM:0800EEE8o
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		CBZ	R4, locret_8007C2E
		BL	sub_8008000
		MOVS	R1, #0x80
		ANDS	R1, R0
		BEQ	loc_8007C16
		CBZ	R5, loc_8007C0C
		MOVS	R1, #0x10
		B	loc_8007C0E
@ ---------------------------------------------------------------------------

loc_8007C0C:				@ CODE XREF: sub_8007BF4+12j
		MOVS	R1, #0x20

loc_8007C0E:				@ CODE XREF: sub_8007BF4+16j
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	loc_80079E8
@ ---------------------------------------------------------------------------

loc_8007C16:				@ CODE XREF: sub_8007BF4+10j
		CBZ	R5, loc_8007C24
		MOVS.W	R1, #0x1000
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_80079D0
@ ---------------------------------------------------------------------------

loc_8007C24:				@ CODE XREF: sub_8007BF4:loc_8007C16j
		MOVS.W	R1, #0x2000
		MOVS	R0, R4
		BL	loc_80079E8

locret_8007C2E:				@ CODE XREF: sub_8007BF4+6j
		POP	{R4,R5,PC}
@ End of function sub_8007BF4


@ =============== S U B	R O U T	I N E =======================================


sub_8007C30:				@ DATA XREF: ROM:080092ECo
					@ ROM:0800EEECo
		LDR	R1, =0x1010
		MOVS	R0, #0
		B	loc_80079E8
@ End of function sub_8007C30

@ ---------------------------------------------------------------------------
		.align 4
dword_8007C38:	.long 0x1010		@ DATA XREF: sub_8007C30r
@ ---------------------------------------------------------------------------

loc_8007C3C:				@ DATA XREF: ROM:080092E4o
					@ ROM:0800EEE4o
		LDR	R1, =0x40005C4C
		ORRS.W	R0, R0,	#0x80
		STR	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
dword_8007C48:	.long 0x40005C4C	@ DATA XREF: ROM:loc_8007C3Cr
@ ---------------------------------------------------------------------------

loc_8007C4C:				@ DATA XREF: ROM:080092F0o
					@ ROM:0800EEF0o
		LDR	R1, =0x200002C0
		MOVS	R2, #0
		STRB	R2, [R1,R0]
		BX	LR

@ =============== S U B	R O U T	I N E =======================================


sub_8007C54:				@ DATA XREF: ROM:080092F4o
					@ ROM:0800EEF4o
		PUSH	{R4,LR}
		MOVS.W	R1, #0x3000
		MOVS	R4, R0
		BL	sub_80079D0
		LDR	R0, =0x200002C0
		MOVS	R1, #1
		STRB	R1, [R0,R4]
		POP	{R4,PC}
@ End of function sub_8007C54

@ ---------------------------------------------------------------------------
dword_8007C68:	.long 0x200002C0	@ DATA XREF: sub_8007AF0+3Cr
					@ ROM:loc_8007C4Cr ...

@ =============== S U B	R O U T	I N E =======================================


sub_8007C6C:				@ DATA XREF: ROM:off_80092C8o
					@ ROM:0800EEC8o
		PUSH	{LR}
		BL	sub_8008588
		LDR	R0, =0x40021004
		MOVS	R2, #0xFFBFFFFF
		LDR	R1, [R0]
		ANDS	R2, R1
		STR.W	R2, [R0],#0xC
		LDR	R1, [R0]
		MOVS	R2, #0xFF7FFFFF
		ANDS	R2, R1
		STR.W	R2, [R0],#0xC
		LDR	R1, [R0]
		MOVS	R2, #0
		ORRS.W	R1, R1,	#0x800000
		STR	R1, [R0]
		LDR	R0, =0x40005C40
		MOVS	R1, #3
		STR	R1, [R0]
		MOVS	R1, #1
		STR	R1, [R0]
		LDR	R1, =0x40005C44
		STR	R2, [R1]
		LSRS	R1, R0,	#0x14
		STR	R1, [R0]
		LDR	R0, =(sub_8007B50+1)
		BL	sub_80078D0
		BL	sub_8007A20
		LDR.W	LR, [SP+0],#4
		B.W	sub_8008574
@ End of function sub_8007C6C

@ ---------------------------------------------------------------------------
		.align 4
dword_8007CBC:	.long 0x40021004	@ DATA XREF: sub_8007C6C+6r
off_8007CC0:	.long sub_8007B50+1	@ DATA XREF: sub_8007C6C+3Cr
dword_8007CC4:	.long 0x40005C40	@ DATA XREF: sub_8007A20r
					@ sub_8007A80+6r ...
dword_8007CC8:	.long 0x40005C44	@ DATA XREF: sub_8007B50+2r
					@ sub_8007C6C+34r
@ ---------------------------------------------------------------------------

loc_8007CCC:				@ DATA XREF: ROM:080092D8o
					@ ROM:0800EED8o
		B.W	loc_8007874
@ ---------------------------------------------------------------------------

loc_8007CD0:				@ DATA XREF: ROM:080092CCo
					@ ROM:0800EECCo
		LDR	R1, =0x20001029
		LDRB	R0, [R1]
		ADDS	R0, R0,	#1
		STRB	R0, [R1]
		UXTB	R0, R0
		BX	LR
@ ---------------------------------------------------------------------------
dword_8007CDC:	.long 0x20001029	@ DATA XREF: ROM:loc_8007CD0r

@ =============== S U B	R O U T	I N E =======================================


sub_8007CE0:				@ DATA XREF: ROM:080092D0o
					@ ROM:0800EED0o
		PUSH	{R4-R6,LR}
		LDRB	R1, [R0,#5]
		LDRH	R5, [R0]
		LSLS	R4, R1,	#0x19
		LSRS	R4, R4,	#0x19
		LSLS	R1, R1,	#0x18
		ITE pl
		MOVPL	R6, #0
		MOVMI	R6, #1
		LDRB	R0, [R0,#4]
		MOVS	R1, #0
		CBZ	R0, loc_8007D02
		CMP	R0, #1
		BEQ	loc_8007D08
		CMP	R0, #3
		BEQ	loc_8007D0E
		B	loc_8007D12
@ ---------------------------------------------------------------------------

loc_8007D02:				@ CODE XREF: sub_8007CE0+16j
		MOVS.W	R1, #0x200
		B	loc_8007D12
@ ---------------------------------------------------------------------------

loc_8007D08:				@ CODE XREF: sub_8007CE0+1Aj
		MOVS.W	R1, #0x400
		B	loc_8007D12
@ ---------------------------------------------------------------------------

loc_8007D0E:				@ CODE XREF: sub_8007CE0+1Ej
		MOVS.W	R1, #0x600

loc_8007D12:				@ CODE XREF: sub_8007CE0+20j
					@ sub_8007CE0+26j ...
		CBZ	R6, loc_8007D18
		MOVS	R0, #0x20
		B	loc_8007D1C
@ ---------------------------------------------------------------------------

loc_8007D18:				@ CODE XREF: sub_8007CE0:loc_8007D12j
		MOVS.W	R0, #0x2000

loc_8007D1C:				@ CODE XREF: sub_8007CE0+36j
		LDR	R2, =0x40005C00
		ORRS	R0, R1
		ORRS	R0, R4
		STR.W	R0, [R2,R4,LSL#2]
		MOVS	R0, R5
		BL	sub_800791C
		MOVS	R2, R6
		MOVS	R1, R0
		MOVS	R0, R4
		BL	sub_8007930
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4-R6,LR}
		B	sub_8007970
@ End of function sub_8007CE0

@ ---------------------------------------------------------------------------
		.align 4
dword_8007D44:	.long 0x40005C00	@ DATA XREF: sub_8007CE0:loc_8007D1Cr
@ ---------------------------------------------------------------------------

locret_8007D48:				@ DATA XREF: ROM:080092D4o
					@ ROM:0800EED4o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

loc_8007D4C:				@ DATA XREF: ROM:080092DCo
					@ ROM:0800EEDCo
		CBZ	R0, loc_8007D52
		MOVS	R0, #0x40
		BX	LR
@ ---------------------------------------------------------------------------

loc_8007D52:				@ CODE XREF: ROM:loc_8007D4Cj
		MOVS	R0, #8
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007D58:				@ DATA XREF: ROM:080092FCo
					@ ROM:0800EEFCo
		PUSH	{R4-R6,LR}
		LDR	R4, =0x200001BC
		MOVS	R5, R2
		ADDS.W	R4, R4,	R0,LSL#3
		LDR	R4, [R4,#4]
		CMP	R5, #2
		BCC	loc_8007D76

loc_8007D68:				@ CODE XREF: sub_8007D58+1Cj
		LDRH.W	R6, [R1],#2
		SUBS	R5, R5,	#2
		CMP	R5, #2
		STR.W	R6, [R4],#4
		BCS	loc_8007D68

loc_8007D76:				@ CODE XREF: sub_8007D58+Ej
		CBZ	R5, loc_8007D7C
		LDRB	R1, [R1]
		STR	R1, [R4]

loc_8007D7C:				@ CODE XREF: sub_8007D58:loc_8007D76j
		LDR	R1, =0x2000023C
		ADDS.W	R1, R1,	R0,LSL#3
		LDR	R1, [R1,#4]
		STR	R2, [R1]
		MOVS	R1, #0x30
		POP.W	{R4-R6,LR}
		B	loc_80079E8
@ End of function sub_8007D58

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007D90:	.long 0x200001BC	@ DATA XREF: sub_8007D58+2r
dword_8007D94:	.long 0x2000023C	@ DATA XREF: sub_8007D58:loc_8007D7Cr
@ ---------------------------------------------------------------------------

loc_8007D98:				@ DATA XREF: ROM:080092F8o
					@ ROM:0800EEF8o
		B.W	sub_8008328
@ ---------------------------------------------------------------------------

locret_8007D9C:				@ DATA XREF: ROM:08009300o
					@ ROM:0800EF00o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10

loc_8007DA0:				@ DATA XREF: ROM:080092E0o
					@ ROM:0800EEE0o
		MOVS	R0, #0
		BX	LR
@ ---------------------------------------------------------------------------

locret_8007DA4:				@ DATA XREF: ROM:08009304o
					@ ROM:0800EF04o
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007DA8:				@ CODE XREF: sub_8008494+22p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R4,#7]
		LSLS	R0, R0,	#0x1E
		BPL	locret_8007DC6
		MOVS	R5, #1
		B	loc_8007DBE
@ ---------------------------------------------------------------------------

loc_8007DB6:				@ CODE XREF: sub_8007DA8+1Cj
		BL	sub_8008528
		ADDS	R5, R5,	#1
		UXTB	R5, R5

loc_8007DBE:				@ CODE XREF: sub_8007DA8+Cj
		LDRB	R1, [R4]
		MOVS	R0, R5
		CMP	R0, R1
		BCC	loc_8007DB6

locret_8007DC6:				@ CODE XREF: sub_8007DA8+8j
		POP	{R4,R5,PC}
@ End of function sub_8007DA8

@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_80084D0

loc_8007DC8:				@ CODE XREF: sub_80084D0+4j
		MOVS	R1, R0
		LDR	R0, =0x3FF
		CMP	R1, R0
		BCS	locret_8007DDC
		MOVS.W	R0, #0x200

loc_8007DD4:				@ CODE XREF: sub_80084D0-6F6j
		TST	R1, R0
		BNE	locret_8007DDC
		LSRS	R0, R0,	#1
		BNE	loc_8007DD4

locret_8007DDC:				@ CODE XREF: sub_80084D0-702j
					@ sub_80084D0-6FAj
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_80084D0
@ ---------------------------------------------------------------------------
		.align 0x10
dword_8007DE0:	.long 0x3FF		@ DATA XREF: sub_80084D0-706r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_80084D0

loc_8007DE4:				@ CODE XREF: sub_80084D0+Aj
		MOVS	R1, R0
		MOVS	R0, #0x40

loc_8007DE8:				@ CODE XREF: sub_80084D0-6E2j
		CMP	R1, R0
		BCS	locret_8007DF0
		LSRS	R0, R0,	#1
		BNE	loc_8007DE8

locret_8007DF0:				@ CODE XREF: sub_80084D0-6E6j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_80084D0
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007DF4:				@ CODE XREF: sub_80084D0+Ej
		PUSH	{R4,LR}
		MOVS	R4, R0
		CBZ	R1, loc_8007E0C
		CMP.W	R4, #0x200
		BCC	loc_8007E06
		MOVS.W	R0, #0x200
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8007E06:				@ CODE XREF: sub_8007DF4+Aj
		MOVS	R0, #2
		BL	sub_80085C4

loc_8007E0C:				@ CODE XREF: sub_8007DF4+4j
		CMP	R4, #0x40
		ITT cs
		MOVCS	R0, #0x40
		POPCS	{R4,PC}
		CMP	R4, #0x20
		ITT cs
		MOVCS	R0, #0x20
		POPCS	{R4,PC}
		CMP	R4, #0x10
		ITT cs
		MOVCS	R0, #0x10
		POPCS	{R4,PC}
		CMP	R4, #8
		ITT cs
		MOVCS	R0, #8
		POPCS	{R4,PC}
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_8007DF4


@ =============== S U B	R O U T	I N E =======================================


sub_8007E30:				@ CODE XREF: sub_80082AC+52p
		LDR	R2, =0x20000310
		PUSH	{R4,LR}
		MOVS	R4, R0
		MOVS	R0, #0x28
		MLA.W	R0, R4,	R0, R2
		LDR	R2, [R0,#8]
		ADDS	R2, R2,	R1
		STR	R2, [R0,#8]
		LDR	R2, [R0,#0xC]
		SUBS	R1, R2,	R1
		STR	R1, [R0,#0xC]
		LDR	R1, [R0,#0xC]
		CBZ	R1, loc_8007E50
		LDRB	R0, [R0,#7]
		CBZ	R0, locret_8007E60

loc_8007E50:				@ CODE XREF: sub_8007E30+1Aj
		MOVS	R0, R4
		BL	sub_800859C
		LDR	R1, =0x200004AC
		MOVS	R0, R4
		LDR	R1, [R1]
		LDR	R1, [R1,#0x28]
		BLX	R1

locret_8007E60:				@ CODE XREF: sub_8007E30+1Ej
		POP	{R4,PC}
@ End of function sub_8007E30

@ ---------------------------------------------------------------------------
		.align 4
dword_8007E64:	.long 0x200004AC	@ DATA XREF: sub_8007E30+26r

@ =============== S U B	R O U T	I N E =======================================


sub_8007E68:				@ CODE XREF: sub_8008154+18p
					@ sub_8008178+6p
		PUSH.W	{R4-R11,LR}
		MOV	R8, R0
		MOVS	R4, R2
		LDR	R2, =0x20000310
		MOVS.W	R0, #0xFFFFFFFF
		MOV	R9, R1
		MOVS	R1, #0x28
		MOV	R10, R0
		MLA.W	R7, R8,	R1, R2
		MOVS	R5, R3
		MOV	R6, R10
		LDRB	R0, [R7,#0x10]
		CMP	R0, #1
		BNE	loc_8007E8E
		MOV	R0, R6
		B	locret_8007EFE
@ ---------------------------------------------------------------------------

loc_8007E8E:				@ CODE XREF: sub_8007E68+20j
		BL	sub_8008588
		LDR	R0, =0x20000450
		MOV	R11, R0
		LDRB.W	R0, [R11,#7]
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		BNE	loc_8007EF8
		CBZ	R4, loc_8007EBC
		MOVS	R2, R4
		MOV	R1, R9
		MOVS	R0, R7
		ADDS	R0, #0x18
		BL	sub_80080A4
		MOVS	R6, R0
		SUBS	R4, R4,	R6
		ADDS.W	R9, R6,	R9
		CBNZ	R4, loc_8007EC0
		B	loc_8007EF8
@ ---------------------------------------------------------------------------

loc_8007EBC:				@ CODE XREF: sub_8007E68+3Aj
		LDR	R0, [R7,#0x20]
		CBNZ	R0, loc_8007EF8

loc_8007EC0:				@ CODE XREF: sub_8007E68+50j
		STR.W	R9, [R7,#8]
		STR	R4, [R7,#0xC]
		LDR.W	R1, [R11,#0x5C]
		MOV	R0, R8
		LDR	R1, [R1,#0x2C]
		BLX	R1
		CBZ	R5, loc_8007EF6
		LDR	R1, [SP,#0x24]
		MOV	R0, R8
		CBZ	R1, loc_8007EDE
		BL	sub_80085B4
		B	loc_8007EE2
@ ---------------------------------------------------------------------------

loc_8007EDE:				@ CODE XREF: sub_8007E68+6Ej
		BL	sub_80085A8

loc_8007EE2:				@ CODE XREF: sub_8007E68+74j
		LDRB	R0, [R7,#7]
		CBZ	R0, loc_8007EEE
		LDR	R1, [R7,#0xC]
		ADDS	R0, R6,	R4
		SUBS	R6, R0,	R1
		B	loc_8007EF8
@ ---------------------------------------------------------------------------

loc_8007EEE:				@ CODE XREF: sub_8007E68+7Cj
		LDR	R0, [R7,#0xC]
		CBZ	R0, loc_8007EF6
		MOV	R6, R10
		B	loc_8007EF8
@ ---------------------------------------------------------------------------

loc_8007EF6:				@ CODE XREF: sub_8007E68+68j
					@ sub_8007E68+88j
		ADDS	R6, R6,	R4

loc_8007EF8:				@ CODE XREF: sub_8007E68+38j
					@ sub_8007E68+52j ...
		BL	sub_8008574
		MOVS	R0, R6

locret_8007EFE:				@ CODE XREF: sub_8007E68+24j
		POP.W	{R4-R11,PC}
@ End of function sub_8007E68

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007F04:				@ CODE XREF: sub_8008220+28p
					@ sub_8008220+3Ap ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R0, #0x28
		MOVS	R5, R1
		LDR	R1, =0x20000310
		MOVS	R6, R2
		MLA.W	R7, R4,	R0, R1
		BL	sub_8008588
		LDR	R0, [R7,#8]
		CBZ	R0, loc_8007F2E
		CBZ	R6, loc_8007F28
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_80085B4
		B	loc_8007F2E
@ ---------------------------------------------------------------------------

loc_8007F28:				@ CODE XREF: sub_8007F04+18j
		MOVS	R0, R4
		BL	sub_80085A8

loc_8007F2E:				@ CODE XREF: sub_8007F04+16j
					@ sub_8007F04+22j
		BL	sub_8008574
		LDR	R0, [R7,#0xC]
		SUBS	R0, R5,	R0
		POP	{R4-R7,PC}
@ End of function sub_8007F04


@ =============== S U B	R O U T	I N E =======================================


sub_8007F38:				@ CODE XREF: sub_8006704+Ep
					@ sub_8006704+22p
		PUSH.W	{R0,R4-R11,LR}
		LDR	R5, =0x20000450
		STR	R3, [SP,#0]
		MOVS	R4, R0
		LDR	R0, [R5,#0x5C]
		MOV	R8, R1
		MOV	R9, R2
		MOV	R10, R0
		MOVS	R0, #0
		MOV	R11, R0
		LDRB	R0, [R5]
		CMP	R0, #8
		BCS	loc_8007FC4
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R6, R0,	R1, R2
		LDR.W	R2, [R10,#4]
		MOV	R1, R8
		MOVS	R0, R4
		BLX	R2
		MOVS	R7, R0
		BEQ	loc_8007FC4
		CMP	R0, #0xFF
		BEQ	loc_8007FC4
		MOVS	R2, #0x28
		MOVS	R1, #0
		MOVS	R0, R6
		BL	sub_8008F68
		ORRS.W	R0, R7,	R4,LSL#7
		STRB	R0, [R6,#5]
		STRB.W	R8, [R6,#4]
		LDR.W	R1, [R10,#0x14]
		MOVS	R0, R7
		BLX	R1
		MOVS	R7, R0
		CBNZ	R4, loc_8007F96
		LDR	R0, [SP,#0x28]
		CMP	R0, R7
		IT cc
		MOVCC	R7, R0

loc_8007F96:				@ CODE XREF: sub_8007F38+54j
		BL	sub_80084E0
		UXTB	R2, R0
		MOV	R1, R8
		MOVS	R0, R7
		BL	sub_80084D0
		MOVS	R4, R0
		ITT eq
		MOVEQ	R0, #2
		BLEQ	sub_80085C4
		STRH	R4, [R6]
		LDR	R0, [SP,#0]
		STR	R0, [R6,#0x18]
		LDR	R0, [SP,#0x28]
		STR	R0, [R6,#0x1C]
		STRH.W	R9, [R6,#2]
		LDRB	R0, [R5]
		MOV	R11, R0
		ADDS	R0, R0,	#1
		STRB	R0, [R5]

loc_8007FC4:				@ CODE XREF: sub_8007F38+1Aj
					@ sub_8007F38+30j ...
		MOV	R0, R11
		POP.W	{R1,R4-R11,PC}
@ End of function sub_8007F38

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8007FCC:				@ CODE XREF: sub_8008B78+66p
					@ sub_8008C04:loc_8008C50p ...
		LDR	R3, =0x20000310
		PUSH	{LR}
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_8007FD8
@ ---------------------------------------------------------------------------

loc_8007FD6:				@ CODE XREF: sub_8007FCC+1Ej
		ADDS	R0, R0,	#1

loc_8007FD8:				@ CODE XREF: sub_8007FCC+8j
		LDR	R2, =0x20000450
		LDRB	R2, [R2]
		CMP	R0, R2
		BGE	loc_8007FF0
		MOVS	R2, #0x28
		MLA.W	R2, R0,	R2, R3
		LDRB	R2, [R2,#5]
		CMP	R2, R1
		BNE	loc_8007FD6
		UXTB	R0, R0
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_8007FF0:				@ CODE XREF: sub_8007FCC+12j
		MOVS	R0, #3
		BL	sub_80085C4
		MOVS	R0, #0xFF
		POP	{PC}
@ End of function sub_8007FCC

@ ---------------------------------------------------------------------------
		.align 4
dword_8007FFC:	.long 0x20000450	@ DATA XREF: sub_8007FCC:loc_8007FD8r

@ =============== S U B	R O U T	I N E =======================================


sub_8008000:				@ CODE XREF: sub_8007BF4+8p
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDRB	R0, [R0,#5]
		BX	LR
@ End of function sub_8008000


@ =============== S U B	R O U T	I N E =======================================


sub_800800C:				@ CODE XREF: sub_8008C98+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		LSRS	R1, R0,	#1
		MOVS	R0, #1
		ANDS	R0, R1
		BX	LR
@ End of function sub_800800C


@ =============== S U B	R O U T	I N E =======================================


sub_8008018:				@ CODE XREF: sub_8008078+Ap
					@ sub_8008440+Ap
		PUSH	{R4-R6,LR}
		LDR	R4, =0x20000450
		MOVS	R6, #1
		LDR	R5, [R4,#0x5C]
		B	loc_8008034
@ ---------------------------------------------------------------------------

loc_8008022:				@ CODE XREF: sub_8008018+20j
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R0, R6,	R0, R1
		LDR	R1, [R5,#8]
		ADDS	R6, R6,	#1
		BLX	R1
		LDR	R0, [R5,#0xC]
		BLX	R0

loc_8008034:				@ CODE XREF: sub_8008018+8j
		LDRB	R0, [R4]
		CMP	R6, R0
		BLT	loc_8008022
		POP	{R4-R6,PC}
@ End of function sub_8008018


@ =============== S U B	R O U T	I N E =======================================


sub_800803C:				@ CODE XREF: sub_80067D8+6p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDR	R5, =0x20000310
		MOVS	R2, #0x68
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_8008F68
		MOVS	R0, #1
		STRB	R0, [R4]
		MOVS.W	R2, #0x140
		MOVS	R1, #0
		MOVS	R0, R5
		BL	sub_8008F68
		BL	sub_8007880
		LDR	R1, [R4,#0x5C]
		MOVS	R0, #0
		LDR	R1, [R1,#0x14]
		BLX	R1
		STRH	R0, [R5]
		POP.W	{R4,R5,LR}
		B.W	sub_800855C
@ End of function sub_800803C

@ ---------------------------------------------------------------------------
		.align 4
dword_8008074:	.long 0x20000310	@ DATA XREF: sub_8007E30r
					@ sub_8007E68+8r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008078:				@ CODE XREF: sub_80067D8+Ep
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDR	R5, [R4,#0x5C]
		LDR	R0, [R5]
		BLX	R0
		BL	sub_8008018
		LDR	R2, [R5,#0x40]
		MOVS	R0, R2
		BEQ	loc_8008094
		MOVS	R1, R4
		ADDS	R1, #0x60
		MOVS	R0, #1
		BLX	R2

loc_8008094:				@ CODE XREF: sub_8008078+12j
		MOVS	R0, #0x10
		STRB	R0, [R4,#7]
		LDR	R0, [R5,#0x10]
		POP.W	{R4,R5,LR}
		BX	R0
@ End of function sub_8008078

@ ---------------------------------------------------------------------------
dword_80080A0:	.long 0x20000450	@ DATA XREF: sub_8007DA8+2r
					@ sub_8007E68+2Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_80080A4:				@ CODE XREF: sub_8007E68+44p
		PUSH.W	{R4-R9,LR}
		MOV	R8, R1
		MOVS	R4, R0
		MOVS	R5, R2
		MOVS	R0, #0
		MOV	R9, R0
		MOVS	R6, #0
		B	loc_80080F4
@ ---------------------------------------------------------------------------

loc_80080B6:				@ CODE XREF: sub_80080A4+56j
		LDR	R0, [R4,#0xC]
		LDR	R2, [R4,#4]
		ADDS	R1, R0,	R1
		CMP	R2, R1
		IT cc
		MOVCC	R1, R2
		SUBS	R7, R1,	R0
		CMP	R7, R5
		IT cs
		MOVCS	R7, R5
		LDR	R1, [R4]
		MOVS	R2, R7
		SUBS	R5, R5,	R7
		ADDS	R1, R1,	R0
		MOV	R0, R8
		BL	sub_8008F50
		LDR	R0, [R4,#8]
		ADDS	R6, R6,	R7
		ADDS.W	R8, R7,	R8
		SUBS	R0, R0,	R7
		STR	R0, [R4,#8]
		LDR	R0, [R4,#0xC]
		ADDS	R0, R0,	R7
		STR	R0, [R4,#0xC]
		LDR	R1, [R4,#4]
		CMP	R0, R1
		IT eq
		STREQ.W	R9, [R4,#0xC]

loc_80080F4:				@ CODE XREF: sub_80080A4+10j
		LDR	R1, [R4,#8]
		CBZ	R5, loc_80080FC
		CMP	R1, #0
		BNE	loc_80080B6

loc_80080FC:				@ CODE XREF: sub_80080A4+52j
		CBNZ	R1, loc_8008102
		STR.W	R9, [R4,#0xC]

loc_8008102:				@ CODE XREF: sub_80080A4:loc_80080FCj
		MOVS	R0, R6
		POP.W	{R4-R9,PC}
@ End of function sub_80080A4


@ =============== S U B	R O U T	I N E =======================================


sub_8008108:				@ CODE XREF: sub_80082AC+64p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		B	loc_8008142
@ ---------------------------------------------------------------------------

loc_8008112:				@ CODE XREF: sub_8008108+42j
		LDR	R2, [R4,#0xC]
		ADDS	R0, R2,	R0
		CMP	R0, R1
		IT cs
		SUBCS	R0, R0,	R1
		ADDS	R2, R0,	R6
		CMP	R1, R2
		IT cc
		MOVCC	R2, R1
		SUBS	R7, R2,	R0
		CMP	R7, R6
		IT cs
		MOVCS	R7, R6
		LDR	R3, [R4]
		MOVS	R2, R7
		MOVS	R1, R5
		ADDS	R0, R3,	R0
		BL	sub_8008F50
		LDR	R0, [R4,#8]
		SUBS	R6, R6,	R7
		ADDS	R5, R5,	R7
		ADDS	R0, R0,	R7
		STR	R0, [R4,#8]

loc_8008142:				@ CODE XREF: sub_8008108+8j
		CBZ	R6, locret_8008152
		LDR	R0, [R4,#8]
		LDR	R1, [R4,#4]
		SUBS	R2, R1,	R0
		BNE	loc_8008112
		MOVS	R0, #1
		BL	sub_80085C4

locret_8008152:				@ CODE XREF: sub_8008108:loc_8008142j
		POP	{R4-R7,PC}
@ End of function sub_8008108


@ =============== S U B	R O U T	I N E =======================================


sub_8008154:				@ CODE XREF: sub_8007814+Aj
		PUSH	{R4,R5,LR}
		LDR	R5, =0x20000457
		MOVS	R4, R0
		MOVS	R0, #0
		LDRB	R5, [R5]
		LSLS	R5, R5,	#0x1E
		LSRS	R5, R5,	#0x1E
		CMP	R5, #2
		BNE	locret_8008172
		PUSH	{R3}
		MOVS	R0, R4
		MOVS	R3, #1
		BL	sub_8007E68
		ADD	SP, SP,	#4

locret_8008172:				@ CODE XREF: sub_8008154+10j
		POP	{R4,R5,PC}
@ End of function sub_8008154

@ ---------------------------------------------------------------------------
dword_8008174:	.long 0x20000457	@ DATA XREF: sub_800800Cr
					@ sub_8008154+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8008178:				@ CODE XREF: sub_80069B8+E0Cj
		PUSH	{LR}
		MOVS	R3, #0
		PUSH	{R3}
		BL	sub_8007E68
		POP	{R1,PC}
@ End of function sub_8008178


@ =============== S U B	R O U T	I N E =======================================


sub_8008184:				@ CODE XREF: sub_8008ADCj
		LDR	R3, =0x20000310
		STR	R0, [R3,#8]
		STR	R1, [R3,#0xC]
		LDR	R1, =0x200004AC
		STRB	R2, [R3,#6]
		MOVS	R0, #0
		LDR	R1, [R1]
		LDR	R1, [R1,#0x30]
		BX	R1
@ End of function sub_8008184

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008198:				@ CODE XREF: sub_80077C8+Aj
					@ sub_8008220+18p ...
		PUSH.W	{R4-R9,LR}
		MOVS	R4, R0
		LDR	R0, =0x20000450
		MOVS	R5, R2
		MOV	R8, R1
		MOVS	R7, R3
		MOV	R9, R0
		CBZ	R4, loc_80081B6
		LDRB.W	R0, [R9,#7]
		LSLS	R0, R0,	#0x1E
		BMI	loc_80081B6

loc_80081B2:				@ CODE XREF: sub_8008198+2Aj
		MOVS	R0, #0
		B	locret_800821A
@ ---------------------------------------------------------------------------

loc_80081B6:				@ CODE XREF: sub_8008198+10j
					@ sub_8008198+18j
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R6, R4,	R0, R1
		LDRB	R0, [R6,#0x10]
		CMP	R0, #0
		BNE	loc_80081B2
		LDRB	R0, [R6,#4]
		CMP	R0, #2
		BNE	loc_80081D8
		LDRH	R0, [R6]
		SUBS	R0, R0,	#1
		ANDS	R0, R5
		BNE	loc_80081D6
		LSLS	R0, R5,	#0x15
		BNE	loc_80081D8

loc_80081D6:				@ CODE XREF: sub_8008198+38j
		MOVS	R7, #0

loc_80081D8:				@ CODE XREF: sub_8008198+30j
					@ sub_8008198+3Cj
		BL	sub_8008588
		LDR	R0, [R6,#8]
		CBZ	R0, loc_80081F8
		LDR	R1, [R6,#0xC]
		ADDS	R0, R0,	R1
		CMP	R0, R8
		BNE	loc_80081F2
		LDR	R0, [R6,#0xC]
		ADDS	R0, R0,	R5
		STR	R0, [R6,#0xC]
		STRB	R7, [R6,#6]
		B	loc_800820A
@ ---------------------------------------------------------------------------

loc_80081F2:				@ CODE XREF: sub_8008198+4Ej
		MOVS	R0, R4
		BL	sub_80085A8

loc_80081F8:				@ CODE XREF: sub_8008198+46j
		STR.W	R8, [R6,#8]
		STR	R5, [R6,#0xC]
		STRB	R7, [R6,#6]
		LDR.W	R1, [R9,#0x5C]
		MOVS	R0, R4
		LDR	R1, [R1,#0x30]
		BLX	R1

loc_800820A:				@ CODE XREF: sub_8008198+58j
		BL	sub_8008574
		LDR	R0, [R6,#0xC]
		SUBS	R0, R5,	R0
		BNE	locret_800821A
		LDRB	R1, [R6,#6]
		CBZ	R1, locret_800821A
		MOVS	R0, #1

locret_800821A:				@ CODE XREF: sub_8008198+1Cj
					@ sub_8008198+7Aj ...
		POP.W	{R4-R9,PC}
@ End of function sub_8008198

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008220:				@ CODE XREF: sub_80077EC+Aj
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20000450
		MOVS	R4, R0
		MOVS	R5, R2
		LDRB	R2, [R6,#7]
		MOVS	R0, #0
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		CMP	R2, #2
		BNE	locret_8008260
		MOVS	R2, R5
		MOVS	R0, R4
		BL	sub_8008198
		LDRB.W	R2, [R6,#0x60]!
		SUBS	R1, R5,	R0
		CBNZ	R2, loc_8008250
		MOVS	R5, R0
		MOVS	R0, R4
		BL	sub_8007F04
		ADDS	R0, R5,	R0
		POP	{R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_8008250:				@ CODE XREF: sub_8008220+22j
		CMP	R1, #1
		BLT	locret_8008260
		MOVS	R5, R0
		MOVS	R2, #0
		MOVS	R0, R4
		BL	sub_8007F04
		ADDS	R0, R5,	R0

locret_8008260:				@ CODE XREF: sub_8008220+12j
					@ sub_8008220+32j
		POP	{R4-R6,PC}
@ End of function sub_8008220

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008264:				@ CODE XREF: sub_80077FC+10p
		PUSH	{R4-R7,LR}
		LDR	R7, =0x20000450
		LDR	R6, [SP,#0x14]
		MOVS	R5, R2
		LDRB	R2, [R7,#7]
		MOVS	R4, R0
		MOVS	R0, #0
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		CMP	R2, #2
		BNE	locret_80082A8
		MOVS	R2, R5
		MOVS	R0, R4
		BL	sub_8008198
		LDRB.W	R2, [R7,#0x60]!
		SUBS	R1, R5,	R0
		CBNZ	R2, loc_8008298
		MOVS	R5, R0
		MOVS	R2, R6
		MOVS	R0, R4
		BL	sub_8007F04
		ADDS	R0, R5,	R0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8008298:				@ CODE XREF: sub_8008264+24j
		CMP	R1, #1
		BLT	locret_80082A8
		MOVS	R5, R0
		MOVS	R2, R6
		MOVS	R0, R4
		BL	sub_8007F04
		ADDS	R0, R5,	R0

locret_80082A8:				@ CODE XREF: sub_8008264+14j
					@ sub_8008264+36j
		POP	{R4-R7,PC}
@ End of function sub_8008264

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80082AC:				@ CODE XREF: sub_8007A9C+4Cp
					@ sub_8007AF0+38p
		PUSH.W	{R4-R9,LR}
		MOVS	R4, R1
		MOVS	R1, #0x28
		MOVS	R5, R2
		LDR	R2, =0x20000310
		MOV	R8, R0
		MLA.W	R6, R0,	R1, R2
		LDR	R0, =0x20000450
		MOV	R9, R0
		MOV	R0, R8
		CBNZ	R0, loc_80082D6
		LDR.W	R2, [R9,#0x58]
		MOVS	R0, R2
		BEQ	locret_800831E
		MOVS	R1, R5
		MOVS	R0, R4
		BLX	R2
		B	locret_800831E
@ ---------------------------------------------------------------------------

loc_80082D6:				@ CODE XREF: sub_80082AC+18j
		LDR	R2, [R6,#0x14]
		MOVS	R0, R2
		ITTT ne
		MOVNE	R1, R5
		MOVNE	R0, R4
		BLXNE	R2
		LDR	R0, [R6,#8]
		CBZ	R0, loc_8008306
		LDR	R1, [R6,#0xC]
		CMP	R5, R1
		ITE cs
		LDRCS	R7, [R6,#0xC]
		MOVCC	R7, R5
		CBZ	R7, loc_8008306
		MOVS	R2, R7
		MOVS	R1, R4
		BL	sub_8008F50
		MOVS	R1, R7
		MOV	R0, R8
		BL	sub_8007E30
		SUBS	R5, R5,	R7
		ADDS	R4, R4,	R7

loc_8008306:				@ CODE XREF: sub_80082AC+38j
					@ sub_80082AC+44j
		CBZ	R5, locret_800831E
		MOVS	R2, R5
		MOVS	R1, R4
		ADDS	R6, #0x18
		MOVS	R0, R6
		BL	sub_8008108
		LDR.W	R1, [R9,#0x5C]
		MOV	R0, R8
		LDR	R1, [R1,#0x28]
		BLX	R1

locret_800831E:				@ CODE XREF: sub_80082AC+20j
					@ sub_80082AC+28j ...
		POP.W	{R4-R9,PC}
@ End of function sub_80082AC

@ ---------------------------------------------------------------------------
		.align 4
dword_8008324:	.long 0x20000450	@ DATA XREF: sub_8008198+6r
					@ sub_8008220+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008328:				@ CODE XREF: ROM:loc_8007D98j
					@ sub_8008390+1Ep
		LDR	R1, =0x20000310
		PUSH	{R4-R7,LR}
		LDR	R6, =0x200004AC
		MOVS	R4, R0
		MOVS	R0, #0x28
		MLA.W	R5, R4,	R0, R1
		CBZ	R4, loc_8008348
		LDRB	R0, [R5,#5]
		LSLS	R0, R0,	#0x18
		ITT pl
		MOVPL	R0, #0xFF
		BLPL	sub_80085C4
		LDRB	R0, [R6,#4]
		CBZ	R0, loc_8008358

loc_8008348:				@ CODE XREF: sub_8008328+Ej
					@ sub_8008328+38j
		LDR	R1, [R5,#8]
		CBZ	R1, locret_800838C
		LDRH	R7, [R5]
		LDR	R0, [R5,#0xC]
		CMP	R0, R7
		BCS	loc_8008362
		LDR	R7, [R5,#0xC]
		B	loc_8008362
@ ---------------------------------------------------------------------------

loc_8008358:				@ CODE XREF: sub_8008328+1Ej
		LDRB	R0, [R5,#0x14]
		CBNZ	R0, locret_800838C
		MOVS	R0, #1
		STRB	R0, [R5,#0x14]
		B	loc_8008348
@ ---------------------------------------------------------------------------

loc_8008362:				@ CODE XREF: sub_8008328+2Aj
					@ sub_8008328+2Ej
		LDR	R3, [R6]
		MOVS	R0, R4
		MOVS	R2, R7
		LDR	R3, [R3,#0x34]
		BLX	R3
		LDR	R0, [R5,#0xC]
		SUBS	R0, R0,	R7
		STR	R0, [R5,#0xC]
		LDR	R0, [R5,#8]
		ADDS	R0, R0,	R7
		STR	R0, [R5,#8]
		LDR	R0, [R5,#0xC]
		CBNZ	R0, locret_800838C
		LDRH	R1, [R5]
		CMP	R7, R1
		BNE	loc_800838A
		LDRB	R1, [R5,#6]
		CBZ	R1, loc_800838A
		STRB	R0, [R5,#6]
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800838A:				@ CODE XREF: sub_8008328+58j
					@ sub_8008328+5Cj
		STR	R0, [R5,#8]

locret_800838C:				@ CODE XREF: sub_8008328+22j
					@ sub_8008328+32j ...
		POP	{R4-R7,PC}
@ End of function sub_8008328

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008390:				@ CODE XREF: sub_8007B50+7Ep
		LDR	R1, =0x20000310
		PUSH	{R4-R7,LR}
		LDR	R6, =0x200004AC
		MOVS	R4, R0
		MOVS	R0, #0x28
		MOVS	R7, #0
		MLA.W	R5, R4,	R0, R1
		CBZ	R4, loc_80083A8
		LDRB	R0, [R6,#4]
		CBNZ	R0, loc_80083A8
		STRB	R7, [R5,#0x14]

loc_80083A8:				@ CODE XREF: sub_8008390+10j
					@ sub_8008390+14j
		LDR	R0, [R5,#8]
		CBZ	R0, loc_80083B6
		MOVS	R0, R4
		BL	sub_8008328
		LDRB	R0, [R6,#4]
		CBZ	R0, locret_80083E4

loc_80083B6:				@ CODE XREF: sub_8008390+1Aj
		LDRB	R0, [R6,#4]
		CBNZ	R0, loc_80083C0
		LDR	R0, [R5,#0xC]
		CBNZ	R0, loc_80083C0
		STRB	R7, [R5,#6]

loc_80083C0:				@ CODE XREF: sub_8008390+28j
					@ sub_8008390+2Cj
		LDR	R0, [R5,#8]
		CBNZ	R0, loc_80083CC
		LDR	R1, [R6]
		MOVS	R0, R4
		LDR	R1, [R1,#0x38]
		BLX	R1

loc_80083CC:				@ CODE XREF: sub_8008390+32j
		CBZ	R4, loc_80083E0
		LDR	R0, [R5,#8]
		CBNZ	R0, locret_80083E4
		LDRB	R0, [R5,#6]
		CBNZ	R0, locret_80083E4
		MOVS	R0, R4
		POP.W	{R4-R7,LR}
		B.W	sub_800859C
@ ---------------------------------------------------------------------------

loc_80083E0:				@ CODE XREF: sub_8008390:loc_80083CCj
		BL	sub_8008D6C

locret_80083E4:				@ CODE XREF: sub_8008390+24j
					@ sub_8008390+40j ...
		POP	{R4-R7,PC}
@ End of function sub_8008390

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80083E8:				@ CODE XREF: sub_8008C04+78p
					@ sub_8008CFC+2Ap
		LDR	R3, =0x20000310
		MOVS	R2, #0x28
		MLA.W	R2, R0,	R2, R3
		STRB	R1, [R2,#0x10]
		LDR	R2, =0x200004AC
		LDR	R2, [R2]
		LDR	R2, [R2,#0x20]
		BX	R2
@ End of function sub_80083E8

@ ---------------------------------------------------------------------------
		.align 4
dword_80083FC:	.long 0x20000310	@ DATA XREF: sub_8008184r
					@ sub_8008198:loc_80081B6r ...
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_8007880

loc_8008400:				@ CODE XREF: sub_8007880+2j
		LDR	R1, =0x200004AC
		STR	R0, [R1]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8007880
@ ---------------------------------------------------------------------------
		.align 4
dword_8008408:	.long 0x200004AC	@ DATA XREF: sub_8008184+6r
					@ sub_8008328+4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800840C:				@ CODE XREF: sub_80067D8+24p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3
		MOVS	R2, #0x10
		MOVS	R1, #0
		BL	sub_8008F68
		LDR	R0, =0x200004B8
		STR	R5, [R4,#4]
		STR	R6, [R4,#8]
		STR	R7, [R4,#0xC]
		LDR	R1, [R0]
		MOVS	R2, R1
		B	loc_800842E
@ ---------------------------------------------------------------------------

loc_800842C:				@ CODE XREF: sub_800840C+26j
		LDR	R2, [R2]

loc_800842E:				@ CODE XREF: sub_800840C+1Ej
		CBZ	R2, loc_8008438
		CMP	R2, R4
		BNE	loc_800842C
		MOVS	R0, #1
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8008438:				@ CODE XREF: sub_800840C:loc_800842Ej
		STR	R1, [R4]
		STR	R4, [R0]
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ End of function sub_800840C


@ =============== S U B	R O U T	I N E =======================================


sub_8008440:				@ CODE XREF: sub_8007A20+58p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		MOVS	R5, #0
		LDRB	R0, [R4,#7]
		STRB	R5, [R4,#3]
		BL	sub_8008018
		LDR	R2, =0x20000310
		MOVS	R0, #1
		B	loc_800845E
@ ---------------------------------------------------------------------------

loc_8008454:				@ CODE XREF: sub_8008440+22j
		MOVS	R1, #0x28
		MLA.W	R1, R0,	R1, R2
		ADDS	R0, R0,	#1
		STRB	R5, [R1,#0x10]

loc_800845E:				@ CODE XREF: sub_8008440+12j
		LDRB	R1, [R4]
		CMP	R0, R1
		BLT	loc_8008454
		LDRB	R0, [R4,#7]
		MOVS	R1, #0x10
		ANDS	R1, R0
		ORRS.W	R0, R1,	#8
		POP.W	{R4,R5,LR}
		B	sub_8008494
@ End of function sub_8008440

@ ---------------------------------------------------------------------------
dword_8008474:	.long 0x20000450	@ DATA XREF: sub_8008440+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8008478:				@ CODE XREF: sub_800679C+2p
					@ sub_80069D8+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		BX	LR
@ End of function sub_8008478

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008480:				@ CODE XREF: sub_8007A80+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		ORRS.W	R0, R0,	#1
		B	sub_8008494
@ End of function sub_8008480

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800848C:				@ CODE XREF: sub_8007B50+2Ep
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		ANDS.W	R0, R0,	#0xFE
@ End of function sub_800848C


@ =============== S U B	R O U T	I N E =======================================


sub_8008494:				@ CODE XREF: sub_8008440+32p
					@ sub_8008480+8j ...
		LDR	R1, =0x20000450
		PUSH	{R4,LR}
		LDRB	R2, [R1,#7]
		CMP	R2, R0
		BEQ	locret_80084BA
		STRB	R0, [R1,#7]
		LDR	R0, =0x200004B8
		LDR	R4, [R0]
		B	loc_80084B2
@ ---------------------------------------------------------------------------

loc_80084A6:				@ CODE XREF: sub_8008494+20j
		LDR	R1, [R4,#4]
		MOVS	R0, R1
		ITT ne
		LDRNE	R0, [R4,#8]
		BLXNE	R1
		LDR	R4, [R4]

loc_80084B2:				@ CODE XREF: sub_8008494+10j
		CMP	R4, #0
		BNE	loc_80084A6
		BL	sub_8007DA8

locret_80084BA:				@ CODE XREF: sub_8008494+8j
		POP	{R4,PC}
@ End of function sub_8008494

@ ---------------------------------------------------------------------------
dword_80084BC:	.long 0x20000457	@ DATA XREF: sub_8008478r sub_8008480r ...
dword_80084C0:	.long 0x200004B8	@ DATA XREF: sub_800840C+12r
					@ sub_8008494+Cr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_80077D8

loc_80084C4:				@ CODE XREF: sub_80077D8+4j
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDR	R0, [R0,#0x20]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_80077D8

@ =============== S U B	R O U T	I N E =======================================


sub_80084D0:				@ CODE XREF: sub_8007F38+68p
					@ sub_80087CC:loc_80088A2p

@ FUNCTION CHUNK AT 08007DC8 SIZE 00000016 BYTES
@ FUNCTION CHUNK AT 08007DE4 SIZE 0000000E BYTES

		CMP	R1, #1
		BNE	loc_80084D6
		B	loc_8007DC8
@ ---------------------------------------------------------------------------

loc_80084D6:				@ CODE XREF: sub_80084D0+2j
		CMP	R1, #3
		BNE	loc_80084DC
		B	loc_8007DE4
@ ---------------------------------------------------------------------------

loc_80084DC:				@ CODE XREF: sub_80084D0+8j
		MOVS	R1, R2
		B	sub_8007DF4
@ End of function sub_80084D0


@ =============== S U B	R O U T	I N E =======================================


sub_80084E0:				@ CODE XREF: sub_8007F38:loc_8007F96p
					@ sub_8008B00:loc_8008B3Cp ...
		LDR	R0, =0x200004AC
		PUSH	{LR}
		LDR	R0, [R0]
		LDR	R0, [R0,#0x18]
		BLX	R0
		MOVS	R1, R0
		MOVS	R0, #2
		ANDS	R0, R1
		POP	{PC}
@ End of function sub_80084E0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80084F4:				@ CODE XREF: sub_80085F4+16p
					@ sub_8008680+90p ...
		LDR	R0, =0x200004AC
		PUSH	{LR}
		LDR	R0, [R0]
		LDR	R0, [R0,#0x18]
		BLX	R0
		MOVS	R1, R0
		MOVS	R0, #1
		ANDS	R0, R1
		POP	{PC}
@ End of function sub_80084F4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008508:				@ CODE XREF: sub_8007824+4p
		LDR	R0, =0x20000450
		PUSH	{R4,LR}
		LDRB	R4, [R0,#1]
		ADDS	R1, R4,	#1
		STRB	R1, [R0,#1]
		UXTB	R1, R1
		CMP	R1, #5
		ITT cs
		MOVCS	R0, #7
		BLCS	sub_80085C4
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_8008508

@ ---------------------------------------------------------------------------
		.align 4
dword_8008524:	.long 0x20000450	@ DATA XREF: sub_8008494r sub_8008508r

@ =============== S U B	R O U T	I N E =======================================


sub_8008528:				@ CODE XREF: sub_8007DA8:loc_8007DB6p
					@ sub_8008CFC+36p
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R1, R0,	R1, R2
		MOVS	R2, #0
		STRB	R2, [R1,#0x10]
		STR	R2, [R1,#8]
		STR	R2, [R1,#0x20]
		STR	R2, [R1,#0x24]
		LDRB	R3, [R1,#5]
		LSLS	R3, R3,	#0x18
		IT mi
		STRBMI	R2, [R1,#0x14]
		B.W	sub_800859C
@ End of function sub_8008528

@ ---------------------------------------------------------------------------
		.align 4
dword_8008548:	.long 0x200004AC	@ DATA XREF: sub_80084E0r sub_80084F4r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_8007864

loc_800854C:				@ CODE XREF: sub_8007864+6j
		LDR	R3, =0x20000310
		MOVS	R2, #0x28
		MLA.W	R0, R0,	R2, R3
		STR	R1, [R0,#0x14]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_8007864
@ ---------------------------------------------------------------------------
dword_8008558:	.long 0x20000310	@ DATA XREF: sub_8008440+Er
					@ sub_80077D8:loc_80084C4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800855C:				@ CODE XREF: sub_800803C+32p
		PUSH	{R4,LR}
		MOVS	R4, #0

loc_8008560:				@ CODE XREF: sub_800855C+12j
		LDR	R0, =0x200004BC
		ADDS.W	R0, R0,	R4,LSL#3
		BL	sub_8006F24
		ADDS	R4, R4,	#1
		CMP	R4, #8
		BCC	loc_8008560
		POP	{R4,PC}
@ End of function sub_800855C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008574:				@ CODE XREF: sub_8007C6C+4Ap
					@ sub_8007E68:loc_8007EF8p ...
		LDR	R0, =0x200001A0
		PUSH	{LR}
		LDRB	R1, [R0,#1]
		SUBS	R1, R1,	#1
		STRB	R1, [R0,#1]
		LSLS	R1, R1,	#0x18
		IT eq
		BLEQ	sub_800712A
		POP	{PC}
@ End of function sub_8008574


@ =============== S U B	R O U T	I N E =======================================


sub_8008588:				@ CODE XREF: sub_8007C6C+2p
					@ sub_8007E68:loc_8007E8Ep ...
		PUSH	{LR}
		BL	sub_8007136
		LDR	R0, =0x200001A0
		LDRB	R1, [R0,#1]
		ADDS	R1, R1,	#1
		STRB	R1, [R0,#1]
		POP	{PC}
@ End of function sub_8008588

@ ---------------------------------------------------------------------------
dword_8008598:	.long 0x200001A0	@ DATA XREF: sub_8008574r
					@ sub_8008588+6r

@ =============== S U B	R O U T	I N E =======================================


sub_800859C:				@ CODE XREF: sub_8007E30+22p
					@ sub_8008390+4Cp ...
		LDR	R1, =0x200004BC
		ADDS.W	R0, R1,	R0,LSL#3
		B.W	sub_8006F2C
@ End of function sub_800859C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80085A8:				@ CODE XREF: sub_8007E68:loc_8007EDEp
					@ sub_8007F04+26p ...
		LDR	R1, =0x200004BC
		ADDS.W	R0, R1,	R0,LSL#3
		B.W	sub_8006FC8
@ End of function sub_80085A8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80085B4:				@ CODE XREF: sub_8007E68+70p
					@ sub_8007F04+1Ep
		LDR	R2, =0x200004BC
		ADDS	R1, R1,	#1
		ADDS.W	R0, R2,	R0,LSL#3
		B.W	sub_8006FF4
@ End of function sub_80085B4

@ ---------------------------------------------------------------------------
dword_80085C0:	.long 0x200004BC	@ DATA XREF: sub_800855C:loc_8008560r
					@ sub_800859Cr	...

@ =============== S U B	R O U T	I N E =======================================


sub_80085C4:				@ CODE XREF: sub_8007DF4+14p
					@ sub_8007F38+72p ...
		CMP	R0, #0
		BNE	sub_80085C4
		BX	LR
@ End of function sub_80085C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80085CC:				@ CODE XREF: sub_8008A50+38p
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_80085D4
@ ---------------------------------------------------------------------------

loc_80085D2:				@ CODE XREF: sub_80085CC+10j
		ADDS	R0, R0,	#1

loc_80085D4:				@ CODE XREF: sub_80085CC+4j
		MOVS	R2, R1
		LDRB	R2, [R2]
		ADDS	R1, R1,	#1
		CMP	R2, #0
		BNE	loc_80085D2
		BX	LR
@ End of function sub_80085CC


@ =============== S U B	R O U T	I N E =======================================


sub_80085E0:				@ CODE XREF: sub_8008680+E4p
					@ sub_80087CC+74p
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_80085EE
@ ---------------------------------------------------------------------------

loc_80085E6:				@ CODE XREF: sub_80085E0+10j
		LSLS	R2, R1,	#0x1F
		IT mi
		ADDMI	R0, R0,	#1
		LSRS	R1, R1,	#1

loc_80085EE:				@ CODE XREF: sub_80085E0+4j
		CMP	R1, #0
		BNE	loc_80085E6
		BX	LR
@ End of function sub_80085E0


@ =============== S U B	R O U T	I N E =======================================


sub_80085F4:				@ CODE XREF: sub_8008680+AAp
					@ sub_80087CC+E4p
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		PUSH	{R4,LR}
		MLA.W	R0, R0,	R1, R2
		LDRB	R2, [R0,#4]
		CMP	R2, #1
		BEQ	loc_8008630
		CMP	R2, #3
		BNE	loc_8008638
		LDRH	R4, [R0,#2]
		BL	sub_80084F4
		CBNZ	R0, loc_8008622
		MOVS.W	R0, #0x100
		CMP	R4, R0
		BCC	loc_800861C
		MOVS	R4, #0xFF
		B	loc_800863A
@ ---------------------------------------------------------------------------

loc_800861C:				@ CODE XREF: sub_80085F4+22j
		CBNZ	R4, loc_800863A
		MOVS	R4, #8
		B	loc_800863A
@ ---------------------------------------------------------------------------

loc_8008622:				@ CODE XREF: sub_80085F4+1Aj
		CMP	R4, #0x11
		BCC	loc_800862A

loc_8008626:				@ CODE XREF: sub_80085F4+40j
		MOVS	R4, #0x10
		B	loc_800863A
@ ---------------------------------------------------------------------------

loc_800862A:				@ CODE XREF: sub_80085F4+30j
		CBNZ	R4, loc_800863A
		MOVS	R4, #4
		B	loc_800863A
@ ---------------------------------------------------------------------------

loc_8008630:				@ CODE XREF: sub_80085F4+Ej
		LDRH	R4, [R0,#2]
		CMP	R4, #0x11
		BCS	loc_8008626
		CBNZ	R4, loc_800863A

loc_8008638:				@ CODE XREF: sub_80085F4+12j
		MOVS	R4, #1

loc_800863A:				@ CODE XREF: sub_80085F4+26j
					@ sub_80085F4:loc_800861Cj ...
		UXTB	R0, R4
		POP	{R4,PC}
@ End of function sub_80085F4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008640:				@ CODE XREF: sub_8008680+12p
					@ sub_80087CC+12p ...
		MOVS	R3, #0
		STR	R3, [R0]
		STR	R1, [R0,#8]
		STR	R2, [R0,#4]
		BX	LR
@ End of function sub_8008640

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800864C:				@ CODE XREF: sub_8008668+8p
					@ sub_8008668+14p ...
		LDR	R2, [R0]
		LDR	R3, [R0,#4]
		CMP	R2, R3
		BCS	loc_8008660
		LDR	R3, [R0,#8]
		STRB	R1, [R3,R2]
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_8008660:				@ CODE XREF: sub_800864C+6j
		MOVS	R0, #4
		B.W	sub_80085C4
@ End of function sub_800864C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008668:				@ CODE XREF: sub_8008680+2Ap
					@ sub_8008680+A4p ...
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		UXTB	R1, R1
		BL	sub_800864C
		LSRS	R1, R5,	#8
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_800864C
@ End of function sub_8008668

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008680:				@ CODE XREF: sub_8008B00:loc_8008B2Ep
		PUSH.W	{R0-R2,R4-R9,LR}
		LDR	R0, =0x200004FC
		MOVS.W	R2, #0x100
		MOVS	R4, #0
		MOV	R8, R0
		MOV	R1, R8
		MOV	R0, SP
		BL	sub_8008640
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_8008668
		LDR	R0, =0x20000450
		MOV	R9, R0
		LDRB.W	R1, [R9,#1]
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0xC0
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0x32
		MOV	R0, SP
		BL	sub_800864C
		B	loc_8008742
@ ---------------------------------------------------------------------------

loc_80086DE:				@ CODE XREF: sub_8008680+BEj
		LDRH	R0, [R5]
		MOVS	R1, #1
		LSLS	R1, R6
		TST	R0, R1
		BEQ	loc_8008736
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #5
		MOV	R0, SP
		BL	sub_800864C
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R7, R6,	R0, R1
		MOV	R0, SP
		LDRB	R1, [R7,#5]
		BL	sub_800864C
		LDRB	R1, [R7,#4]
		MOV	R0, SP
		BL	sub_800864C
		BL	sub_80084F4
		CBNZ	R0, loc_8008720
		LDRH	R0, [R7]
		CMP	R0, #0x41
		ITT cs
		MOVCS	R0, #0x40
		STRHCS	R0, [R7]

loc_8008720:				@ CODE XREF: sub_8008680+94j
		LDRH	R1, [R7]
		MOV	R0, SP
		BL	sub_8008668
		MOVS	R0, R6
		BL	sub_80085F4
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800864C

loc_8008736:				@ CODE XREF: sub_8008680+66j
		ADDS	R6, R6,	#1

loc_8008738:				@ CODE XREF: sub_8008680+13Ej
		LDRB.W	R0, [R9]
		CMP	R6, R0
		BLT	loc_80086DE
		ADDS	R4, R4,	#1

loc_8008742:				@ CODE XREF: sub_8008680+5Cj
		LDRB.W	R0, [R9,#1]
		CMP	R4, R0
		BGE	loc_80087C0
		LDR.W	R2, [R9,#0x64]
		CBZ	R2, loc_8008758
		MOV	R1, SP
		MOVS	R0, R4
		LDR	R2, [R2,#4]
		BLX	R2

loc_8008758:				@ CODE XREF: sub_8008680+CEj
		MOVS	R0, #0x14
		MLA.W	R5, R4,	R0, R9
		LDRH.W	R0, [R5,#8]!
		LSRS	R0, R0,	#1
		BL	sub_80085E0
		MOVS	R6, R0
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800864C
		UXTB	R1, R4
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		UXTB	R1, R6
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#2]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#3]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		LDR	R1, [R5,#8]
		MOVS	R0, R1
		ITT ne
		MOVNE	R0, SP
		BLXNE	R1
		MOVS	R6, #1
		B	loc_8008738
@ ---------------------------------------------------------------------------

loc_80087C0:				@ CODE XREF: sub_8008680+C8j
		LDR	R0, [SP,#0]
		STRB.W	R0, [R8,#2]
		MOV	R0, R8
		POP.W	{R1-R9,PC}
@ End of function sub_8008680


@ =============== S U B	R O U T	I N E =======================================


sub_80087CC:				@ CODE XREF: sub_8008B00+4Ep
		PUSH.W	{R0-R2,R4-R9,LR}
		LDR	R0, =0x200004FC
		MOVS.W	R2, #0x100
		MOVS	R4, #0
		MOV	R8, R0
		MOV	R1, R8
		MOV	R0, SP
		BL	sub_8008640
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_8008668
		LDR	R0, =0x20000450
		MOV	R9, R0
		LDRB.W	R1, [R9,#1]
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0xC0
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0x32
		MOV	R0, SP
		BL	sub_800864C
		B	loc_800882C
@ ---------------------------------------------------------------------------

loc_800882A:				@ CODE XREF: sub_80087CC+F8j
		ADDS	R4, R4,	#1

loc_800882C:				@ CODE XREF: sub_80087CC+5Cj
		LDRB.W	R0, [R9,#1]
		CMP	R4, R0
		BGE	loc_8008912
		MOVS	R0, #0x14
		MLA.W	R5, R4,	R0, R9
		LDRH.W	R0, [R5,#8]!
		LSRS	R0, R0,	#1
		BL	sub_80085E0
		MOVS	R6, R0
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800864C
		UXTB	R1, R4
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		UXTB	R1, R6
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#2]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#3]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800864C
		LDR	R1, [R5,#8]
		MOVS	R0, R1
		ITT ne
		MOVNE	R0, SP
		BLXNE	R1
		MOVS	R6, #1
		B	loc_80088BE
@ ---------------------------------------------------------------------------

loc_800889C:				@ CODE XREF: sub_80087CC+132j
		LDRB	R1, [R7,#4]
		LDRH	R0, [R7]
		MOVS	R2, #0

loc_80088A2:				@ CODE XREF: sub_80087CC+144j
		BL	sub_80084D0
		UXTH	R1, R0
		MOV	R0, SP
		BL	sub_8008668
		MOVS	R0, R6
		BL	sub_80085F4
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800864C

loc_80088BC:				@ CODE XREF: sub_80087CC+102j
		ADDS	R6, R6,	#1

loc_80088BE:				@ CODE XREF: sub_80087CC+CEj
		LDRB.W	R0, [R9]
		CMP	R6, R0
		BGE	loc_800882A
		LDRH	R0, [R5]
		MOVS	R1, #1
		LSLS	R1, R6
		TST	R0, R1
		BEQ	loc_80088BC
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #5
		MOV	R0, SP
		BL	sub_800864C
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R7, R6,	R0, R1
		MOV	R0, SP
		LDRB	R1, [R7,#5]
		BL	sub_800864C
		LDRB	R1, [R7,#4]
		MOV	R0, SP
		BL	sub_800864C
		BL	sub_80084F4
		CMP	R0, #0
		BNE	loc_800889C
		LDR.W	R1, [R9,#0x5C]
		UXTB	R0, R6
		LDR	R1, [R1,#0x14]
		BLX	R1
		LDRB	R1, [R7,#4]
		MOVS	R2, #1
		UXTH	R0, R0
		B	loc_80088A2
@ ---------------------------------------------------------------------------

loc_8008912:				@ CODE XREF: sub_80087CC+66j
		LDR	R0, [SP,#0]
		STRB.W	R0, [R8,#2]
		MOV	R0, R8
		POP.W	{R1-R9,PC}
@ End of function sub_80087CC

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8008920:	.long 0x20000310	@ DATA XREF: sub_80085F4r
					@ sub_8008680+78r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008924:				@ CODE XREF: sub_8008B00:loc_8008B28p
		PUSH	{R0-R2,R4,R5,LR}
		LDR	R5, =0x20000450
		LDR	R4, =0x200004FC
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_8008640
		MOVS	R1, #0x12
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800864C
		MOVS.W	R1, #0x200
		MOV	R0, SP
		BL	sub_8008668
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#5]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#6]
		MOV	R0, SP
		BL	sub_800864C
		LDR	R0, =0x20000310
		LDRH	R1, [R0]
		MOV	R0, SP
		UXTB	R1, R1
		BL	sub_800864C
		BL	sub_80067B0
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_8008668
		BL	sub_80067B8
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_8008668
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_8008668
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #1
		B	loc_8008A10
@ End of function sub_8008924

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_80089B4:				@ CODE XREF: sub_8008B00+42p
		PUSH	{R0-R2,R4,R5,LR}
		LDR	R5, =0x20000450
		LDR	R4, =0x200004FC
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_8008640
		MOVS	R1, #0xA
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #6
		MOV	R0, SP
		BL	sub_800864C
		MOVS.W	R1, #0x200
		MOV	R0, SP
		BL	sub_8008668
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#5]
		MOV	R0, SP
		BL	sub_800864C
		LDRB	R1, [R5,#6]
		MOV	R0, SP
		BL	sub_800864C
		LDR	R0, =0x20000310
		LDRH	R1, [R0]
		MOV	R0, SP
		UXTB	R1, R1
		BL	sub_800864C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #0
		NOP

loc_8008A10:				@ CODE XREF: sub_8008924+8Cj
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R0, R4
		POP	{R1-R5,PC}
@ End of function sub_80089B4

@ ---------------------------------------------------------------------------
		.align 4
dword_8008A1C:	.long 0x20000450	@ DATA XREF: sub_8008680+2Er
					@ sub_80087CC+2Er ...
dword_8008A20:	.long 0x200004FC	@ DATA XREF: sub_8008680+4r
					@ sub_80087CC+4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008A24:				@ CODE XREF: sub_8008A50:loc_8008A7Cp

@ FUNCTION CHUNK AT 080067C0 SIZE 00000006 BYTES
@ FUNCTION CHUNK AT 080067C8 SIZE 00000006 BYTES
@ FUNCTION CHUNK AT 080067D0 SIZE 00000004 BYTES

		CMP	R0, #1
		BEQ	loc_8008A36
		CMP	R0, #2
		BEQ	loc_8008A3A
		CMP	R0, #3
		BEQ	loc_8008A3E
		CMP	R0, #0xEE
		BEQ	loc_8008A42
		B	loc_8008A46
@ ---------------------------------------------------------------------------

loc_8008A36:				@ CODE XREF: sub_8008A24+2j
		B.W	loc_80067C0
@ ---------------------------------------------------------------------------

loc_8008A3A:				@ CODE XREF: sub_8008A24+6j
		B.W	loc_80067C8
@ ---------------------------------------------------------------------------

loc_8008A3E:				@ CODE XREF: sub_8008A24+Aj
		B.W	loc_80067D0
@ ---------------------------------------------------------------------------

loc_8008A42:				@ CODE XREF: sub_8008A24+Ej
		ADR	R0, dword_8008A4C
		BX	LR
@ ---------------------------------------------------------------------------

loc_8008A46:				@ CODE XREF: sub_8008A24+10j
		MOVS	R0, #0
		BX	LR
@ End of function sub_8008A24

@ ---------------------------------------------------------------------------
		.align 4
dword_8008A4C:	.long 0			@ DATA XREF: sub_8008A24:loc_8008A42o

@ =============== S U B	R O U T	I N E =======================================


sub_8008A50:				@ CODE XREF: sub_8008B00+36p
		PUSH	{R0-R2,R4-R7,LR}
		LDR	R4, =0x200004FC
		CBNZ	R0, loc_8008A7C
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_8008640
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800864C
		LDR	R1, =0x409
		MOV	R0, SP
		BL	sub_8008668
		B	loc_8008AC0
@ ---------------------------------------------------------------------------

loc_8008A7C:				@ CODE XREF: sub_8008A50+4j
		BL	sub_8008A24
		MOVS	R5, R0
		ITT eq
		MOVEQ	R0, #0
		POPEQ	{R1-R7,PC}
		BL	sub_80085CC
		MOVS	R6, R0
		MOVS.W	R2, #0x100
		MOVS	R1, R4
		MOV	R0, SP
		BL	sub_8008640
		LSLS	R1, R6,	#1
		ADDS	R1, R1,	#2
		UXTB	R1, R1
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800864C
		MOVS	R7, #0
		B	loc_8008ABC
@ ---------------------------------------------------------------------------

loc_8008AB2:				@ CODE XREF: sub_8008A50+6Ej
		LDRB	R1, [R5,R7]
		MOV	R0, SP
		ADDS	R7, R7,	#1
		BL	sub_8008668

loc_8008ABC:				@ CODE XREF: sub_8008A50+60j
		CMP	R7, R6
		BCC	loc_8008AB2

loc_8008AC0:				@ CODE XREF: sub_8008A50+2Aj
		MOVS	R0, R4
		POP	{R1-R7,PC}
@ End of function sub_8008A50

@ ---------------------------------------------------------------------------
dword_8008AC4:	.long 0x409		@ DATA XREF: sub_8008A50+22r
dword_8008AC8:	.long 0x200004FC	@ DATA XREF: sub_8008A50+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8008ACC:				@ CODE XREF: sub_8008C04+82p
					@ sub_8008CFC+30p
		LDR	R1, =0x200004AC
		PUSH	{LR}
		LDR	R1, [R1]
		LDR	R1, [R1,#0x3C]
		MOVS	R2, R1
		IT ne
		BLXNE	R1
		POP	{PC}
@ End of function sub_8008ACC


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_8008ADC:				@ CODE XREF: sub_8008AE0+6j
					@ sub_8008B00+6Ep ...
		B.W	sub_8008184
@ End of function sub_8008ADC


@ =============== S U B	R O U T	I N E =======================================


sub_8008AE0:				@ CODE XREF: sub_8008AE8+4p
					@ sub_8008C04:loc_8008C4Ap ...
		MOVS	R2, #1
		MOVS	R1, #0
		MOVS	R0, #1
		B	sub_8008ADC
@ End of function sub_8008AE0


@ =============== S U B	R O U T	I N E =======================================


sub_8008AE8:				@ CODE XREF: sub_8008DA4+6Cp
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_8008AE0
		LDR	R0, =0x20000453
		ORRS.W	R1, R4,	#0x80
		STRB	R1, [R0]
		POP	{R4,PC}
@ End of function sub_8008AE8

@ ---------------------------------------------------------------------------
		.align 4
dword_8008AFC:	.long 0x20000453	@ DATA XREF: sub_8008AE8+8r

@ =============== S U B	R O U T	I N E =======================================


sub_8008B00:				@ CODE XREF: sub_8008DA4+74p
		MOVS	R1, R0
		PUSH	{R4,R5,LR}
		LDRB	R2, [R1,#7]
		LDRB	R3, [R1,#6]
		MOVS	R5, #0
		MOVS	R0, #0
		ORRS.W	R4, R3,	R2,LSL#8
		LDRB	R2, [R1,#3]
		CMP	R2, #1
		BEQ	loc_8008B28
		CMP	R2, #2
		BEQ	loc_8008B2E
		CMP	R2, #3
		BEQ	loc_8008B34
		CMP	R2, #6
		BEQ	loc_8008B3C
		CMP	R2, #7
		BEQ	loc_8008B48
		B	loc_8008B54
@ ---------------------------------------------------------------------------

loc_8008B28:				@ CODE XREF: sub_8008B00+14j
		BL	sub_8008924
		B	loc_8008B54
@ ---------------------------------------------------------------------------

loc_8008B2E:				@ CODE XREF: sub_8008B00+18j
		BL	sub_8008680
		B	loc_8008B52
@ ---------------------------------------------------------------------------

loc_8008B34:				@ CODE XREF: sub_8008B00+1Cj
		LDRB	R0, [R1,#2]
		BL	sub_8008A50
		B	loc_8008B54
@ ---------------------------------------------------------------------------

loc_8008B3C:				@ CODE XREF: sub_8008B00+20j
		BL	sub_80084E0
		CBZ	R0, loc_8008B56
		BL	sub_80089B4
		B	loc_8008B52
@ ---------------------------------------------------------------------------

loc_8008B48:				@ CODE XREF: sub_8008B00+24j
		BL	sub_80084E0
		CBZ	R0, loc_8008B56
		BL	sub_80087CC

loc_8008B52:				@ CODE XREF: sub_8008B00+32j
					@ sub_8008B00+46j
		LDRB	R5, [R0,#2]

loc_8008B54:				@ CODE XREF: sub_8008B00+26j
					@ sub_8008B00+2Cj ...
		CBNZ	R0, loc_8008B60

loc_8008B56:				@ CODE XREF: sub_8008B00+40j
					@ sub_8008B00+4Cj
		LDR	R0, =0x200004AC
		LDR	R0, [R0]
		LDR	R0, [R0,#0x24]
		BLX	R0
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_8008B60:				@ CODE XREF: sub_8008B00:loc_8008B54j
		CBNZ	R5, loc_8008B64
		LDRB	R5, [R0]

loc_8008B64:				@ CODE XREF: sub_8008B00:loc_8008B60j
		CMP	R5, R4
		IT cs
		MOVCS	R5, R4
		MOVS	R2, #1
		MOVS	R1, R5
		BL	sub_8008ADC
		POP	{R4,R5,PC}
@ End of function sub_8008B00

@ ---------------------------------------------------------------------------
dword_8008B74:	.long 0x200004AC	@ DATA XREF: sub_8008ACCr
					@ sub_8008B00:loc_8008B56r

@ =============== S U B	R O U T	I N E =======================================


sub_8008B78:				@ CODE XREF: sub_8008DA4+54p
		LDR	R2, =0x20000450
		PUSH	{R0,R4,R5,LR}
		LDRB	R3, [R0,#3]
		LDRB	R1, [R0,#2]
		LDR	R5, [R2,#0x5C]
		ORRS.W	R1, R1,	R3,LSL#8
		BNE	loc_8008B94
		LDRB	R3, [R0,#7]
		LDRB	R1, [R0,#6]
		ORRS.W	R1, R1,	R3,LSL#8
		CMP	R1, #2
		BEQ	loc_8008B9A

loc_8008B94:				@ CODE XREF: sub_8008B78+Ej
					@ sub_8008B78+26j ...
		LDR	R0, [R5,#0x24]
		BLX	R0
		POP	{R0,R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_8008B9A:				@ CODE XREF: sub_8008B78+1Aj
		LDRB	R1, [R2,#7]
		LSLS	R1, R1,	#0x1D
		BPL	loc_8008B94
		LDRB	R1, [R0,#4]
		LDRB	R0, [R0]
		LDRB	R2, [R2,#7]
		MOVS	R4, #0
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		LSLS	R2, R2,	#0x1E
		BMI	loc_8008BC8
		CMP	R0, #1
		BLS	loc_8008BBA
		SUBS	R0, R0,	#2
		BEQ	loc_8008BC2
		POP	{R0,R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_8008BBA:				@ CODE XREF: sub_8008B78+3Aj
					@ sub_8008B78+4Cj ...
		MOVS	R0, #0
		STRB.W	R0, [SP,#0]
		B	loc_8008BF4
@ ---------------------------------------------------------------------------

loc_8008BC2:				@ CODE XREF: sub_8008B78+3Ej
		CMP	R1, #0
		BEQ	loc_8008BBA
		B	loc_8008B94
@ ---------------------------------------------------------------------------

loc_8008BC8:				@ CODE XREF: sub_8008B78+36j
		CBZ	R0, loc_8008BD4
		CMP	R0, #1
		BEQ	loc_8008BBA
		CMP	R0, #2
		BEQ	loc_8008BDC
		B	loc_8008BF4
@ ---------------------------------------------------------------------------

loc_8008BD4:				@ CODE XREF: sub_8008B78:loc_8008BC8j
		MOVS	R0, #1
		STRB.W	R0, [SP,#0]
		B	loc_8008BF4
@ ---------------------------------------------------------------------------

loc_8008BDC:				@ CODE XREF: sub_8008B78+58j
		MOVS	R0, R1
		BL	sub_8007FCC
		CMP	R0, #0xFF
		BEQ	loc_8008B94
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDRB	R0, [R0,#0x10]
		STRB.W	R0, [SP,#0]

loc_8008BF4:				@ CODE XREF: sub_8008B78+48j
					@ sub_8008B78+5Aj ...
		STRB.W	R4, [SP,#1]
		MOVS	R2, #0
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_8008ADC
		POP	{R0,R4,R5,PC}
@ End of function sub_8008B78


@ =============== S U B	R O U T	I N E =======================================


sub_8008C04:				@ CODE XREF: sub_8008C90+2j
					@ sub_8008C94+2j
		PUSH	{R4-R7,LR}
		MOVS	R2, R0
		LDRB	R0, [R2,#2]
		LDRB	R3, [R2,#3]
		MOVS	R4, R1
		LDR	R1, =0x20000450
		UXTB	R6, R4
		ORRS.W	R0, R0,	R3,LSL#8
		LDR	R5, [R1,#0x5C]
		BNE	loc_8008C24
		LDRB	R3, [R2,#7]
		LDRB	R0, [R2,#6]
		ORRS.W	R0, R0,	R3,LSL#8
		BEQ	loc_8008C2A

loc_8008C24:				@ CODE XREF: sub_8008C04+14j
					@ sub_8008C04+2Aj ...
		LDR	R0, [R5,#0x24]
		BLX	R0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8008C2A:				@ CODE XREF: sub_8008C04+1Ej
		LDRB	R0, [R1,#7]
		LSLS	R0, R0,	#0x1D
		BPL	loc_8008C24
		LDRB	R0, [R2,#4]
		LDRB	R2, [R2]
		LDRB	R1, [R1,#7]
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		LSLS	R1, R1,	#0x1E
		BMI	loc_8008C68
		CBZ	R2, loc_8008C4A
		CMP	R2, #1
		BEQ	loc_8008C24
		CMP	R2, #2
		BEQ	loc_8008C50
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8008C4A:				@ CODE XREF: sub_8008C04+3Aj
					@ sub_8008C04+62j ...
		BL	sub_8008AE0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8008C50:				@ CODE XREF: sub_8008C04+42j
		BL	sub_8007FCC
		MOVS	R7, R0
		BNE	loc_8008C24
		LDR	R0, =0x20000310
		CMP	R4, #0
		ITTEE eq
		MOVEQ	R1, #0
		STRBEQ	R1, [R0,#0x10]
		MOVNE	R1, #1
		STRBNE	R1, [R0,#0x10]
		B	loc_8008C4A
@ ---------------------------------------------------------------------------

loc_8008C68:				@ CODE XREF: sub_8008C04+38j
		CMP	R2, #0
		BEQ	loc_8008C4A
		CMP	R2, #2
		BNE	loc_8008C24
		BL	sub_8007FCC
		MOVS	R7, R0
		CMP	R7, #0xFF
		BEQ	loc_8008C24
		MOVS	R1, R6
		BL	sub_80083E8
		CMP	R6, #0
		BNE	loc_8008C4A
		MOVS	R0, R7
		BL	sub_8008ACC
		B	loc_8008C4A
@ End of function sub_8008C04

@ ---------------------------------------------------------------------------
dword_8008C8C:	.long 0x20000310	@ DATA XREF: sub_8008924+44r
					@ sub_80089B4+44r ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008C90:				@ CODE XREF: sub_8008DA4+5Cp
		MOVS	R1, #0
		B	sub_8008C04
@ End of function sub_8008C90


@ =============== S U B	R O U T	I N E =======================================


sub_8008C94:				@ CODE XREF: sub_8008DA4+64p
		MOVS	R1, #1
		B	sub_8008C04
@ End of function sub_8008C94


@ =============== S U B	R O U T	I N E =======================================


sub_8008C98:				@ CODE XREF: sub_8008DA4:loc_8008E1Ep
		PUSH	{R0,LR}
		BL	sub_800800C
		MOVS	R2, #0
		STRB.W	R0, [SP,#0]
		B	loc_8008CD4
@ End of function sub_8008C98

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008CA8:				@ CODE XREF: sub_8008DA4+8Ap
		LDR	R1, =0x20000450
		PUSH	{R0,LR}
		LDRB	R3, [R0,#2]
		LDR	R2, [R1,#0x5C]
		CBNZ	R3, loc_8008CB8
		LDRB	R0, [R0,#6]
		CMP	R0, #1
		BEQ	loc_8008CBA

loc_8008CB8:				@ CODE XREF: sub_8008CA8+8j
		B	loc_8008CC4
@ ---------------------------------------------------------------------------

loc_8008CBA:				@ CODE XREF: sub_8008CA8+Ej
		LDRB	R0, [R1,#7]
		ANDS.W	R0, R0,	#6
		CMP	R0, #6
		BEQ	loc_8008CCA

loc_8008CC4:				@ CODE XREF: sub_8008CA8:loc_8008CB8j
		LDR	R0, [R2,#0x24]
		BLX	R0
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_8008CCA:				@ CODE XREF: sub_8008CA8+1Aj
		MOVS	R0, #0
		STRB.W	R0, [SP,#0]
		MOVS	R2, #0
		NOP

loc_8008CD4:				@ CODE XREF: sub_8008C98+Cj
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_8008ADC
		POP	{R0,PC}
@ End of function sub_8008CA8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008CE0:				@ CODE XREF: sub_8008DA4+92p
		LDR	R1, =0x20000450
		LDRB	R0, [R0,#4]
		LDR	R2, [R1,#0x5C]
		LDRB	R3, [R1,#7]
		ANDS.W	R3, R3,	#6
		CMP	R3, #6
		BEQ	loc_8008CF4
		LDR	R0, [R2,#0x24]
		BX	R0
@ ---------------------------------------------------------------------------

loc_8008CF4:				@ CODE XREF: sub_8008CE0+Ej
		LDRB	R1, [R1,#1]
		LDR	R2, [R2,#0x24]
		CMP	R1, R0
		BX	R2
@ End of function sub_8008CE0


@ =============== S U B	R O U T	I N E =======================================


sub_8008CFC:				@ CODE XREF: sub_8008DA4+82p
		PUSH	{R0,R4-R6,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R0,#2]
		STRB.W	R0, [SP,#0]
		LDR	R0, [R4,#0x5C]
		LDRB.W	R1, [SP,#0]
		MOVS	R5, R0
		CMP	R1, #1
		BNE	loc_8008D44
		BL	sub_8008AE0
		LDRB	R0, [R4,#7]
		MOVS	R6, #1
		ORRS.W	R0, R0,	#2
		BL	sub_8008494
		B	loc_8008D3A
@ ---------------------------------------------------------------------------

loc_8008D24:				@ CODE XREF: sub_8008CFC+44j
		MOVS	R1, #0
		BL	sub_80083E8
		MOVS	R0, R6
		BL	sub_8008ACC
		MOVS	R0, R6
		BL	sub_8008528
		ADDS	R6, R6,	#1
		UXTB	R6, R6

loc_8008D3A:				@ CODE XREF: sub_8008CFC+26j
		LDRB	R1, [R4]
		MOVS	R0, R6
		CMP	R0, R1
		BCC	loc_8008D24
		B	loc_8008D54
@ ---------------------------------------------------------------------------

loc_8008D44:				@ CODE XREF: sub_8008CFC+14j
		CBNZ	R1, loc_8008D62
		BL	sub_8008AE0
		LDRB	R0, [R4,#7]
		ANDS.W	R0, R0,	#0xFD
		BL	sub_8008494

loc_8008D54:				@ CODE XREF: sub_8008CFC+46j
		LDR	R2, [R5,#0x40]
		MOVS	R0, R2
		BEQ	locret_8008D66
		MOV	R1, SP
		MOVS	R0, #0
		BLX	R2
		POP	{R0,R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_8008D62:				@ CODE XREF: sub_8008CFC:loc_8008D44j
		LDR	R0, [R0,#0x24]
		BLX	R0

locret_8008D66:				@ CODE XREF: sub_8008CFC+5Cj
		POP	{R0,R4-R6,PC}
@ End of function sub_8008CFC

@ ---------------------------------------------------------------------------
dword_8008D68:	.long 0x20000450	@ DATA XREF: sub_8008CFC+2r

@ =============== S U B	R O U T	I N E =======================================


sub_8008D6C:				@ CODE XREF: sub_8008390:loc_80083E0p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R4,#3]
		LSLS	R0, R0,	#0x18
		BPL	locret_8008DA2
		LDRB	R0, [R4,#3]
		LSLS	R0, R0,	#0x19
		LSRS	R0, R0,	#0x19
		STRB	R0, [R4,#3]
		LDRB	R5, [R4,#3]
		LDR	R1, [R4,#0x5C]
		MOVS	R0, R5
		LDR	R1, [R1,#0x1C]
		BLX	R1
		LDRB	R0, [R4,#7]
		CMP	R5, #0
		BEQ	loc_8008D9A
		ORRS.W	R0, R0,	#4
		POP.W	{R4,R5,LR}
		B.W	sub_8008494
@ ---------------------------------------------------------------------------

loc_8008D9A:				@ CODE XREF: sub_8008D6C+20j
		ANDS.W	R0, R0,	#0xFB
		BL	sub_8008494

locret_8008DA2:				@ CODE XREF: sub_8008D6C+8j
		POP	{R4,R5,PC}
@ End of function sub_8008D6C


@ =============== S U B	R O U T	I N E =======================================


sub_8008DA4:				@ CODE XREF: sub_8007A9C+28p
		PUSH.W	{R4-R7,R9,LR}
		LDR	R5, =0x20000450
		MOVS	R4, R0
		MOVS	R7, #0
		LDRB	R6, [R5,#1]
		B	loc_8008DCA
@ ---------------------------------------------------------------------------

loc_8008DB2:				@ CODE XREF: sub_8008DA4+28j
		MOVS	R0, #0x14
		MLA.W	R0, R7,	R0, R5
		ADDS	R0, #8
		LDR	R1, [R0,#0x10]
		MOVS	R0, R1
		BEQ	loc_8008DC8
		MOVS	R0, R4
		BLX	R1
		CMP	R0, #0
		BEQ	locret_8008E64

loc_8008DC8:				@ CODE XREF: sub_8008DA4+1Aj
		ADDS	R7, R7,	#1

loc_8008DCA:				@ CODE XREF: sub_8008DA4+Cj
		CMP	R7, R6
		BCC	loc_8008DB2
		LDR	R0, [R5,#0x5C]
		MOV	R9, R0
		LDRB	R0, [R4]
		ANDS.W	R0, R0,	#0x60
		BEQ	loc_8008DE0
		CMP	R0, #0x20
		BEQ	loc_8008E44
		B	def_8008DE6	@ jumptable 08008DE6 default case
@ ---------------------------------------------------------------------------

loc_8008DE0:				@ CODE XREF: sub_8008DA4+34j
		LDRB	R0, [R4,#1]
		CMP	R0, #0xB	@ switch 12 cases
		BHI	def_8008DE6	@ jumptable 08008DE6 default case
		TBB.W	[PC,R0]		@ switch jump
@ ---------------------------------------------------------------------------
jpt_8008DE6:	.byte 6			@ jump table for switch	statement
		.byte 0xA
		.byte 0x29
		.byte 0xE
		.byte 0x29
		.byte 0x12
		.byte 0x16
		.byte 0x29
		.byte 0x1A
		.byte 0x1D
		.byte 0x21
		.byte 0x25
@ ---------------------------------------------------------------------------

loc_8008DF6:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 0
		BL	sub_8008B78
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008DFE:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 1
		BL	sub_8008C90
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E06:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 3
		BL	sub_8008C94
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E0E:				@ CODE XREF: sub_8008DA4+42j
		LDRB	R0, [R4,#2]	@ jumptable 08008DE6 case 5
		BL	sub_8008AE8
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E16:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 6
		BL	sub_8008B00
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E1E:				@ CODE XREF: sub_8008DA4+42j
		BL	sub_8008C98	@ jumptable 08008DE6 case 8
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E24:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 9
		BL	sub_8008CFC
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E2C:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 10
		BL	sub_8008CA8
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E34:				@ CODE XREF: sub_8008DA4+42j
		MOVS	R0, R4		@ jumptable 08008DE6 case 11
		BL	sub_8008CE0
		B	locret_8008E64
@ ---------------------------------------------------------------------------

def_8008DE6:				@ CODE XREF: sub_8008DA4+3Aj
					@ sub_8008DA4+40j ...
		LDR.W	R0, [R9,#0x24]	@ jumptable 08008DE6 default case
		BLX	R0
		B	locret_8008E64
@ ---------------------------------------------------------------------------

loc_8008E44:				@ CODE XREF: sub_8008DA4+38j
		MOVS	R7, #0
		B	loc_8008E4A
@ ---------------------------------------------------------------------------

loc_8008E48:				@ CODE XREF: sub_8008DA4+B6j
					@ sub_8008DA4+BEj
		ADDS	R7, R7,	#1

loc_8008E4A:				@ CODE XREF: sub_8008DA4+A2j
		CMP	R7, R6
		BCS	def_8008DE6	@ jumptable 08008DE6 default case
		MOVS	R0, #0x14
		MLA.W	R0, R7,	R0, R5
		ADDS	R0, #8
		LDR	R1, [R0,#0xC]
		MOVS	R0, R1
		BEQ	loc_8008E48
		MOVS	R0, R4
		BLX	R1
		CMP	R0, #0
		BNE	loc_8008E48

locret_8008E64:				@ CODE XREF: sub_8008DA4+22j
					@ sub_8008DA4+58j ...
		POP.W	{R4-R7,R9,PC}
@ End of function sub_8008DA4

@ ---------------------------------------------------------------------------
dword_8008E68:	.long 0x20000450	@ DATA XREF: sub_8008B78r
					@ sub_8008C04+Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_8008E6C:				@ CODE XREF: sub_8005660+D8p
					@ sub_8005660+E0p
		LDR	R2, [R0]
		STRB.W	R1, [R2],#1
		STR	R2, [R0]
		BX	LR
@ End of function sub_8008E6C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008E78:				@ CODE XREF: sub_8005660+9Ep
					@ sub_8005660+A6p ...
		LDR	R2, [R0]
		STRB	R1, [R2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#1]
		ADDS	R2, R2,	#2
		STR	R2, [R0]
		BX	LR
@ End of function sub_8008E78

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008E88:				@ CODE XREF: sub_8005660+C8p
					@ sub_8005660+D0p ...
		LDR	R2, [R0]
		STRB	R1, [R2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#1]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#3]
		ADDS	R2, R2,	#4
		STR	R2, [R0]
		BX	LR
@ End of function sub_8008E88

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8008EA0:				@ CODE XREF: sub_8004598+7Ep
					@ sub_800538C+12p
		STRB	R1, [R0]
		LSRS	R1, R1,	#8
		STRB	R1, [R0,#1]
		LSRS	R1, R1,	#8
		STRB	R1, [R0,#2]
		LSRS	R1, R1,	#8
		STRB.W	R1, [R0,#3]!
		BX	LR
@ End of function sub_8008EA0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008EB4:				@ CODE XREF: sub_8004F3C+22p
		LDRB	R2, [R0,#1]
		LDRB	R1, [R0]
		ORRS.W	R1, R1,	R2,LSL#8
		LDRB	R2, [R0,#2]
		LDRB	R0, [R0,#3]
		ORRS.W	R1, R1,	R2,LSL#16
		ORRS.W	R0, R1,	R0,LSL#24
		BX	LR
@ End of function sub_8008EB4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008ECC:				@ CODE XREF: sub_800021C+3FAEp
					@ DATA XREF: sub_800021C:loc_80041C4o ...

@ FUNCTION CHUNK AT 080070FC SIZE 0000000A BYTES

		PUSH	{LR}
		BL	sub_8007136
		LDR	R0, =0x200001A0
		LDRB	R1, [R0,#1]
		ADDS	R1, R1,	#1
		STRB	R1, [R0,#1]
		BL	sub_8008F1C
		BL	sub_8007408
		BL	sub_8006DBC
		BL	sub_80071C0
		LDR	R1, =0x968
		LDR	R0, =0x20000680
		LDR	R3, =(sub_80064E4+1)
		MOVS	R2, #2
		PUSH	{R0-R2}
		LDR	R1, =aMaintask	@ "MainTask"
		LDR	R0, =0x20000FE8
		MOVS	R2, #0x64
		BL	sub_8006E34
		BL	loc_80070FC
@ End of function sub_8008ECC

@ ---------------------------------------------------------------------------
		POP	{R0-R2,PC}
@ ---------------------------------------------------------------------------
dword_8008F04:	.long 0x200001A0	@ DATA XREF: sub_8008ECC+6r
dword_8008F08:	.long 0x968		@ DATA XREF: sub_8008ECC+1Er
dword_8008F0C:	.long 0x20000680	@ DATA XREF: sub_8008ECC+20r
off_8008F10:	.long sub_80064E4+1	@ DATA XREF: sub_8008ECC+22r
off_8008F14:	.long aMaintask		@ DATA XREF: sub_8008ECC+28r
					@ "MainTask"
dword_8008F18:	.long 0x20000FE8	@ DATA XREF: sub_8008ECC+2Ar

@ =============== S U B	R O U T	I N E =======================================


sub_8008F1C:				@ CODE XREF: sub_8008ECC+Ep
		LDR	R3, =0x20001165
		BX	R3
@ End of function sub_8008F1C

@ ---------------------------------------------------------------------------
off_8008F20:	.long 0x20001165	@ DATA XREF: sub_8008F1Cr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800021C

loc_8008F24:				@ CODE XREF: sub_800021C:loc_8008F24j
					@ sub_800021C+8D64j ...
		B	loc_8008F24
@ END OF FUNCTION CHUNK	FOR sub_800021C
@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800021C

loc_8008F28:				@ CODE XREF: sub_800021C+3FB6j
					@ DATA XREF: sub_800021C+3FB0o	...
		B.W	loc_8008F7C
@ END OF FUNCTION CHUNK	FOR sub_800021C

@ =============== S U B	R O U T	I N E =======================================


sub_8008F2C:				@ CODE XREF: sub_8005AFC+5Ap
					@ sub_8005CA8+2Ep
		PUSH	{R4,LR}
		B	loc_8008F36
@ ---------------------------------------------------------------------------

loc_8008F30:				@ CODE XREF: sub_8008F2C+12j
		ADDS	R0, R0,	#1
		ADDS	R1, R1,	#1
		SUBS	R2, R2,	#1

loc_8008F36:				@ CODE XREF: sub_8008F2C+2j
		CBZ	R2, loc_8008F4C
		LDRB	R3, [R0]
		LDRB	R4, [R1]
		CMP	R3, R4
		BEQ	loc_8008F30
		BCS	loc_8008F48

loc_8008F42:				@ CODE XREF: ROM:0800943Aj
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8008F48:				@ CODE XREF: sub_8008F2C+14j
		MOVS	R0, #1
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_8008F4C:				@ CODE XREF: sub_8008F2C:loc_8008F36j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_8008F2C


@ =============== S U B	R O U T	I N E =======================================


sub_8008F50:				@ CODE XREF: sub_8004180:loc_8004186p
					@ sub_8005BB0+9Ap ...
		PUSH	{R4,LR}
		MOVS	R3, R0
		CMP	R2, #0
		B	loc_8008F62
@ ---------------------------------------------------------------------------

loc_8008F58:				@ CODE XREF: sub_8008F50:loc_8008F62j
		LDRB.W	R4, [R1],#1
		SUBS	R2, R2,	#1
		STRB.W	R4, [R3],#1

loc_8008F62:				@ CODE XREF: sub_8008F50+6j
		BNE	loc_8008F58
		POP	{R4,PC}
@ End of function sub_8008F50

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8008F68:				@ CODE XREF: sub_8004180+1Ep
					@ sub_8004FF8+BAp ...
		UXTB	R1, R1
		MOVS	R3, R0
		CMP	R2, #0
		B	loc_8008F76
@ ---------------------------------------------------------------------------

loc_8008F70:				@ CODE XREF: sub_8008F68:loc_8008F76j
		STRB.W	R1, [R3],#1
		SUBS	R2, R2,	#1

loc_8008F76:				@ CODE XREF: sub_8008F68+6j
		BNE	loc_8008F70
		BX	LR
@ End of function sub_8008F68

@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800021C

loc_8008F7C:				@ CODE XREF: sub_800021C:loc_8008F28j
					@ DATA XREF: sub_800021C+3FB2o	...
		LDR	R4, =(loc_8008F24+1)
		MOV	LR, R4
		BX	R4 @ loc_8008F24
@ END OF FUNCTION CHUNK	FOR sub_800021C
@ ---------------------------------------------------------------------------
		.align 4
off_8008F84:	.long loc_8008F24+1	@ DATA XREF: sub_800021C:loc_8008F7Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8008F88:				@ CODE XREF: sub_800673C+Cp
		MOV	R12, R1
		UDIV.W	R1, R0,	R1
		MLS.W	R0, R12, R1, R0
		BX	LR
@ End of function sub_8008F88


@ =============== S U B	R O U T	I N E =======================================


sub_8008F94:				@ CODE XREF: sub_80057B8+22p
		MOV	R12, R1
		SDIV.W	R1, R0,	R1
		MLS.W	R0, R12, R1, R0
		BX	LR
@ End of function sub_8008F94


@ =============== S U B	R O U T	I N E =======================================


sub_8008FA0:				@ CODE XREF: ROM:08009016p
					@ ROM:08009080p ...
		LDR	R0, =0x40022010
		LDR	R1, [R0]
		LSLS	R1, R1,	#0x18
		BPL	loc_8008FB2
		LDR	R1, =0x40022004
		LDR	R2, =0x45670123
		STR	R2, [R1]
		LDR	R2, =0xCDEF89AB
		STR	R2, [R1]

loc_8008FB2:				@ CODE XREF: sub_8008FA0+6j
		MOVS	R1, #0
		STR.W	R1, [R0],#0xC
		LDR	R0, [R0]
		LSLS	R0, R0,	#0x1D
		BMI	locret_8008FD0
		LDR	R0, =0x40003000
		LDR	R1, =0x5555
		STR.W	R1, [R0],#4
		MOVS	R1, #6
		STR.W	R1, [R0],#4
		LDR	R1, =0xFFF
		STR	R1, [R0]

locret_8008FD0:				@ CODE XREF: sub_8008FA0+1Cj
		BX	LR
@ End of function sub_8008FA0

@ ---------------------------------------------------------------------------
		.align 4
dword_8008FD4:	.long 0x40022004	@ DATA XREF: sub_8008FA0+8r
dword_8008FD8:	.long 0x5555		@ DATA XREF: sub_8008FA0+20r
dword_8008FDC:	.long 0xFFF		@ DATA XREF: sub_8008FA0+2Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8008FE0:				@ CODE XREF: ROM:080090F0p
		LDR	R0, =0x40022004
		LDR	R1, =0x45670123
		STR	R1, [R0]
		LDR	R1, =0xCDEF89AB
		STR	R1, [R0]
		BX	LR
@ End of function sub_8008FE0

@ ---------------------------------------------------------------------------
dword_8008FEC:	.long 0x40022004	@ DATA XREF: sub_8008FE0r
dword_8008FF0:	.long 0x45670123	@ DATA XREF: sub_8008FA0+Ar
					@ sub_8008FE0+2r
dword_8008FF4:	.long 0xCDEF89AB	@ DATA XREF: sub_8008FA0+Er
					@ sub_8008FE0+6r

@ =============== S U B	R O U T	I N E =======================================


sub_8008FF8:				@ CODE XREF: ROM:loc_8009038p
					@ ROM:loc_800909Ap ...
		LDR	R0, =0x40003000
		LDR	R1, =0xAAAA
		STR	R1, [R0]
		BX	LR
@ End of function sub_8008FF8

@ ---------------------------------------------------------------------------
dword_8009000:	.long 0xAAAA		@ DATA XREF: sub_8008FF8+2r
dword_8009004:	.long 0x40003000	@ DATA XREF: sub_8008FA0+1Er
					@ sub_8008FF8r
@ ---------------------------------------------------------------------------
		PUSH	{R4-R7,LR}
		MOVS	R4, R1
		MOVS	R5, R0
		LSLS	R0, R5,	#0x16
		BNE	loc_8009058
		LDR	R6, =0x40022010
		LDR	R7, =0x4002200C
		BL	sub_8008FA0
		B	loc_8009024
@ ---------------------------------------------------------------------------

loc_800901C:				@ CODE XREF: ROM:0800904Ej
		LDR	R0, =0xFFFFFC00
		ADDS.W	R5, R5,	#0x400
		ADDS	R4, R4,	R0

loc_8009024:				@ CODE XREF: ROM:0800901Aj
		CMP	R4, #1
		BLT	loc_8009058
		MOVS	R0, #2
		STR	R0, [R6]
		LDR	R0, =0x40022014
		STR	R5, [R0]
		LDR	R0, [R6]
		ORRS.W	R0, R0,	#0x40
		STR	R0, [R6]

loc_8009038:				@ CODE XREF: ROM:08009040j
		BL	sub_8008FF8
		LDR	R0, [R7]
		LSLS	R1, R0,	#0x1F
		BMI	loc_8009038
		LDR	R1, [R6]
		MOVS	R2, #2
		BICS	R1, R2
		STR	R1, [R6]
		TST.W	R0, #0x14
		BEQ	loc_800901C
		MOVS	R0, #0x14
		STR	R0, [R7]
		MOVS	R0, #7
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8009058:				@ CODE XREF: ROM:08009010j
					@ ROM:08009026j
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
dword_800905C:	.long 0xFFFFFC00	@ DATA XREF: ROM:loc_800901Cr
dword_8009060:	.long 0x40022014	@ DATA XREF: ROM:0800902Cr
@ ---------------------------------------------------------------------------
		PUSH.W	{R4-R10,LR}
		MOVS	R6, R0
		LDR	R7, =0x4002200C
		MOVS	R4, R1
		MOVS	R5, R2
		ADDS	R5, R5,	#1
		BL	sub_8009154
		BL	sub_800915C
		MOV	R8, R0
		MOVS	R0, #0
		MOV	R9, R0
		BL	sub_8008FA0
		LDR	R0, =0x40022010
		LSRS	R5, R5,	#1
		MOV	R10, R0

loc_800908A:				@ CODE XREF: ROM:080090C6j
		MOVS	R0, #1
		STR.W	R0, [R10]
		LDRH.W	R0, [R4],#2
		STRH.W	R0, [R6],#2
		B	loc_800909E
@ ---------------------------------------------------------------------------

loc_800909A:				@ CODE XREF: ROM:080090A2j
		BL	sub_8008FF8

loc_800909E:				@ CODE XREF: ROM:08009098j
		LDR	R0, [R7]
		LSLS	R0, R0,	#0x1F
		BMI	loc_800909A
		LDR.W	R0, [R10]
		MOVS	R1, #1
		BICS	R0, R1
		STR.W	R0, [R10]
		LDR	R0, [R7]
		TST.W	R0, #0x14
		BEQ	loc_80090C4
		LDR	R0, [R7]
		ORRS.W	R0, R0,	#0x14
		STR	R0, [R7]
		MOVS	R0, #4
		MOV	R9, R0

loc_80090C4:				@ CODE XREF: ROM:080090B6j
		SUBS	R5, R5,	#1
		BNE	loc_800908A
		MOV	R0, R8
		BL	sub_8009164
		BL	sub_800916C
		MOV	R0, R9
		POP.W	{R4-R10,PC}
@ ---------------------------------------------------------------------------
		PUSH	{R4,LR}
		BL	sub_8009154
		LDR	R0, =0x1FFFF800
		LDR	R1, =0x5AA5
		LDR	R0, [R0]
		UXTH	R0, R0
		CMP	R0, R1
		BNE	loc_8009132
		LDR	R4, =0x40022010
		BL	sub_8008FA0
		BL	sub_8008FE0
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x200
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x20
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x40
		STR	R0, [R4]

loc_800910C:				@ CODE XREF: ROM:08009116j
		BL	sub_8008FF8
		LDR	R0, =0x4002200C
		LDR	R0, [R0]
		LSLS	R0, R0,	#0x1F
		BMI	loc_800910C
		LDR	R0, [R4]
		MOVS	R1, #0xFFFFFDFF
		ANDS	R1, R0
		STR	R1, [R4]
		LDR	R0, [R4]
		MOVS	R1, #0x10
		BICS	R0, R1
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x80
		STR	R0, [R4]

loc_8009132:				@ CODE XREF: ROM:080090E8j
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800913C
		BL	sub_8009174

locret_800913C:				@ CODE XREF: ROM:08009136j
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 0x10
dword_8009140:	.long 0x1FFFF800	@ DATA XREF: ROM:080090DEr
dword_8009144:	.long 0x5AA5		@ DATA XREF: ROM:080090E0r
dword_8009148:	.long 0x200001A1	@ DATA XREF: ROM:loc_8009132r
dword_800914C:	.long 0x40022010	@ DATA XREF: sub_8008FA0r
					@ ROM:08009012r ...
dword_8009150:	.long 0x4002200C	@ DATA XREF: ROM:08009014r
					@ ROM:0800906Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_8009154:				@ CODE XREF: ROM:08009072p
					@ ROM:080090DAp
		LDR	R3, =(sub_8007136+1)
		BX	R3 @ sub_8007136
@ End of function sub_8009154

@ ---------------------------------------------------------------------------
off_8009158:	.long sub_8007136+1	@ DATA XREF: sub_8009154r

@ =============== S U B	R O U T	I N E =======================================


sub_800915C:				@ CODE XREF: ROM:08009076p

@ FUNCTION CHUNK AT 08007404 SIZE 00000004 BYTES

		LDR	R3, =(loc_8007404+1)
		BX	R3 @ loc_8007404
@ End of function sub_800915C

@ ---------------------------------------------------------------------------
off_8009160:	.long loc_8007404+1	@ DATA XREF: sub_800915Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8009164:				@ CODE XREF: ROM:080090CAp
		LDR	R3, =(sub_80073EC+1)
		BX	R3 @ sub_80073EC
@ End of function sub_8009164

@ ---------------------------------------------------------------------------
off_8009168:	.long sub_80073EC+1	@ DATA XREF: sub_8009164r

@ =============== S U B	R O U T	I N E =======================================


sub_800916C:				@ CODE XREF: ROM:080090CEp
		LDR	R3, =(sub_8006A30+1)
		BX	R3 @ sub_8006A30
@ End of function sub_800916C

@ ---------------------------------------------------------------------------
off_8009170:	.long sub_8006A30+1	@ DATA XREF: sub_800916Cr

@ =============== S U B	R O U T	I N E =======================================


sub_8009174:				@ CODE XREF: ROM:08009138p
		LDR	R3, =(sub_800712A+1)
		BX	R3 @ sub_800712A
@ End of function sub_8009174

@ ---------------------------------------------------------------------------
off_8009178:	.long sub_800712A+1	@ DATA XREF: sub_8009174r
dword_800917C:	.long 0xFDF		@ DATA XREF: sub_8004180+2o
					@ ROM:off_80041A8o
dword_8009180:	.long 0x2000004C	@ DATA XREF: sub_8004180+12r
dword_8009184:	.long 0x2000004C	@ DATA XREF: sub_8004180+14r
		.byte 0x4C @ L
		.ds.b 3, 0
		.long 0x20000000, 0x80091A0, 0x1DC, 0x2000102C,	0x8008FA0
unk_80091A0:	.byte 0xFF		@ DATA XREF: sub_8004180:loc_800418Co
					@ ROM:off_80041ACo
		.ds.b 3, 0
		.byte	 0
		.byte 0xE0
		.ds.b 2, 0
		.byte 0xFF
		.byte 0xE0
		.ds.b 2, 0xFF
		.long 0xFFFF, 0xBB8, 0x34333231, 0x3635, 0
		.long aSegger		@ "SEGGER"
		.long aJLink		@ "J-Link"
		.byte	 0
		.byte 0x40
		.ds.b 2, 0
		.ds.l 4, 0
		.byte	 0
		.byte 0x10
		.ds.b 2, 0
		.long 0
		.byte 0x80 @ 
		.byte 0x25
		.ds.b 2, 0
		.byte 0x66 @ f
		.byte 0x13
		.ds.b 2, 1
dword_80091EC:	.long 0x3C081, 0	@ DATA XREF: sub_8004204+4o
					@ ROM:off_8004210o
unk_80091F4:	.byte 0xA5 @ ¥		@ DATA XREF: sub_8004290+8o
					@ ROM:off_800429Co
		.ds.b 3, 0
		.long 0
unk_80091FC:	.byte 0x8D @ 		@ DATA XREF: sub_80042A0+8o
					@ ROM:off_80042C8o
		.ds.b 3, 0
		.long 0
unk_8009204:	.byte 0x81 @ 		@ DATA XREF: sub_8004328o
					@ ROM:off_8004390o
		.byte 0xA9, 0xB1, 0x99
		.long 0xBB938BA3
dword_800920C:	.long 0xFFFFFFFF, 0x9EFFFFFF, 0xFFFFFFE7, 0xFFFFFFFF, 0xFFFFEDB6
					@ DATA XREF: sub_800439C+2o
					@ ROM:off_80043F4o
		.long 0xFFFFFFFF, 0xA50000FF
		.ds.l 2, 0
dword_8009230:	.ds.l 7, 0xFFFFFFFF	@ DATA XREF: sub_800439Co
					@ ROM:off_80043F0o
		.long 0
		.byte 0xF0 @ ð
		.ds.b 3, 0
unk_8009254:	.byte 0x33 @ 3		@ DATA XREF: sub_8005380o
					@ ROM:off_8005388o ...
		.byte 0x58, 0xEA, 0x88
dword_8009258:	.long 0x466E614A, 0x614D6265, 0x72704172, 0x4A79614D, 0x754A6E75
					@ DATA XREF: sub_8005AFCo
					@ ROM:off_8005B84o ...
		.long 0x6775416C, 0x4F706553, 0x6F4E7463, 0x63654476
dword_800927C:	.long 0x44AA20,	1, 0xFFFF @ DATA XREF: sub_80063ACo
					@ ROM:off_80063B0o ...
		.ds.l 2, 0
aSegger:	.ascii "SEGGER"         @ DATA XREF: ROM:080091C0o
					@ ROM:0800EDC0o
		.byte 0
		.byte 0
aJLink:		.ascii "J-Link"         @ DATA XREF: ROM:080091C4o
					@ ROM:0800EDC4o
		.byte 0
		.byte 0
off_80092A0:	.long loc_80069CC+1	@ DATA XREF: sub_8006598+12o
					@ sub_8006694+Eo ...
		.long loc_80069D0+1
		.long loc_800680C+1
		.long sub_8006980+1
		.long sub_80069B8+1
		.long sub_800681C+1
		.long sub_800691C+1
		.long sub_8006944+1
		.long sub_8006830+1
		.long sub_80068D8+1
off_80092C8:	.long sub_8007C6C+1	@ DATA XREF: sub_8007880o
					@ ROM:off_8007888o ...
		.long loc_8007CD0+1
		.long sub_8007CE0+1
		.long locret_8007D48+1
		.long loc_8007CCC+1
		.long loc_8007D4C+1
		.long loc_8007DA0+1
		.long loc_8007C3C+1
		.long sub_8007BF4+1
		.long sub_8007C30+1
		.long loc_8007C4C+1
		.long sub_8007C54+1
		.long loc_8007D98+1
		.long sub_8007D58+1
		.long locret_8007D9C+1
		.long locret_8007DA4+1
		.long 0
aMaintask:	.ascii "MainTask"       @ DATA XREF: sub_8008ECC+28o
					@ ROM:off_8008F14o ...
		.byte 0
		.ds.b 3, 0
dword_8009318:	.long 0xFFFF, 0xEA00002E @ DATA	XREF: sub_8004314+2o
					@ ROM:off_8004320o
		.ds.l 4, 0xE59FF014
		.long 0xFFFFFFFF
		.ds.l 2, 0xE59FF010
		.long 0x40008004, 0x40008008, 0x4000800C, 0x40008010, 0x20003878
		.long 0x4000801C
		.ds.l 2, 0xFFFFFFFF
		.ds.l 4, 0
		.byte 0x4A @ J
aLinkArmStr711C:.ascii "-Link ARM-STR711 compiled Feb 19 2007 16:25:44"
		.byte 0
		.ds.l 0x10, 0
@ ---------------------------------------------------------------------------
		.code 32
		MOVS	R0, R0
		B	loc_8009600
@ ---------------------------------------------------------------------------
		.byte 0x1F
		.byte	 0
		.byte 0xC0 @ À
		.byte 0xE3 @ ã
		.byte 0x12
		.byte	 0
		.byte 0x80 @ 
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0xF0 @ ð
		.byte 0x21 @ !
		.byte 0xE1 @ á
		.byte 0x70 @ p
		.byte 0xD0 @ Ð
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte 0x1F
		.byte	 0
		.byte 0xC0 @ À
		.byte 0xE3 @ ã
		.byte 0x1F
		.byte	 0
		.byte 0x80 @ 
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0xF0 @ ð
		.byte 0x21 @ !
		.byte 0xE1 @ á
		.byte 0x64 @ d
		.byte 0xD0 @ Ð
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte 0x64 @ d
		.byte	 0
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte  0xF
		.byte 0xE0 @ à
		.byte 0xA0 @  
		.byte 0xE1 @ á
		.byte 0x10
		.byte 0xFF
		.byte 0x2F @ /
		.byte 0xE1 @ á
		.byte 0x5C @ \
		.byte 0x30 @ 0
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte 0x20
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xE0 @ à
		.byte 0xE3 @ ã
		.byte 0x40 @ @
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte  0xC
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte 0x1C
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 8
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.long 0xE3A04000
@ ---------------------------------------------------------------------------
		ANDS	R0, R3
		B	loc_8008F42+2
@ ---------------------------------------------------------------------------
		MOVS	R0, #0x20
		B	loc_8009B82
@ ---------------------------------------------------------------------------
		MOVS	R0, R0
		B	loc_8009B86
@ ---------------------------------------------------------------------------
		.byte 0x60 @ `
		.byte 0x50 @ P
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 5
		.byte	 0
		.byte 0x83 @ 
		.byte 0xE7 @ ç
		.long 0xE2811004
@ ---------------------------------------------------------------------------
		STR	R4, [R0,R0]
		B	loc_8009960
@ ---------------------------------------------------------------------------
		MOVS	R0, #1
		B	locret_80098FE
@ ---------------------------------------------------------------------------
		.long 0x1AFFFFFA, 0xE59F0010, 0xE12FFF10, 0x20003C00, 0x20003BC0
		.long 0x4000A3A9, 0xFFFFF800, 0x4000819C, 0x47702001, 0x4C0CB570
		.long 0xB0824E0C, 0x1D240025, 0xF003E003, 0x350CF975, 0x42B5340C
		.long 0x6861D208, 0x682A6820, 0xD1F44281, 0xF0032100, 0xE7F2F975
		.long 0xBC70B002, 0x4700BC01, 0x4000B9C8, 0x4000B9F8, 0xE28FC001
		.long 0xE12FFF1C
		.long 0x4D054C04
@ ---------------------------------------------------------------------------
		LDR	R6, =0x40008161
		LDR	R7, =0x400081C9
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		CMP	R0, #0
		BEQ	loc_80094E4
		MOV	LR, R7
		BX	R6
@ ---------------------------------------------------------------------------
		.byte 0x5D @ ]
		.byte 0x81, 0, 0x40
		.long 0x400081B1
dword_80094DC:	.long 0x40008161	@ DATA XREF: ROM:080094C4r
dword_80094E0:	.long 0x400081C9	@ DATA XREF: ROM:080094C6r
@ ---------------------------------------------------------------------------
		.code 16

loc_80094E4:				@ CODE XREF: ROM:080094CEj
		LDR	R4, =0x4000B3B9
		LDR	R5, =0x400081D3
		MOVS	R0, #0
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		LDR	R4, =0x4000B429
		LDR	R5, =0x4000B48D
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		.align 4
off_80094F8:	.long 0x4000B3B9	@ DATA XREF: ROM:loc_80094E4r
off_80094FC:	.long 0x400081D3	@ DATA XREF: ROM:080094E6r
off_8009500:	.long 0x4000B429	@ DATA XREF: ROM:080094EEr
off_8009504:	.long 0x4000B48D	@ DATA XREF: ROM:080094F0r

@ =============== S U B	R O U T	I N E =======================================


sub_8009508:				@ CODE XREF: ROM:0800966Ap
		MOVS	R3, #0
		STR	R3, [R0,#0xC]
		STR	R2, [R0,#0x14]
		STR	R1, [R0]
		ADDS	R1, R1,	R2
		STR	R1, [R0,#4]
		ADDS	R1, R1,	R2
		STR	R1, [R0,#8]
		BX	LR
@ End of function sub_8009508

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800951C:				@ CODE XREF: sub_80095C0+Ep
					@ ROM:0800970Cp ...

@ FUNCTION CHUNK AT 0800AC4E SIZE 000000A8 BYTES
@ FUNCTION CHUNK AT 0800C5B4 SIZE 00000004 BYTES

		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R7, R1
		LDR	R5, [R4,#0xC]
		LDR	R6, [R7,#4]
		LDR	R0, [R4,#0x14]
		LSLS	R0, R0,	#3
		ADDS	R1, R6,	R5
		CMP	R0, R1
		BCS	loc_8009534
		BL	loc_800AC74
@ ---------------------------------------------------------------------------

loc_8009534:				@ CODE XREF: sub_800951C+12j
		LDR	R7, [R7]
		MOVS	R3, R6
		MOVS	R2, R7
		LDR	R1, [R4,#0xC]
		LDR	R0, [R4]
		BL	loc_800C5B4
@ End of function sub_800951C

@ ---------------------------------------------------------------------------
		MOVS	R3, R6
		ADDS	R0, R6,	#7
		LSRS	R0, R0,	#3
		ADDS	R2, R7,	R0
		LDR	R1, [R4,#0xC]
		LDR	R0, [R4,#8]
		BL	loc_800C5B4
@ ---------------------------------------------------------------------------
		LDR	R0, [R4,#0xC]
		ADDS	R0, R0,	R6
		STR	R0, [R4,#0xC]
		MOVS	R0, R5
		POP	{R4-R7,PC}
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_9. PRESS CTRL-NUMPAD+ TO EXPAND]
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_8009560:				@ CODE XREF: ROM:080097ECp
					@ sub_800992C+74p ...
		PUSH	{LR}
		LDR	R1, [R0,#0xC]
		ADDS	R1, R1,	#7
		LSRS	R3, R1,	#3
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R2, [R0,#4]
		LDR	R1, [R0,#8]
		LDR	R0, [R0]
		BL	loc_800A6B2+2
		POP	{PC}
@ End of function sub_8009560


@ =============== S U B	R O U T	I N E =======================================


sub_8009578:				@ CODE XREF: sub_80095C0+1Ap
		PUSH	{LR}
		LDR	R1, [R0,#0xC]
		ADDS	R1, R1,	#7
		LSRS	R3, R1,	#3
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R2, [R0,#4]
		LDR	R1, [R0,#8]
		LDR	R0, [R0]
		BL	loc_800A6B2+2
		CMP	R0, #0
		BNE	locret_8009596
		BL	loc_800A632+2
@ ---------------------------------------------------------------------------

locret_8009596:				@ CODE XREF: sub_8009578+18j
		POP	{PC}
@ End of function sub_8009578

@ ---------------------------------------------------------------------------
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		LDR	R6, =0x801

loc_80095A0:				@ CODE XREF: ROM:080095B6j
		CMP	R5, R6
		BCC	loc_80095A8
		SUBS	R7, R6,	#1
		B	loc_80095AA
@ ---------------------------------------------------------------------------

loc_80095A8:				@ CODE XREF: ROM:080095A2j
		MOVS	R7, R5

loc_80095AA:				@ CODE XREF: ROM:080095A6j
		MOVS	R1, R7
		MOVS	R0, R4
		BL	loc_800BEC0
@ ---------------------------------------------------------------------------
		ADDS	R4, R4,	R7
		SUBS	R5, R5,	R7
		BNE	loc_80095A0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_80095BC:	.long 0x801		@ DATA XREF: ROM:0800959Er

@ =============== S U B	R O U T	I N E =======================================


sub_80095C0:				@ CODE XREF: ROM:08009670p
					@ ROM:08009AB4p ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R5, =0x20002868
		LDR	R6, [R5]
		ADDS	R6, #0x64

loc_80095CA:				@ CODE XREF: sub_80095C0+58j
		LDR	R1, =0x200004AC
		MOVS	R0, R4
		BL	sub_800951C
		LDR	R1, =0x2000008C
		LDRH	R1, [R1]
		ADDS	R7, R0,	R1
		MOVS	R0, R4
		BL	sub_8009578
		CMP	R0, #0
		BNE	locret_800961C
		LSRS	R0, R7,	#3
		LDR	R1, [R4,#4]
		ADDS	R2, R1,	R0
		LDRB	R0, [R2]
		LSLS	R3, R7,	#0x1D
		LSRS	R3, R3,	#0x1D
		BEQ	loc_80095FE
		LSRS	R0, R3
		MOVS	R1, R0
		LDRB	R0, [R2,#1]
		MOVS	R2, #8
		SUBS	R2, R2,	R3
		LSLS	R0, R2
		ORRS	R0, R1

loc_80095FE:				@ CODE XREF: sub_80095C0+2Ej
		MOVS	R1, #0x19

loc_8009600:				@ CODE XREF: ROM:080093DEj
		ANDS	R1, R0
		CMP	R1, #9
		BNE	loc_800960A
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800960A:				@ CODE XREF: sub_80095C0+44j
		LSLS	R0, R0,	#0x1B
		BPL	loc_8009612
		MOVS	R0, #3
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_8009612:				@ CODE XREF: sub_80095C0+4Cj
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		CMP	R0, #1
		BGE	loc_80095CA
		MOVS	R0, #2

locret_800961C:				@ CODE XREF: sub_80095C0+20j
		POP	{R4-R7,PC}
@ End of function sub_80095C0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_8009620:	.long 0x20002868	@ DATA XREF: sub_80095C0+4r

@ =============== S U B	R O U T	I N E =======================================


sub_8009624:				@ CODE XREF: ROM:080097D4p
					@ ROM:0800980Ap ...
		PUSH	{R4,LR}
		SUB	SP, SP,	#0x78
		MOVS	R4, R0
		BL	loc_800A632+2
@ End of function sub_8009624

@ ---------------------------------------------------------------------------
		CMP	R0, #0
		BNE	loc_8009674
		LDR	R0, [R4,#0x10]
		LSRS	R1, R0,	#3
		LDR	R2, [R4,#4]
		ADDS	R1, R2,	R1
		LDRB	R2, [R1]
		LSLS	R0, R0,	#0x1D
		LSRS	R0, R0,	#0x1D
		BEQ	loc_8009650
		LSRS	R2, R0
		MOVS	R3, R2
		LDRB	R2, [R1,#1]
		MOVS	R1, #8
		SUBS	R0, R1,	R0
		LSLS	R2, R0
		ORRS	R2, R3

loc_8009650:				@ CODE XREF: ROM:08009640j
		MOVS	R0, #0x19
		ANDS	R0, R2
		CMP	R0, #9
		BNE	loc_800965C
		MOVS	R0, #0
		B	loc_8009674
@ ---------------------------------------------------------------------------

loc_800965C:				@ CODE XREF: ROM:08009656j
		LSLS	R0, R2,	#0x1B
		BPL	loc_8009664
		MOVS	R0, #3
		B	loc_8009674
@ ---------------------------------------------------------------------------

loc_8009664:				@ CODE XREF: ROM:0800965Ej
		MOVS	R2, #0x20
		ADD	R1, SP,	#0x18
		MOV	R0, SP
		BL	sub_8009508
		MOV	R0, SP
		BL	sub_80095C0

loc_8009674:				@ CODE XREF: ROM:08009630j
					@ ROM:0800965Aj ...
		ADD	SP, SP,	#0x78
		POP	{R4,PC}

@ =============== S U B	R O U T	I N E =======================================


sub_8009678:				@ CODE XREF: ROM:0800988Cp
					@ ROM:08009896p ...
		STR	R1, [R0]
		STR	R2, [R0,#4]
		ADDS	R2, R2,	#7
		ASRS	R0, R2,	#3
		LSLS	R0, R0,	#1
		ADDS	R0, R1,	R0
		BX	LR
@ End of function sub_8009678

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_8009688:				@ CODE XREF: ROM:0800972Ep
					@ ROM:08009774p ...
		PUSH	{LR}
		MOVS	R3, R2
		LSLS	R2, R3,	#0x1D
		LSRS	R2, R2,	#0x1D
		LSRS	R3, R3,	#3
		LDR	R0, [R0]
		ADDS	R0, R0,	R3
		BL	dword_800C578
		POP	{PC}
@ End of function sub_8009688


@ =============== S U B	R O U T	I N E =======================================


sub_800969C:				@ CODE XREF: ROM:080097C8p
		PUSH	{R4-R7,LR}
		MOVS	R4, R1
		MOVS	R5, R3
		LDR	R6, [R0]

loc_80096A4:				@ CODE XREF: sub_800969C+24j
		LDR	R1, [R4]
		ADDS	R4, R4,	#4
		LSRS	R0, R2,	#3
		ADDS	R6, R6,	R0
		LSLS	R7, R2,	#0x1D
		LSRS	R7, R7,	#0x1D
		MOVS	R2, R7
		MOVS	R0, R6
		BL	dword_800C578
		LDR	R0, =0x200004D8
		LDR	R0, [R0]
		ADDS	R2, R7,	R0
		SUBS	R5, R5,	#1
		BNE	loc_80096A4
		MOVS	R0, R4
		POP	{R4-R7,PC}
@ End of function sub_800969C

@ ---------------------------------------------------------------------------
		.align 4
dword_80096C8:	.long 0x200004D8	@ DATA XREF: sub_800969C+1Cr
@ ---------------------------------------------------------------------------
		PUSH	{R0,R2,R4-R7,LR}
		SUB	SP, SP,	#0xC
		MOVS	R4, R1
		MOVS	R0, #0
		STR	R0, [SP,#4]
		STR	R0, [SP]

loc_80096D8:				@ CODE XREF: ROM:08009806j
		LDR	R0, [SP]
		MOVS	R1, #1
		ANDS	R1, R0
		MOVS	R0, #0x18
		MULS	R1, R0
		LDR	R0, =0x20000504
		ADDS	R5, R0,	R1
		CMP	R4, #0xE
		BCS	loc_80096EE
		MOVS	R6, R4
		B	loc_80096F0
@ ---------------------------------------------------------------------------

loc_80096EE:				@ CODE XREF: ROM:080096E8j
		MOVS	R6, #0xE

loc_80096F0:				@ CODE XREF: ROM:080096ECj
		LDR	R0, [SP,#0x10]
		LDR	R0, [R0]
		CMP	R0, R6
		BEQ	loc_80097B8
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1F
		BPL	loc_8009702
		MOVS	R0, #0
		B	loc_8009704
@ ---------------------------------------------------------------------------

loc_8009702:				@ CODE XREF: ROM:080096FCj
		MOVS	R0, R6

loc_8009704:				@ CODE XREF: ROM:08009700j
		LDR	R1, [SP,#0x10]
		STR	R0, [R1]
		LDR	R1, =0x200004CC
		MOVS	R0, R5
		BL	sub_800951C
		MOVS	R7, R0
		MOVS	R0, #1
		LSLS	R0, R6
		SUBS	R0, R0,	#1
		LSLS	R0, R0,	#1
		STR	R0, [SP,#8]
		LDR	R1, =0xE8900000
		ADDS	R0, R0,	R1
		BL	sub_800C544
		LDR	R1, =0x20000088
		LDRH	R1, [R1]
		ADDS	R2, R7,	R1
		MOVS	R1, R0
		MOVS	R0, R5
		BL	sub_8009688
		LDR	R1, =0x200004D4
		MOVS	R0, R5
		BL	sub_800951C
		LDR	R1, =0x20000538
		LDR	R2, =0x20000086
		LDRH	R2, [R2]
		ADDS	R0, R0,	R2
		STR	R0, [R1]
		CMP	R6, #2
		BCC	loc_8009756
		SUBS	R7, R6,	#1

loc_800974A:				@ CODE XREF: ROM:08009754j
		LDR	R1, =0x200004D4
		MOVS	R0, R5
		BL	sub_800951C
		SUBS	R7, R7,	#1
		BNE	loc_800974A

loc_8009756:				@ CODE XREF: ROM:08009746j
		LDR	R1, =0x200004DC
		MOVS	R0, R5
		BL	sub_800951C
		MOVS	R7, R0
		LDR	R0, [SP,#8]
		LDR	R1, =0xE8A00000
		ADDS	R0, R0,	R1
		BL	sub_800C544
		MOVS	R1, R0
		LDR	R0, =0x2000008A
		LDRH	R0, [R0]
		ADDS	R2, R7,	R0
		MOVS	R0, R5
		BL	sub_8009688
		LDR	R1, =0x200004AC
		MOVS	R0, R5
		BL	sub_800951C
		LDR	R1, =0x2000008C
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [R5,#0x10]
		MOVS	R0, R5
		BL	nullsub_9
		CMP	R6, #0xE
		BNE	loc_80097BE
		LDR	R0, [R5,#0xC]
		ADDS	R0, R0,	#7
		LSRS	R7, R0,	#3
		MOVS	R2, R7
		LDR	R1, [R5]
		LDR	R0, =0x2000051C
		LDR	R0, [R0]
		BL	loc_800C664
@ ---------------------------------------------------------------------------
		MOVS	R2, R7
		LDR	R1, [R5,#8]
		LDR	R0, =0x20000524
		LDR	R0, [R0]
		BL	loc_800C664
@ ---------------------------------------------------------------------------
		LDR	R0, =0x2000052C
		LDR	R1, [R5,#0x10]
		STR	R1, [R0]
		B	loc_80097BE
@ ---------------------------------------------------------------------------

loc_80097B8:				@ CODE XREF: ROM:080096F6j
		LDR	R0, =0x2000053C
		LDR	R0, [R0]
		STR	R0, [R5,#0xC]

loc_80097BE:				@ CODE XREF: ROM:08009790j
					@ ROM:080097B6j
		MOVS	R3, R6
		LDR	R0, =0x20000538
		LDR	R2, [R0]
		LDR	R1, [SP,#0xC]
		MOVS	R0, R5
		BL	sub_800969C
		STR	R0, [SP,#0xC]
		LDR	R0, [SP,#4]
		CMP	R0, #0
		BEQ	loc_80097E4
		BL	sub_8009624
		CMP	R0, #0
		BEQ	loc_80097E4
		LDR	R1, =0x20000534
		ADDS	R4, #0xE

loc_80097E0:				@ CODE XREF: ROM:080097F6j
		STR	R4, [R1]
		B	loc_8009816
@ ---------------------------------------------------------------------------

loc_80097E4:				@ CODE XREF: ROM:080097D2j
					@ ROM:080097DAj
		LDR	R0, =0x2000053C
		LDR	R1, [R5,#0xC]
		STR	R1, [R0]
		MOVS	R0, R5
		BL	sub_8009560
		CMP	R0, #0
		BEQ	loc_80097F8
		LDR	R1, =0x20000534
		B	loc_80097E0
@ ---------------------------------------------------------------------------

loc_80097F8:				@ CODE XREF: ROM:080097F2j
		SUBS	R4, R4,	R6
		LDR	R0, [SP]
		ADDS	R0, R0,	#1
		STR	R0, [SP]
		STR	R5, [SP,#4]
		CMP	R4, #0
		BEQ	loc_8009808
		B	loc_80096D8
@ ---------------------------------------------------------------------------

loc_8009808:				@ CODE XREF: ROM:08009804j
		MOVS	R0, R5
		BL	sub_8009624
		CMP	R0, #0
		BEQ	loc_8009816
		LDR	R1, =0x20000534
		STR	R6, [R1]

loc_8009816:				@ CODE XREF: ROM:080097E2j
					@ ROM:08009810j
		ADD	SP, SP,	#0x14
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_800981C:	.long 0xE8900000	@ DATA XREF: ROM:0800971Cr
dword_8009820:	.long 0x20000088	@ DATA XREF: ROM:08009724r
dword_8009824:	.long 0x20000538	@ DATA XREF: ROM:0800973Ar
					@ ROM:080097C0r
dword_8009828:	.long 0x20000086	@ DATA XREF: ROM:0800973Cr
dword_800982C:	.long 0xE8A00000	@ DATA XREF: ROM:08009762r
dword_8009830:	.long 0x2000008A	@ DATA XREF: ROM:0800976Cr
dword_8009834:	.long 0x2000051C	@ DATA XREF: ROM:0800979Cr
dword_8009838:	.long 0x20000524	@ DATA XREF: ROM:080097A8r
dword_800983C:	.long 0x2000052C	@ DATA XREF: ROM:080097B0r
dword_8009840:	.long 0x2000053C	@ DATA XREF: ROM:loc_80097B8r
					@ ROM:loc_80097E4r
dword_8009844:	.long 0x20000504	@ DATA XREF: ROM:080096E2r
dword_8009848:	.long 0x200004AC	@ DATA XREF: sub_80095C0:loc_80095CAr
					@ ROM:08009778r
dword_800984C:	.long 0x2000008C	@ DATA XREF: sub_80095C0+12r
					@ ROM:08009780r
dword_8009850:	.long 0x20000534	@ DATA XREF: ROM:080097DCr
					@ ROM:080097F4r ...
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		CMP	R0, #1
		BEQ	locret_80098FE
		LDR	R4, =0x20000070
		CMP	R0, #0
		BNE	loc_8009864
		MOVS	R1, #0x24
		B	loc_800986A
@ ---------------------------------------------------------------------------

loc_8009864:				@ CODE XREF: ROM:0800985Ej
		CMP	R0, #2
		BNE	loc_8009870
		MOVS	R1, #0x32

loc_800986A:				@ CODE XREF: ROM:08009862j
		MOVS	R0, R4
		BL	loc_800BA50
@ ---------------------------------------------------------------------------

loc_8009870:				@ CODE XREF: ROM:08009866j
		LDRH	R0, [R4,#0x1E]
		LDR	R1, =0x401
		CMP	R0, R1
		BCC	loc_800987C
		BL	loc_800AC74
@ ---------------------------------------------------------------------------

loc_800987C:				@ CODE XREF: ROM:08009876j
		LDR	R5, =0x200000A4
		LDRH	R1, [R4,#0x1E]
		MOVS	R0, R5
		BL	loc_800BA50
@ ---------------------------------------------------------------------------
		LDRH	R2, [R4]
		MOVS	R1, R5
		LDR	R0, =0x200004A4
		BL	sub_8009678
		MOVS	R1, R0
		LDRH	R2, [R4,#2]
		LDR	R0, =0x200004BC
		BL	sub_8009678
		LDRH	R2, [R4,#4]
		MOVS	R1, R0
		LDR	R0, =0x200004C4
		BL	sub_8009678
		LDRH	R2, [R4,#6]
		MOVS	R1, R0
		LDR	R0, =0x200004CC
		BL	sub_8009678
		LDRH	R2, [R4,#8]
		MOVS	R1, R0
		LDR	R0, =0x200004D4
		BL	sub_8009678
		LDRH	R2, [R4,#0xA]
		MOVS	R1, R0
		LDR	R0, =0x200004DC
		BL	sub_8009678
		LDRH	R2, [R4,#0xC]
		MOVS	R1, R0
		LDR	R0, =0x200004AC
		BL	sub_8009678
		LDRH	R2, [R4,#0xE]
		MOVS	R1, R0
		LDR	R0, =0x200004B4
		BL	sub_8009678
		LDRH	R2, [R4,#0x24]
		MOVS	R1, R0
		LDR	R0, =0x200004E4
		BL	sub_8009678
		LDRH	R2, [R4,#0x26]
		MOVS	R1, R0
		LDR	R0, =0x200004EC
		BL	sub_8009678
		LDRH	R2, [R4,#0x28]
		MOVS	R1, R0
		LDR	R0, =0x200004F4
		BL	sub_8009678
		LDRH	R2, [R4,#0x2A]
		MOVS	R1, R0
		LDR	R0, =0x200004FC
		BL	sub_8009678

locret_80098FE:				@ CODE XREF: ROM:08009456j
					@ ROM:08009858j
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
dword_8009900:	.long 0x401		@ DATA XREF: ROM:08009872r
dword_8009904:	.long 0x200000A4	@ DATA XREF: ROM:loc_800987Cr
dword_8009908:	.long 0x20000070	@ DATA XREF: ROM:0800985Ar
dword_800990C:	.long 0x200004A4	@ DATA XREF: ROM:0800988Ar
dword_8009910:	.long 0x200004BC	@ DATA XREF: ROM:08009894r
dword_8009914:	.long 0x200004C4	@ DATA XREF: ROM:0800989Er
dword_8009918:	.long 0x200004CC	@ DATA XREF: ROM:08009708r
					@ ROM:080098A8r
dword_800991C:	.long 0x200004D4	@ DATA XREF: ROM:08009732r
					@ ROM:loc_800974Ar ...
dword_8009920:	.long 0x200004DC	@ DATA XREF: ROM:loc_8009756r
					@ ROM:080098BCr
dword_8009924:	.long 0x200004AC	@ DATA XREF: ROM:080098C6r
dword_8009928:	.long 0x200004B4	@ DATA XREF: ROM:080098D0r

@ =============== S U B	R O U T	I N E =======================================


sub_800992C:				@ CODE XREF: ROM:08009AC4p
					@ ROM:08009B28p ...
		PUSH	{R4-R7,LR}
		SUB	SP, SP,	#4
		MOVS	R4, R0
		MOVS	R7, R2
		LDR	R5, =0x20000540
		CMP	R3, #0
		BNE	loc_800999A
		LDR	R1, =0x200004EC
		BL	sub_800951C
		MOVS	R6, R0
		MOVS	R0, #1
		LSLS	R0, R7
		LSLS	R0, R0,	#1
		LDR	R1, =0xE87FFFFE
		ADDS	R0, R0,	R1
		BL	sub_800C544
		MOVS	R1, R0
		LDR	R0, =0x200000A0
		LDRH	R0, [R0]
		ADDS	R2, R6,	R0
		MOVS	R0, R4
		BL	sub_8009688
		LDR	R6, =0x200004F4

loc_8009960:				@ CODE XREF: ROM:08009452j
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_800951C
		LDR	R1, =0x2000009C
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [SP,#0]
		CMP	R7, #2
		BCC	loc_8009982
		SUBS	R7, R7,	#1

loc_8009976:				@ CODE XREF: sub_800992C+54j
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_800951C
		SUBS	R7, R7,	#1
		BNE	loc_8009976

loc_8009982:				@ CODE XREF: sub_800992C+46j
		LDR	R1, =0x200004FC
		MOVS	R0, R4
		BL	sub_800951C
		MOVS	R0, R4
		BL	nullsub_9
		LDR	R0, [R4,#0xC]
		STR	R0, [R5]
		LDR	R0, [SP,#0]
		STR	R0, [R4,#0x10]
		B	loc_800999E
@ ---------------------------------------------------------------------------

loc_800999A:				@ CODE XREF: sub_800992C+Cj
		LDR	R0, [R5]
		STR	R0, [R4,#0xC]

loc_800999E:				@ CODE XREF: sub_800992C+6Cj
		MOVS	R0, R4
		BL	sub_8009560
		CMP	R0, #0
		BNE	loc_80099AC
		BL	loc_800A632+2
@ ---------------------------------------------------------------------------

loc_80099AC:				@ CODE XREF: sub_800992C+7Aj
		ADD	SP, SP,	#4
		POP	{R4-R7,PC}
@ End of function sub_800992C

@ ---------------------------------------------------------------------------
dword_80099B0:	.long 0x20000540	@ DATA XREF: sub_800992C+8r
dword_80099B4:	.long 0xE87FFFFE	@ DATA XREF: sub_800992C+1Cr
dword_80099B8:	.long 0x200000A0	@ DATA XREF: sub_800992C+26r
dword_80099BC:	.long 0x2000009C	@ DATA XREF: sub_800992C+3Cr
dword_80099C0:	.long 0x200004EC	@ DATA XREF: ROM:080098E4r
					@ sub_800992C+Er
dword_80099C4:	.long 0x200004F4	@ DATA XREF: ROM:080098EEr
					@ sub_800992C+32r
dword_80099C8:	.long 0x200004FC	@ DATA XREF: ROM:080098F8r
					@ sub_800992C:loc_8009982r

@ =============== S U B	R O U T	I N E =======================================


sub_80099CC:				@ CODE XREF: ROM:08009AD2p
					@ ROM:08009B36p
		PUSH	{R0,R4-R7,LR}
		MOVS	R3, R2
		LDR	R2, [R0,#0x10]
		LDR	R0, =0x20000090
		LDRB	R0, [R0]
		CMP	R0, #0
		BEQ	loc_8009A44
		CMP	R3, #0
		BEQ	loc_8009A80
		MOVS	R4, #0xFF
		LDR	R5, =0x4000BA94

loc_80099E2:				@ CODE XREF: sub_80099CC+76j
		LSRS	R0, R2,	#3
		LDR	R6, [SP,#0]
		LDR	R6, [R6,#4]
		ADDS	R6, R6,	R0
		LSLS	R0, R2,	#0x1D
		LSRS	R0, R0,	#0x1D
		LSLS	R7, R6,	#0x1E
		LSRS	R7, R7,	#0x1B
		ADDS	R0, R0,	R7
		MOVS	R7, #3
		BICS	R6, R7
		LDR	R7, [R6]
		CMP	R0, #0
		BEQ	loc_8009A10
		LSRS	R7, R0
		MOV	R12, R7
		LDR	R6, [R6,#4]
		MOVS	R7, #0x20
		SUBS	R0, R7,	R0
		LSLS	R6, R0
		MOV	R7, R12
		ORRS	R6, R7
		MOVS	R7, R6

loc_8009A10:				@ CODE XREF: sub_80099CC+30j
		LDR	R0, =0x200004F8
		LDR	R0, [R0]
		ADDS	R2, R2,	R0
		LSRS	R6, R7,	#8
		ANDS	R7, R4
		LDRB	R0, [R5,R7]
		LSLS	R7, R0,	#0x18
		MOVS	R0, #0xFF
		ANDS	R0, R6
		LDRB	R0, [R5,R0]
		LSLS	R0, R0,	#0x10
		ORRS	R0, R7
		LSRS	R6, R6,	#8
		MOVS	R7, R4
		ANDS	R7, R6
		LDRB	R7, [R5,R7]
		LSLS	R7, R7,	#8
		ORRS	R7, R0
		LSRS	R0, R6,	#8
		LDRB	R0, [R5,R0]
		ORRS	R0, R7
		STR	R0, [R1]
		ADDS	R1, R1,	#4
		SUBS	R3, R3,	#1
		BEQ	loc_8009A80
		B	loc_80099E2
@ ---------------------------------------------------------------------------

loc_8009A44:				@ CODE XREF: sub_80099CC+Cj
		CMP	R3, #0
		BEQ	loc_8009A80

loc_8009A48:				@ CODE XREF: sub_80099CC+B2j
		LSRS	R0, R2,	#3
		LDR	R4, [SP,#0]
		LDR	R4, [R4,#4]
		ADDS	R0, R4,	R0
		LSLS	R4, R2,	#0x1D
		LSRS	R4, R4,	#0x1D
		LSLS	R5, R0,	#0x1E
		LSRS	R5, R5,	#0x1B
		ADDS	R4, R4,	R5
		MOVS	R5, #3
		BICS	R0, R5
		LDR	R5, [R0]
		CMP	R4, #0
		BEQ	loc_8009A72
		LSRS	R5, R4
		MOVS	R6, R5
		LDR	R5, [R0,#4]
		MOVS	R0, #0x20
		SUBS	R0, R0,	R4
		LSLS	R5, R0
		ORRS	R5, R6

loc_8009A72:				@ CODE XREF: sub_80099CC+96j
		LDR	R0, =0x200004F8
		LDR	R0, [R0]
		ADDS	R2, R2,	R0
		STR	R5, [R1]
		ADDS	R1, R1,	#4
		SUBS	R3, R3,	#1
		BNE	loc_8009A48

loc_8009A80:				@ CODE XREF: sub_80099CC+10j
					@ sub_80099CC+74j ...
		ADD	SP, SP,	#4
		POP	{R4-R7,PC}
@ End of function sub_80099CC

@ ---------------------------------------------------------------------------
dword_8009A84:	.long 0x20000090	@ DATA XREF: sub_80099CC+6r
dword_8009A88:	.long 0x4000BA94	@ DATA XREF: sub_80099CC+14r
dword_8009A8C:	.long 0x200004F8	@ DATA XREF: sub_80099CC:loc_8009A10r
					@ sub_80099CC:loc_8009A72r
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#8
		MOVS	R4, R0
		LDR	R5, =0xFFFFFFFF
		LDR	R1, =0x200004E4
		MOVS	R0, R5
		BL	sub_800951C
		LDR	R0, =0xE4D02001
		BL	sub_800C544
		MOVS	R1, R0
		LDR	R0, =0x2000009E
		LDRH	R2, [R0]
		MOVS	R0, R5
		BL	sub_8009688
		MOVS	R0, R5
		BL	sub_80095C0
		CMP	R0, #0
		BNE	loc_8009AEA
		MOVS	R3, #0
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800992C
		CMP	R0, #0
		BNE	loc_8009AEA
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_80099CC
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1B
		LSRS	R0, R0,	#0x1B
		CMP	R0, #0x1F
		BEQ	loc_8009AE4
		MOVS	R0, #4
		B	loc_8009AEA
@ ---------------------------------------------------------------------------

loc_8009AE4:				@ CODE XREF: ROM:08009ADEj
		LDR	R0, [SP,#4]
		STRB	R0, [R4]
		MOVS	R0, #0

loc_8009AEA:				@ CODE XREF: ROM:08009ABAj
					@ ROM:08009ACAj ...
		ADD	SP, SP,	#8
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
		.align 0x10
dword_8009AF0:	.long 0xE4D02001	@ DATA XREF: ROM:08009AA0r
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#8
		MOVS	R4, R0
		LDR	R5, =0xFFFFFFFF
		LDR	R1, =0x200004E4
		MOVS	R0, R5
		BL	sub_800951C
		LDR	R0, =0xE0D020B2
		BL	sub_800C544
		MOVS	R1, R0
		LDR	R0, =0x2000009E
		LDRH	R2, [R0]
		MOVS	R0, R5
		BL	sub_8009688
		MOVS	R0, R5
		BL	sub_80095C0
		CMP	R0, #0
		BNE	loc_8009B54
		MOVS	R3, #0
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800992C
		CMP	R0, #0
		BNE	loc_8009B54
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_80099CC
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1B
		LSRS	R0, R0,	#0x1B
		CMP	R0, #0x1F
		BEQ	loc_8009B48
		MOVS	R0, #4
		B	loc_8009B54
@ ---------------------------------------------------------------------------

loc_8009B48:				@ CODE XREF: ROM:08009B42j
		LDR	R0, [SP,#4]
		STRB	R0, [R4]
		LDR	R0, [SP,#4]
		LSRS	R0, R0,	#8
		STRB	R0, [R4,#1]
		MOVS	R0, #0

loc_8009B54:				@ CODE XREF: ROM:08009B1Ej
					@ ROM:08009B2Ej ...
		ADD	SP, SP,	#8
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
dword_8009B58:	.long 0xE0D020B2	@ DATA XREF: ROM:08009B04r
dword_8009B5C:	.long 0x200004E4	@ DATA XREF: ROM:080098DAr
					@ ROM:08009A98r ...
dword_8009B60:	.long 0x2000009E	@ DATA XREF: ROM:08009AA8r
					@ ROM:08009B0Cr
@ ---------------------------------------------------------------------------
		PUSH	{R0,R4-R7,LR}
		SUB	SP, SP,	#0x44
		MOVS	R4, R1
		MOVS	R5, #0
		CMP	R4, #0xD
		BCS	loc_8009B74
		MOVS	R6, R4
		B	loc_8009B76
@ ---------------------------------------------------------------------------

loc_8009B74:				@ CODE XREF: ROM:08009B6Ej
		MOVS	R6, #0xD

loc_8009B76:				@ CODE XREF: ROM:08009B72j
		LDR	R7, =0xFFFFFFFF
		CMP	R5, #0
		BEQ	loc_8009B86
		CMP	R6, #0xD
		BNE	loc_8009B86
		MOVS	R0, #1

loc_8009B82:				@ CODE XREF: ROM:0800943Ej
		STR	R0, [SP]
		B	loc_8009BDA
@ ---------------------------------------------------------------------------

loc_8009B86:				@ CODE XREF: ROM:08009442j
					@ ROM:08009B7Aj ...
		MOVS	R0, #0
		STR	R0, [SP]
		LDR	R1, =0xFFFFFFFF
		MOVS	R0, R7
		BL	sub_800951C
		MOVS	R0, #1
		LSLS	R0, R6
		LSLS	R0, R0,	#2
		LDR	R1, =0xFFFFFFFF
		ADDS	R0, R0,	R1
		BL	sub_800C544
		LDR	R1, =0xFFFFFFFF
		LDRH	R2, [R1]
		MOVS	R1, R0
		MOVS	R0, R7
		BL	sub_8009688
		LDR	R1, =0xFFFFFFFF
		MOVS	R0, R7
		BL	sub_800951C
		LDR	R1, =0xFFFFFFFF
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [R7,#0x10]
		MOVS	R0, R7
		BL	nullsub_9
		LDR	R0, [R7,#0xC]
		STR	R0, [SP,#4]
		MOVS	R0, R7
		BL	sub_8009560
		CMP	R0, #0
		BNE	word_8009C4E
		MOVS	R0, R7
		BL	sub_8009624
		CMP	R0, #0
		BNE	word_8009C4E

loc_8009BDA:				@ CODE XREF: ROM:08009B84j
		LDR	R3, [SP]
		ADDS	R2, R6,	#1
		ADD	R1, SP,	#0xC
		MOVS	R0, R7
		ADDS	R0, #0x18
		BL	sub_800992C
		CMP	R0, #0
		BNE	word_8009C4E
		CMP	R4, #0x1A
		BCC	word_8009C16
		LDR	R0, [SP,#4]
		STR	R0, [R7,#0xC]
		MOVS	R0, R7
		BL	sub_8009560
		CMP	R0, #0
		BNE	word_8009C4E
		PUSH	{R0,R1,R3,R5,R7}
@ ---------------------------------------------------------------------------
dword_8009C00:	.long 0xFFFFFFFF	@ DATA XREF: sub_80000F8+72r
					@ sub_80001C4:loc_80001DCr ...
		.ds.l 4, 0xFFFFFFFF
		.ds.b 2, 0xFF
word_8009C16:	.short 0xFFFF		@ CODE XREF: ROM:08009BEEj
		.ds.l 0xD, 0xFFFFFFFF
		.ds.b 2, 0xFF
word_8009C4E:	.short 0xFFFF		@ CODE XREF: ROM:08009BCEj
					@ ROM:08009BD8j ...
		.long 0xFFFFFFFF
dword_8009C54:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009B98r
dword_8009C58:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009BA0r
dword_8009C5C:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009A96r
					@ ROM:08009AFAr ...
dword_8009C60:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009B8Ar
dword_8009C64:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009BACr
dword_8009C68:	.long 0xFFFFFFFF	@ DATA XREF: ROM:08009BB4r
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009DE0:	.byte 0xFF		@ CODE XREF: sub_800A2C0+22p
					@ sub_800A338+22p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009E04:	.byte 0xFF		@ CODE XREF: sub_800A220+7Cp
					@ sub_800A6B8+28p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009E68:	.byte 0xFF		@ CODE XREF: sub_800A030+12p
					@ sub_800A0AC+50p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009E70:	.byte 0xFF		@ CODE XREF: sub_800A030+4p
					@ sub_800A0AC+18p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009E78:	.byte 0xFF		@ CODE XREF: sub_800A518+30p
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009ED0:	.byte 0xFF		@ CODE XREF: sub_800A220+82p
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009F14:	.byte 0xFF		@ CODE XREF: sub_800A06C:loc_800A08Ep
					@ sub_800A220+96p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009F28:	.byte 0xFF		@ CODE XREF: sub_800A06C+16p
					@ sub_800A518+16p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009F9C:	.byte 0xFF		@ CODE XREF: sub_800A6B8:loc_800A6CCp
					@ sub_800A880+12p
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
unk_8009FFC:	.byte 0xFF		@ CODE XREF: sub_800A04C+6p
					@ sub_800A06C+6p ...
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte  0xD
		.byte	 0
		.byte 0xFF
		.byte 0xF7 @ ÷
		.byte 0xFF
		.byte 0xFE @ þ
		.byte	 0
		.byte 0x21 @ !
		.byte	 2
		.byte 0x20
		.byte 0xFF
		.byte 0xF7 @ ÷
		.byte 0x8D @ 
		.byte 0xFF
		.byte	 7
		.byte 0x49 @ I
		.byte	 6
		.byte	 0
		.byte	 4
		.byte 0x20
		.byte 0x29 @ )
		.byte 0x43 @ C
		.byte 0xFF
		.byte 0xF7 @ ÷
		.byte 0x87 @ 
		.byte 0xFF
		.byte	 5
		.byte	 0
		.byte 0x35 @ 5
		.byte 0x43 @ C
		.byte 0x21 @ !
		.byte	 0
		.byte	 5
		.byte 0x20
		.byte 0xFF
		.byte 0xF7 @ ÷
		.byte 0x81 @ 
		.byte 0xFF
		.byte 0x28 @ (
		.byte 0x43 @ C
		.byte 0x70 @ p
		.byte 0xBD @ ½
		.byte	 0
		.byte 0xBF @ ¿
		.byte 0x10
		.byte	 0
		.byte	 0
		.byte 0x23 @ #

@ =============== S U B	R O U T	I N E =======================================


sub_800A030:				@ CODE XREF: sub_800A04C+14p
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	unk_8009E70
		CBZ	R0, loc_800A040
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A040:				@ CODE XREF: sub_800A030+8j
		MOVS	R0, R4
		BL	unk_8009E68
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800A030

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A04C:				@ CODE XREF: sub_800A0A0+4j
		PUSH	{R4,LR}
		MOVS	R4, R1
		MOVS	R1, #2
		BL	unk_8009FFC
		CBZ	R0, loc_800A05E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A05E:				@ CODE XREF: sub_800A04C+Aj
		MOVS	R0, R4
		BL	sub_800A030
		CBZ	R0, locret_800A06A
		MOVS.W	R0, #0xFFFFFFFF

locret_800A06A:				@ CODE XREF: sub_800A04C+18j
		POP	{R4,PC}
@ End of function sub_800A04C


@ =============== S U B	R O U T	I N E =======================================


sub_800A06C:				@ CODE XREF: sub_800A098+4j
					@ sub_800A64C+Ap ...
		PUSH	{R4,LR}
		MOVS	R4, R1
		MOVS	R1, #2
		BL	unk_8009FFC
		CBZ	R0, loc_800A07E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A07E:				@ CODE XREF: sub_800A06C+Aj
		MOVS	R1, R4
		MOVS	R0, #7
		BL	unk_8009F28
		CBZ	R0, loc_800A08E
		MOVS	R0, #0xFFFFFFFE
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A08E:				@ CODE XREF: sub_800A06C+1Aj
		BL	unk_8009F14
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800A06C

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A098:				@ CODE XREF: sub_800A5AC+12p
					@ sub_800A5D8+4p ...
		MOVS	R1, R0
		LDR	R0, =0xE000EDF0
		B	sub_800A06C
@ End of function sub_800A098

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A0A0:				@ CODE XREF: sub_800A5AC+4p
					@ sub_800A5AC+18p ...
		MOVS	R1, R0
		LDR	R0, =0xE000EDF0
		B	sub_800A04C
@ End of function sub_800A0A0

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0
dword_800A0A8:	.long 0xE000EDF0	@ DATA XREF: sub_800A098+2r
					@ sub_800A0A0+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800A0AC:				@ CODE XREF: sub_800A2C0+48p
		PUSH	{R0,R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R1, #0
		MOVS	R6, R2
		BL	unk_8009FFC
		CBZ	R0, loc_800A0C2
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A0C2:				@ CODE XREF: sub_800A0AC+Ej
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A0D0
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A0D0:				@ CODE XREF: sub_800A0AC+1Cj
		CMP	R5, #2
		BCC	loc_800A0FA
		SUBS	R7, R5,	#1

loc_800A0D6:				@ CODE XREF: sub_800A0AC+4Cj
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A0E4
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A0E4:				@ CODE XREF: sub_800A0AC+30j
		LDR	R0, [SP,#0]
		LSLS	R1, R4,	#0x1E
		LSRS	R1, R1,	#0x1B
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		ADDS	R4, R4,	#1
		SUBS	R7, R7,	#1
		STRB.W	R0, [R6],#1
		BNE	loc_800A0D6

loc_800A0FA:				@ CODE XREF: sub_800A0AC+26j
		MOV	R0, SP
		BL	unk_8009E68
		CBZ	R0, loc_800A108
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A108:				@ CODE XREF: sub_800A0AC+54j
		LDR	R0, [SP,#0]
		LSLS	R1, R4,	#0x1E
		LSRS	R1, R1,	#0x1B
		LSRS	R0, R1
		STRB	R0, [R6]
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_800A0AC

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A118:				@ CODE XREF: sub_800A2C0+58p
		PUSH	{R0,R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R1, #1
		MOVS	R7, R2
		BL	unk_8009FFC
		CBZ	R0, loc_800A12E
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A12E:				@ CODE XREF: sub_800A118+Ej
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A13C
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A13C:				@ CODE XREF: sub_800A118+1Cj
		CMP	R5, #2
		BCC	loc_800A16E
		SUBS	R6, R5,	#1

loc_800A142:				@ CODE XREF: sub_800A118+54j
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A150
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A150:				@ CODE XREF: sub_800A118+30j
		LDR	R0, [SP,#0]
		MOVS	R2, #2
		ANDS	R2, R4
		LSLS	R1, R2,	#3
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		ADDS	R4, R4,	#2
		STRB	R0, [R7]
		LDR	R0, [SP,#0]
		LSRS	R0, R0,	#8
		STRB	R0, [R7,#1]
		ADDS	R7, R7,	#2
		SUBS	R6, R6,	#1
		BNE	loc_800A142

loc_800A16E:				@ CODE XREF: sub_800A118+26j
		MOV	R0, SP
		BL	unk_8009E68
		CBZ	R0, loc_800A17C
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A17C:				@ CODE XREF: sub_800A118+5Cj
		LDR	R0, [SP,#0]
		MOVS	R1, #2
		ANDS	R1, R4
		LSLS	R1, R1,	#3
		LSRS	R0, R1
		STR	R0, [SP,#0]
		LDR	R0, [SP,#0]
		STRB.W	R0, [R7],#1
		LDR	R0, [SP,#0]
		LSRS	R0, R0,	#8
		STRB	R0, [R7]
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_800A118


@ =============== S U B	R O U T	I N E =======================================


sub_800A198:				@ CODE XREF: sub_800A2C0+62p
		PUSH	{R0,R4-R7,LR}
		MOVS	R5, R1
		MOVS	R4, R2
		MOVS	R7, #0
		LSLS	R1, R4,	#0x1E
		IT eq
		MOVEQ	R7, #1
		MOVS	R1, #2
		BL	unk_8009FFC
		CBZ	R0, loc_800A1B4
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A1B4:				@ CODE XREF: sub_800A198+14j
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A1C2
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A1C2:				@ CODE XREF: sub_800A198+22j
		CMP	R5, #2
		BCC	loc_800A204
		SUBS	R6, R5,	#1
		CBNZ	R7, loc_800A1DE

loc_800A1CA:				@ CODE XREF: sub_800A198+6Aj
		MOV	R0, SP
		BL	unk_8009E70
		CBZ	R0, loc_800A1EE
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A1D8:				@ CODE XREF: sub_800A198+4Ej
		ADDS	R4, R4,	#4
		SUBS	R6, R6,	#1
		BEQ	loc_800A204

loc_800A1DE:				@ CODE XREF: sub_800A198+30j
		MOVS	R0, R4
		BL	unk_8009E70
		CMP	R0, #0
		BEQ	loc_800A1D8
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A1EE:				@ CODE XREF: sub_800A198+38j
		LDR	R0, [SP,#0]
		STRB	R0, [R4]
		LSRS	R1, R0,	#8
		STRB	R1, [R4,#1]
		LSRS	R1, R0,	#0x10
		STRB	R1, [R4,#2]
		LSRS	R0, R0,	#0x18
		STRB	R0, [R4,#3]
		ADDS	R4, R4,	#4
		SUBS	R6, R6,	#1
		BNE	loc_800A1CA

loc_800A204:				@ CODE XREF: sub_800A198+2Cj
					@ sub_800A198+44j
		MOV	R0, SP
		BL	unk_8009E68
		CBZ	R0, loc_800A212
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800A212:				@ CODE XREF: sub_800A198+72j
		LDR	R1, [SP,#0]
		MOVS	R0, R4
		BL	sub_800EAA0
		MOVS	R0, R5
		POP	{R1,R4-R7,PC}
@ End of function sub_800A198

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A220:				@ CODE XREF: sub_800A338+4Ap
		PUSH.W	{R0,R4-R9,R11,LR}
		MOV	R8, R1
		MOV	R9, R3
		MOVS	R4, R0
		MOVS	R5, R2
		MOVS	R0, #0
		MOV	R11, R0
		MOV	R0, R9
		ASRS	R1, R0,	#1
		MOVS	R0, R4
		BL	unk_8009FFC
		CBZ	R0, loc_800A242

loc_800A23C:				@ CODE XREF: sub_800A220+72j
					@ sub_800A220+7Aj
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_800A2BC
@ ---------------------------------------------------------------------------

loc_800A242:				@ CODE XREF: sub_800A220+1Aj
		MOV	R6, R8
		LSLS	R0, R5,	#0x1E
		BNE	loc_800A25C
		MOV	R0, R9
		CMP	R0, #4
		BNE	loc_800A25C
		MOVS	R0, #1
		MOV	R11, R0
		B	loc_800A258
@ ---------------------------------------------------------------------------

loc_800A254:				@ CODE XREF: sub_800A220+94j
		MOV	R0, R11
		CBZ	R0, loc_800A25C

loc_800A258:				@ CODE XREF: sub_800A220+32j
		LDR	R0, [R5]
		B	loc_800A28A
@ ---------------------------------------------------------------------------

loc_800A25C:				@ CODE XREF: sub_800A220+26j
					@ sub_800A220+2Cj ...
		LDRB	R0, [R5]
		MOV	R1, R9
		CMP	R1, #2
		BLT	loc_800A27E
		LDRB	R1, [R5,#1]
		ORRS.W	R0, R0,	R1,LSL#8
		MOV	R1, R9
		CMP	R1, #3
		BLT	loc_800A27E
		LDRB	R1, [R5,#3]
		MOVS	R2, R0
		LDRB	R0, [R5,#2]
		LSLS	R1, R1,	#0x18
		ORRS.W	R0, R1,	R0,LSL#16
		ORRS	R0, R2

loc_800A27E:				@ CODE XREF: sub_800A220+42j
					@ sub_800A220+4Ej
		MOVS	R2, #4
		MOV	R3, R9
		SUBS	R2, R2,	R3
		ANDS	R2, R4
		LSLS	R1, R2,	#3
		LSLS	R0, R1

loc_800A28A:				@ CODE XREF: sub_800A220+3Aj
		STR	R0, [SP,#0]
		MOVS	R7, #0
		B	loc_800A2A0
@ ---------------------------------------------------------------------------

loc_800A290:				@ CODE XREF: sub_800A220+88j
		CMP	R0, #2
		BNE	loc_800A23C
		MOVS	R0, R7
		ADDS	R7, R7,	#1
		CMP	R0, #0x64
		BEQ	loc_800A23C
		BL	unk_8009E04

loc_800A2A0:				@ CODE XREF: sub_800A220+6Ej
		LDR	R0, [SP,#0]
		BL	unk_8009ED0
		CMP	R0, #1
		BNE	loc_800A290
		ADDS.W	R5, R9,	R5
		ADDS.W	R4, R9,	R4
		SUBS	R6, R6,	#1
		BNE	loc_800A254
		BL	unk_8009F14
		MOV	R0, R8

locret_800A2BC:				@ CODE XREF: sub_800A220+20j
		POP.W	{R1,R4-R9,R11,PC}
@ End of function sub_800A220


@ =============== S U B	R O U T	I N E =======================================


sub_800A2C0:				@ CODE XREF: sub_800A398+1Cp
					@ sub_800A398+42p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #0
		MOV	R9, R3
		B	loc_800A2DE
@ ---------------------------------------------------------------------------

loc_800A2D0:				@ CODE XREF: sub_800A2C0+6Ej
		MOV	R0, R9
		LSLS.W	R0, R7,	R0
		ADDS	R4, R4,	R0
		ADDS.W	R8, R0,	R8
		SUBS	R5, R5,	R7

loc_800A2DE:				@ CODE XREF: sub_800A2C0+Ej
		CBZ	R5, loc_800A330
		MVNS	R7, R4
		BL	unk_8009DE0
		CMP	R0, #3
		BNE	loc_800A2F0
		LSLS	R7, R7,	#0x14
		LSRS	R7, R7,	#0x14
		B	loc_800A2F4
@ ---------------------------------------------------------------------------

loc_800A2F0:				@ CODE XREF: sub_800A2C0+28j
		LSLS	R7, R7,	#0x16
		LSRS	R7, R7,	#0x16

loc_800A2F4:				@ CODE XREF: sub_800A2C0+2Ej
		MOV	R0, R9
		LSRS	R7, R0
		ADDS	R7, R7,	#1
		CMP	R5, R7
		IT cc
		MOVCC	R7, R5
		CBNZ	R0, loc_800A30E
		MOV	R2, R8
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_800A0AC
		B	loc_800A326
@ ---------------------------------------------------------------------------

loc_800A30E:				@ CODE XREF: sub_800A2C0+40j
		CMP	R0, #1
		MOV	R2, R8
		BNE	loc_800A31E
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_800A118
		B	loc_800A326
@ ---------------------------------------------------------------------------

loc_800A31E:				@ CODE XREF: sub_800A2C0+52j
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_800A198

loc_800A326:				@ CODE XREF: sub_800A2C0+4Cj
					@ sub_800A2C0+5Cj
		CMP	R0, #0
		BMI	locret_800A332
		ADDS	R6, R6,	R0
		CMP	R0, R7
		BEQ	loc_800A2D0

loc_800A330:				@ CODE XREF: sub_800A2C0:loc_800A2DEj
		MOVS	R0, R6

locret_800A332:				@ CODE XREF: sub_800A2C0+68j
		POP.W	{R4-R9,PC}
@ End of function sub_800A2C0

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A338:				@ CODE XREF: sub_800A458+1Cp
					@ sub_800A458+42p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R4, #0
		MOVS	R5, R0
		MOVS	R6, R1
		MOV	R9, R3
		B	loc_800A356
@ ---------------------------------------------------------------------------

loc_800A348:				@ CODE XREF: sub_800A338+56j
		MOV	R0, R9
		LSLS.W	R0, R7,	R0
		ADDS	R5, R5,	R0
		ADDS.W	R8, R0,	R8
		SUBS	R6, R6,	R7

loc_800A356:				@ CODE XREF: sub_800A338+Ej
		CBZ	R6, loc_800A390
		MVNS	R7, R5
		BL	unk_8009DE0
		CMP	R0, #3
		BNE	loc_800A368
		LSLS	R7, R7,	#0x14
		LSRS	R7, R7,	#0x14
		B	loc_800A36C
@ ---------------------------------------------------------------------------

loc_800A368:				@ CODE XREF: sub_800A338+28j
		LSLS	R7, R7,	#0x16
		LSRS	R7, R7,	#0x16

loc_800A36C:				@ CODE XREF: sub_800A338+2Ej
		MOV	R0, R9
		LSRS	R7, R0
		ADDS	R7, R7,	#1
		CMP	R6, R7
		IT cc
		MOVCC	R7, R6
		MOVS	R3, #1
		LSLS	R3, R0
		MOV	R2, R8
		MOVS	R1, R7
		MOVS	R0, R5
		BL	sub_800A220
		CMP	R0, #0
		BMI	locret_800A392
		ADDS	R4, R4,	R0
		CMP	R0, R7
		BEQ	loc_800A348

loc_800A390:				@ CODE XREF: sub_800A338:loc_800A356j
		MOVS	R0, R4

locret_800A392:				@ CODE XREF: sub_800A338+50j
		POP.W	{R4-R9,PC}
@ End of function sub_800A338

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A398:				@ CODE XREF: sub_800A8D0+4Ep
		PUSH.W	{R4-R8,LR}
		MOV	R8, R1
		MOV	R4, R8
		MOVS	R6, R0
		MOVS	R7, R2
		MOVS	R5, R3
		LSLS	R0, R0,	#0x1F
		BPL	loc_800A3C6
		CBZ	R4, loc_800A3C6
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_800A2C0
		CMP	R0, #0
		BMI	locret_800A452
		SUBS	R4, R4,	R0
		CMP	R0, #1
		BNE	loc_800A44E
		ADDS	R5, R5,	#1
		ADDS	R6, R6,	#1

loc_800A3C6:				@ CODE XREF: sub_800A398+10j
					@ sub_800A398+12j
		LSLS	R0, R7,	#1
		BMI	loc_800A43A
		LSLS	R0, R6,	#0x1E
		BPL	loc_800A3EE
		CMP	R4, #2
		BCC	loc_800A3EE
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_800A2C0
		CMP	R0, #0
		BMI	locret_800A452
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, #1
		BNE	loc_800A44E
		ADDS	R5, R5,	#2
		ADDS	R6, R6,	#2

loc_800A3EE:				@ CODE XREF: sub_800A398+34j
					@ sub_800A398+38j
		MOVS	R0, R7
		BMI	loc_800A416
		CMP	R4, #4
		BCC	loc_800A416
		LSRS	R7, R4,	#2
		MOVS	R3, #2
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_800A2C0
		CMP	R0, #0
		BMI	locret_800A452
		SUBS.W	R4, R4,	R0,LSL#2
		CMP	R0, R7
		BNE	loc_800A44E
		LSLS	R0, R7,	#2
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_800A416:				@ CODE XREF: sub_800A398+58j
					@ sub_800A398+5Cj
		CMP	R4, #2
		BCC	loc_800A43A
		LSRS	R7, R4,	#1
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_800A2C0
		CMP	R0, #0
		BMI	locret_800A452
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, R7
		BNE	loc_800A44E
		LSLS	R0, R7,	#1
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_800A43A:				@ CODE XREF: sub_800A398+30j
					@ sub_800A398+80j
		CBZ	R4, loc_800A44E
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, R4
		MOVS	R0, R6
		BL	sub_800A2C0
		CMP	R0, #0
		BMI	locret_800A452
		SUBS	R4, R4,	R0

loc_800A44E:				@ CODE XREF: sub_800A398+28j
					@ sub_800A398+50j ...
		SUBS.W	R0, R8,	R4

locret_800A452:				@ CODE XREF: sub_800A398+22j
					@ sub_800A398+48j ...
		POP.W	{R4-R8,PC}
@ End of function sub_800A398

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A458:				@ CODE XREF: sub_800A954+36p
		PUSH.W	{R4-R8,LR}
		MOV	R8, R1
		MOV	R4, R8
		MOVS	R6, R0
		MOVS	R7, R2
		MOVS	R5, R3
		LSLS	R0, R0,	#0x1F
		BPL	loc_800A486
		CBZ	R4, loc_800A486
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_800A338
		CMP	R0, #0
		BMI	locret_800A512
		SUBS	R4, R4,	R0
		CMP	R0, #1
		BNE	loc_800A50E
		ADDS	R5, R5,	#1
		ADDS	R6, R6,	#1

loc_800A486:				@ CODE XREF: sub_800A458+10j
					@ sub_800A458+12j
		LSLS	R0, R7,	#1
		BMI	loc_800A4FA
		LSLS	R0, R6,	#0x1E
		BPL	loc_800A4AE
		CMP	R4, #2
		BCC	loc_800A4AE
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, #1
		MOVS	R0, R6
		BL	sub_800A338
		CMP	R0, #0
		BMI	locret_800A512
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, #1
		BNE	loc_800A50E
		ADDS	R5, R5,	#2
		ADDS	R6, R6,	#2

loc_800A4AE:				@ CODE XREF: sub_800A458+34j
					@ sub_800A458+38j
		MOVS	R0, R7
		BMI	loc_800A4D6
		CMP	R4, #4
		BCC	loc_800A4D6
		LSRS	R7, R4,	#2
		MOVS	R3, #2
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_800A338
		CMP	R0, #0
		BMI	locret_800A512
		SUBS.W	R4, R4,	R0,LSL#2
		CMP	R0, R7
		BNE	loc_800A50E
		LSLS	R0, R7,	#2
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_800A4D6:				@ CODE XREF: sub_800A458+58j
					@ sub_800A458+5Cj
		CMP	R4, #2
		BCC	loc_800A4FA
		LSRS	R7, R4,	#1
		MOVS	R3, #1
		MOVS	R2, R5
		MOVS	R1, R7
		MOVS	R0, R6
		BL	sub_800A338
		CMP	R0, #0
		BMI	locret_800A512
		SUBS.W	R4, R4,	R0,LSL#1
		CMP	R0, R7
		BNE	loc_800A50E
		LSLS	R0, R7,	#1
		ADDS	R5, R5,	R0
		ADDS	R6, R6,	R0

loc_800A4FA:				@ CODE XREF: sub_800A458+30j
					@ sub_800A458+80j
		CBZ	R4, loc_800A50E
		MOVS	R3, #0
		MOVS	R2, R5
		MOVS	R1, R4
		MOVS	R0, R6
		BL	sub_800A338
		CMP	R0, #0
		BMI	locret_800A512
		SUBS	R4, R4,	R0

loc_800A50E:				@ CODE XREF: sub_800A458+28j
					@ sub_800A458+50j ...
		SUBS.W	R0, R8,	R4

locret_800A512:				@ CODE XREF: sub_800A458+22j
					@ sub_800A458+48j ...
		POP.W	{R4-R8,PC}
@ End of function sub_800A458

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A518:				@ CODE XREF: sub_800AA34+28p
		PUSH	{R4-R7,LR}
		MOVS	R5, R0
		LDR	R0, =0xE000EDF0
		MOVS	R6, R1
		MOVS	R7, R2
		MOVS	R1, #2
		BL	unk_8009FFC
		MOVS	R4, R0
		MOVS	R1, #0x10
		MOVS	R0, #2
		BL	unk_8009F28
		ORRS	R0, R4

loc_800A534:				@ CODE XREF: sub_800A518+3Aj
		LDRB.W	R1, [R5],#1
		MOVS	R4, R0
		MOVS	R0, #5
		BL	unk_8009F28
		MOVS	R1, R0
		ORRS	R1, R4
		MOVS	R4, R1
		MOVS	R0, R6
		BL	unk_8009E78
		ORRS	R0, R4
		ADDS	R6, R6,	#4
		SUBS	R7, R7,	#1
		BNE	loc_800A534
		POP	{R4-R7,PC}
@ End of function sub_800A518

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A558:				@ CODE XREF: sub_800AA70+38p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R0, =0xE000EDF0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R1, #2
		BL	unk_8009FFC
		MOVS	R7, R0
		MOVS	R1, #0x10
		MOVS	R0, #2
		BL	unk_8009F28
		MOVS	R1, R0
		ORRS	R1, R7
		MOVS	R7, R1

loc_800A578:				@ CODE XREF: sub_800A558+44j
		LDR.W	R1, [R5],#4
		MOVS	R0, #6
		BL	unk_8009F28
		MOVS	R1, R0
		LDRB.W	R0, [R4],#1
		ORRS	R1, R7
		MOVS	R7, R1
		ORRS.W	R1, R0,	#0x10000
		MOVS	R0, #5
		BL	unk_8009F28
		ORRS	R0, R7
		MOVS	R7, R0
		SUBS	R6, R6,	#1
		BNE	loc_800A578
		BL	unk_8009F14
		MOVS	R0, R7
		POP	{R4-R7,PC}
@ End of function sub_800A558

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0
dword_800A5A8:	.long 0xE000EDF0	@ DATA XREF: sub_800A518+4r
					@ sub_800A558+4r

@ =============== S U B	R O U T	I N E =======================================


sub_800A5AC:				@ CODE XREF: sub_800A5D8+Ap
					@ sub_800A614:loc_800A632p ...
		PUSH	{R0,LR}
		MOV	R0, SP
		BL	sub_800A0A0
		CBNZ	R0, locret_800A5D4
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BPL	loc_800A5C8
		LDR	R0, =0xA05F0003
		BL	sub_800A098
		MOV	R0, SP
		BL	sub_800A0A0

loc_800A5C8:				@ CODE XREF: sub_800A5AC+Ej
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xE
		ITT mi
		MOVMI	R0, #1
		POPMI	{R1,PC}
		MOVS	R0, #0

locret_800A5D4:				@ CODE XREF: sub_800A5AC+8j
		POP	{R1,PC}
@ End of function sub_800A5AC

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A5D8:				@ CODE XREF: sub_800AAC8j
		LDR	R0, =0xA05F0003
		PUSH	{LR}
		BL	sub_800A098
		CBNZ	R0, locret_800A5E6
		BL	sub_800A5AC

locret_800A5E6:				@ CODE XREF: sub_800A5D8+8j
		POP	{PC}
@ End of function sub_800A5D8


@ =============== S U B	R O U T	I N E =======================================


sub_800A5E8:				@ CODE XREF: sub_800AAB0+Ep
		PUSH	{LR}
		CBZ	R0, loc_800A5F6
		LDR	R0, =0xA05F000B
		BL	sub_800A098
		LDR	R0, =0xA05F0009
		B	loc_800A5FE
@ ---------------------------------------------------------------------------

loc_800A5F6:				@ CODE XREF: sub_800A5E8+2j
		LDR	R0, =0xA05F0003
		BL	sub_800A098
		LDR	R0, =0xA05F0001

loc_800A5FE:				@ CODE XREF: sub_800A5E8+Cj
		BL	sub_800A098
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_800A5E8

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte 0xBF @ ¿
dword_800A608:	.long 0xA05F000B	@ DATA XREF: sub_800A5E8+4r
dword_800A60C:	.long 0xA05F0009	@ DATA XREF: sub_800A5E8+Ar
dword_800A610:	.long 0xA05F0001	@ DATA XREF: sub_800A5E8+14r

@ =============== S U B	R O U T	I N E =======================================


sub_800A614:				@ CODE XREF: sub_800AAC4j
		LDR	R0, =0xA05F000F
		PUSH	{R4,LR}
		BL	sub_800A098
		CBZ	R0, loc_800A624
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A624:				@ CODE XREF: sub_800A614+8j
		LDR	R0, =0xA05F000D
		BL	sub_800A098
		CBZ	R0, loc_800A632
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800A632:				@ CODE XREF: sub_800A614+16j
					@ sub_8009578+1Aj ...
		BL	sub_800A5AC
		MOVS	R4, R0
		LDR	R0, =0xA05F0003
		BL	sub_800A098
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_800A614

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte 0xBF @ ¿
dword_800A644:	.long 0xA05F000F	@ DATA XREF: sub_800A614r
dword_800A648:	.long 0xA05F000D	@ DATA XREF: sub_800A614:loc_800A624r

@ =============== S U B	R O U T	I N E =======================================


sub_800A64C:				@ CODE XREF: sub_800A850j
					@ sub_800A854+12p
		PUSH	{R0,R4-R6,LR}
		LDR	R4, =0xE000EDFC
		LDR	R5, =0xE000ED0C
		MOVS	R1, #1
		MOVS	R0, R4
		BL	sub_800A06C
		BL	unk_8009DE0
		CMP	R0, #3
		BNE	loc_800A666
		LDR	R1, =0x5FA0001
		B	loc_800A668
@ ---------------------------------------------------------------------------

loc_800A666:				@ CODE XREF: sub_800A64C+14j
		LDR	R1, =0x5FA0004

loc_800A668:				@ CODE XREF: sub_800A64C+18j
		MOVS	R0, R5
		BL	sub_800A06C
		LDR	R5, =0x2000019C
		LDR	R6, [R5]
		ADDS	R6, #0xC8

loc_800A674:				@ CODE XREF: sub_800A64C+3Ej
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BPL	loc_800A686
		LDR	R6, [R5]
		ADDS	R6, #0xC8
		B	loc_800A698
@ ---------------------------------------------------------------------------

loc_800A686:				@ CODE XREF: sub_800A64C+32j
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BPL	loc_800A674

loc_800A68C:				@ CODE XREF: sub_800A64C+4Aj
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R1,R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_800A692:				@ CODE XREF: sub_800A64C+56j
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BMI	loc_800A68C

loc_800A698:				@ CODE XREF: sub_800A64C+38j
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BMI	loc_800A692
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_800A06C
		LDR	R0, =0xA05F0003
		BL	sub_800A098

loc_800A6B2:				@ CODE XREF: sub_8009560+12p
					@ sub_8009578+12p
		BL	sub_800A5AC
		POP	{R1,R4-R6,PC}
@ End of function sub_800A64C


@ =============== S U B	R O U T	I N E =======================================


sub_800A6B8:				@ CODE XREF: sub_800A868+6p
		PUSH.W	{R0,R4-R9,LR}
		LDR	R0, =0xE000EDFC
		LDR	R6, =0x2000019C
		MOVS	R5, #0
		MOVS	R4, #0
		MOV	R8, R0
		LDR	R0, =0xA05F0003
		MOV	R9, R0
		B	loc_800A6D2
@ ---------------------------------------------------------------------------

loc_800A6CC:				@ CODE XREF: sub_800A6B8+50j
		BL	unk_8009F9C
		MOVS	R5, #1

loc_800A6D2:				@ CODE XREF: sub_800A6B8+12j
					@ sub_800A6B8+BCj
		MOV	R0, R9
		BL	sub_800A098
		MOVS	R1, #1
		MOV	R0, R8
		BL	sub_800A06C
		BL	unk_8009E04
		LDR	R0, =0xE000ED0C
		MOVS	R1, R5
		BEQ	loc_800A6EE
		LDR	R1, =0x5FA0001
		B	loc_800A6F0
@ ---------------------------------------------------------------------------

loc_800A6EE:				@ CODE XREF: sub_800A6B8+30j
		LDR	R1, =0x5FA0004

loc_800A6F0:				@ CODE XREF: sub_800A6B8+34j
		BL	sub_800A06C
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R2, =0xFCF00000
		LDR	R1, [SP,#0]
		ANDS	R2, R1
		BNE	loc_800A706
		CMP	R0, #0
		BPL	loc_800A710

loc_800A706:				@ CODE XREF: sub_800A6B8+48j
		CMP	R5, #0
		BEQ	loc_800A6CC

loc_800A70A:				@ CODE XREF: sub_800A6B8+62j
					@ sub_800A6B8+78j
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_800A788
@ ---------------------------------------------------------------------------

loc_800A710:				@ CODE XREF: sub_800A6B8+4Cj
		LDR	R7, [R6]
		ADDS	R7, #0xC8
		B	loc_800A722
@ ---------------------------------------------------------------------------

loc_800A716:				@ CODE XREF: sub_800A6B8+6Ej
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BMI	loc_800A70A
		MOV	R0, SP
		BL	sub_800A0A0

loc_800A722:				@ CODE XREF: sub_800A6B8+5Cj
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BPL	loc_800A716
		LDR	R7, [R6]
		ADDS	R7, #0xC8

loc_800A72C:				@ CODE XREF: sub_800A6B8+84j
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BMI	loc_800A70A
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#6
		BMI	loc_800A72C
		MOV	R0, R9
		BL	sub_800A098
		CBZ	R4, loc_800A756
		LDR	R0, =0x40040000
		MOVS	R1, #2
		BL	sub_800A06C
		LDR	R0, =0x40040004
		MOVS	R1, #0xB1
		BL	sub_800A06C

loc_800A756:				@ CODE XREF: sub_800A6B8+8Cj
		MOVS	R1, #0
		MOV	R0, R8
		BL	sub_800A06C
		CBNZ	R4, loc_800A77E
		MOVS	R0, #5
		BL	sub_800CA24
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BPL	loc_800A776

loc_800A772:				@ CODE XREF: sub_800A6B8+C4j
		MOVS	R4, #1
		B	loc_800A6D2
@ ---------------------------------------------------------------------------

loc_800A776:				@ CODE XREF: sub_800A6B8+B8j
		BL	sub_800A5AC
		CMP	R0, #0
		BEQ	loc_800A772

loc_800A77E:				@ CODE XREF: sub_800A6B8+A6j
		MOV	R0, R9
		BL	sub_800A098
		BL	sub_800A5AC

locret_800A788:				@ CODE XREF: sub_800A6B8+56j
		POP.W	{R1,R4-R9,PC}
@ End of function sub_800A6B8

@ ---------------------------------------------------------------------------
dword_800A78C:	.long 0xFCF00000	@ DATA XREF: sub_800A6B8+42r
dword_800A790:	.long 0xE000ED0C	@ DATA XREF: sub_800A64C+4r
					@ sub_800A6B8+2Cr
dword_800A794:	.long 0x5FA0001		@ DATA XREF: sub_800A64C+16r
					@ sub_800A6B8+32r
dword_800A798:	.long 0x5FA0004		@ DATA XREF: sub_800A64C:loc_800A666r
					@ sub_800A6B8:loc_800A6EEr

@ =============== S U B	R O U T	I N E =======================================


sub_800A79C:				@ CODE XREF: sub_800A854+6p
		PUSH.W	{R0,R4-R11,LR}
		LDR	R5, =0x2000019C
		MOV	R8, R0
		LDR	R0, =0xE000EDFC
		MOVS	R4, #0
		MOV	R9, R1
		MOV	R10, R0
		LDR	R0, =0xA05F0003
		MOV	R11, R0
		B	loc_800A7B4
@ ---------------------------------------------------------------------------

loc_800A7B2:				@ CODE XREF: sub_800A79C+90j
					@ sub_800A79C+98j
		MOVS	R4, #1

loc_800A7B4:				@ CODE XREF: sub_800A79C+14j
		MOV	R0, R11
		BL	sub_800A098
		MOVS	R1, #1
		MOV	R0, R10
		BL	sub_800A06C
		BL	unk_8009E04
		MOVS	R0, #1
		BL	sub_800CA24
		BL	sub_800B6AC
		MOV	R0, R8
		BL	sub_800CA24
		BL	sub_800B6B0
		MOV	R0, R9
		CBNZ	R0, loc_800A7E0
		MOVS	R0, #0x64

loc_800A7E0:				@ CODE XREF: sub_800A79C+40j
		BL	sub_800CA24
		LDR	R0, [R5]
		ADDW	R6, R0,	#0x3E8

loc_800A7EA:				@ CODE XREF: sub_800A79C+5Cj
		BL	sub_800A5AC
		MOVS	R7, R0
		CMP	R7, #1
		BEQ	loc_800A7FA
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		BPL	loc_800A7EA

loc_800A7FA:				@ CODE XREF: sub_800A79C+56j
		MOV	R0, R11
		BL	sub_800A098
		CBZ	R4, loc_800A812
		LDR	R0, =0x40040000
		MOVS	R1, #2
		BL	sub_800A06C
		LDR	R0, =0x40040004
		MOVS	R1, #0xB1
		BL	sub_800A06C

loc_800A812:				@ CODE XREF: sub_800A79C+64j
		MOVS	R1, #0
		MOV	R0, R10
		BL	sub_800A06C
		CBNZ	R4, loc_800A836
		MOVS	R0, #5
		BL	sub_800CA24
		MOV	R0, SP
		BL	sub_800A0A0
		LDR	R0, [SP,#0]
		LSLS	R0, R0,	#0xC
		BMI	loc_800A7B2
		BL	sub_800A5AC
		CMP	R0, #0
		BEQ	loc_800A7B2

loc_800A836:				@ CODE XREF: sub_800A79C+7Ej
		MOVS	R0, R7
		POP.W	{R1,R4-R11,PC}
@ End of function sub_800A79C

@ ---------------------------------------------------------------------------
dword_800A83C:	.long 0x2000019C	@ DATA XREF: sub_800A64C+22r
					@ sub_800A6B8+6r ...
dword_800A840:	.long 0xE000EDFC	@ DATA XREF: sub_800A64C+2r
					@ sub_800A6B8+4r ...
dword_800A844:	.long 0xA05F0003	@ DATA XREF: sub_800A5AC+10r
					@ sub_800A5D8r	...
dword_800A848:	.long 0x40040000	@ DATA XREF: sub_800A6B8+8Er
					@ sub_800A79C+66r
dword_800A84C:	.long 0x40040004	@ DATA XREF: sub_800A6B8+96r
					@ sub_800A79C+6Er

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800A850:				@ CODE XREF: sub_800A880+2Ep
		B	sub_800A64C
@ End of function sub_800A850

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800A854:				@ CODE XREF: sub_800A868+12p
					@ sub_800A880+20p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		BL	sub_800A79C
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_800A64C
@ End of function sub_800A854


@ =============== S U B	R O U T	I N E =======================================


sub_800A868:				@ CODE XREF: sub_800A880+38p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		BL	sub_800A6B8
		CMP	R0, #1
		ITTT ne
		MOVNE	R1, R5
		MOVNE	R0, R4
		BLNE	sub_800A854
		POP	{R4,R5,PC}
@ End of function sub_800A868


@ =============== S U B	R O U T	I N E =======================================


sub_800A880:				@ CODE XREF: sub_800AAD0+2Cp
		PUSH.W	{R4-R8,LR}
		MOV	R8, R2
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #1
		B	loc_800A896
@ ---------------------------------------------------------------------------

loc_800A88E:				@ CODE XREF: sub_800A880+44j
		BL	sub_800B6AC
		BL	unk_8009F9C

loc_800A896:				@ CODE XREF: sub_800A880+Cj
		MOV	R0, R8
		CMP	R0, #2
		BNE	loc_800A8A6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_800A854
		B	loc_800A8BC
@ ---------------------------------------------------------------------------

loc_800A8A6:				@ CODE XREF: sub_800A880+1Aj
		CMP	R0, #1
		BNE	loc_800A8B4
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_800A850
		B	loc_800A8BC
@ ---------------------------------------------------------------------------

loc_800A8B4:				@ CODE XREF: sub_800A880+28j
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_800A868

loc_800A8BC:				@ CODE XREF: sub_800A880+24j
					@ sub_800A880+32j
		MOVS	R7, R0
		CMP	R7, #1
		BEQ	loc_800A8C6
		SUBS	R6, R6,	#1
		BPL	loc_800A88E

loc_800A8C6:				@ CODE XREF: sub_800A880+40j
		BL	sub_800B6B0
		MOVS	R0, R7
		POP.W	{R4-R8,PC}
@ End of function sub_800A880


@ =============== S U B	R O U T	I N E =======================================


sub_800A8D0:				@ CODE XREF: sub_800AB3C:loc_800AB90p
		PUSH.W	{R0,R1,R4-R9,LR}
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800C24C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C24C
		LDR	R0, [SP,#0]
		MOVS.W	R7, #0xFFFFFFFF
		MOV	R8, R0
		LSLS	R0, R0,	#8
		LSRS	R0, R0,	#8
		STR	R0, [SP,#0]
		MOV	R4, R0
		BL	sub_800C06C
		MOVS	R5, R0
		LDR	R0, [SP,#0]
		CMP	R0, R5
		IT cc
		MOVCC	R5, R0
		MOVS	R0, R5
		BL	sub_800C088
		MOVS	R6, R0
		BEQ	loc_800A93E

loc_800A90C:				@ CODE XREF: sub_800A8D0+68j
		CBZ	R4, loc_800A93A
		CMP	R4, R5
		ITE cs
		MOVCS	R9, R5
		MOVCC	R9, R4
		LDR	R0, [SP,#4]
		MOVS	R3, R6
		MOV	R2, R8
		MOV	R1, R9
		BL	sub_800A398
		MOVS	R7, R0
		BMI	loc_800A940
		LDR	R0, [SP,#4]
		SUBS	R4, R4,	R7
		MOVS	R1, R7
		ADDS	R0, R0,	R7
		STR	R0, [SP,#4]
		MOVS	R0, R6
		BL	sub_800C1C4
		CMP	R7, R9
		BEQ	loc_800A90C

loc_800A93A:				@ CODE XREF: sub_800A8D0:loc_800A90Cj
		LDR	R0, [SP,#0]
		SUBS	R7, R0,	R4

loc_800A93E:				@ CODE XREF: sub_800A8D0+3Aj
		CBZ	R4, loc_800A946

loc_800A940:				@ CODE XREF: sub_800A8D0+54j
		MOVS	R0, R4
		BL	sub_800C1E0

loc_800A946:				@ CODE XREF: sub_800A8D0:loc_800A93Ej
		CBZ	R6, loc_800A94E
		MOVS	R0, R6
		BL	sub_800C0CC

loc_800A94E:				@ CODE XREF: sub_800A8D0:loc_800A946j
		MOVS	R0, R7
		POP.W	{R1,R2,R4-R9,PC}
@ End of function sub_800A8D0


@ =============== S U B	R O U T	I N E =======================================


sub_800A954:				@ CODE XREF: sub_800A9AC+72p
		PUSH.W	{R4-R10,LR}
		MOV	R8, R1
		MOVS	R4, R0
		MOV	R9, R2
		MOVS	R5, #0
		MOV	R10, R3
		MOV	R0, R10
		BL	sub_800C27C
		MOVS	R6, #0

loc_800A96A:				@ CODE XREF: sub_800A954+24j
					@ sub_800A954+48j
		BL	sub_800C284
		SUBS.W	R1, R8,	R0
		SUBS	R7, R1,	R6
		CBZ	R0, loc_800A97E
		CMP	R7, #0x40
		BCC	loc_800A96A
		MOVS	R0, #3
		BICS	R7, R0

loc_800A97E:				@ CODE XREF: sub_800A954+20j
		CBNZ	R5, loc_800A998
		MOV	R0, R10
		ADDS	R3, R0,	R6
		MOV	R2, R9
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_800A458
		MOVS	R5, R0
		CMP	R5, R7
		IT eq
		MOVEQ	R5, #0
		ADDS	R4, R4,	R7

loc_800A998:				@ CODE XREF: sub_800A954:loc_800A97Ej
		ADDS	R6, R6,	R7
		CMP	R6, R8
		BNE	loc_800A96A
		CBZ	R5, loc_800A9A6
		MOVS.W	R0, #0xFFFFFFFF
		B	locret_800A9A8
@ ---------------------------------------------------------------------------

loc_800A9A6:				@ CODE XREF: sub_800A954+4Aj
		MOV	R0, R8

locret_800A9A8:				@ CODE XREF: sub_800A954+50j
		POP.W	{R4-R10,PC}
@ End of function sub_800A954


@ =============== S U B	R O U T	I N E =======================================


sub_800A9AC:				@ CODE XREF: sub_800AB3C:loc_800AB96p
		PUSH.W	{R0,R1,R4-R10,LR}
		MOVS.W	R0, #0xFFFFFFFF
		MOV	R8, R0
		MOVS	R1, #4
		ADD	R0, SP,	#4
		MOV	R7, R8
		BL	sub_800C24C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C24C
		LDR	R0, [SP,#0]
		MOV	R9, R0
		LSLS	R0, R0,	#8
		LSRS	R0, R0,	#8
		STR	R0, [SP,#0]
		MOV	R4, R0
		BL	sub_800C06C
		MOVS	R5, R0
		LDR	R0, [SP,#0]
		CMP	R0, R5
		IT cc
		MOVCC	R5, R0
		MOVS	R0, R5
		BL	sub_800C088
		MOVS	R6, R0
		BNE	loc_800AA08

loc_800A9EC:				@ CODE XREF: sub_800A9AC+78j
					@ sub_800A9AC+80j
		CBZ	R4, loc_800A9F4
		MOVS	R0, R4
		BL	sub_800C25C

loc_800A9F4:				@ CODE XREF: sub_800A9AC:loc_800A9ECj
		CBZ	R6, loc_800A9FC

loc_800A9F6:				@ CODE XREF: sub_800A9AC+84j
		MOVS	R0, R6
		BL	sub_800C0CC

loc_800A9FC:				@ CODE XREF: sub_800A9AC:loc_800A9F4j
		MOVS	R0, R7
		POP.W	{R1,R2,R4-R10,PC}
@ ---------------------------------------------------------------------------

loc_800AA02:				@ CODE XREF: sub_800A9AC+7Cj
		LDR	R0, [SP,#4]
		ADDS	R0, R0,	R7
		STR	R0, [SP,#4]

loc_800AA08:				@ CODE XREF: sub_800A9AC+3Ej
		CBZ	R4, loc_800AA2E
		CMP	R4, R5
		ITE cs
		MOVCS	R10, R5
		MOVCC	R10, R4
		LDR	R0, [SP,#4]
		SUBS.W	R4, R4,	R10
		MOVS	R3, R6
		MOV	R2, R9
		MOV	R1, R10
		BL	sub_800A954
		MOVS	R7, R0
		BMI	loc_800A9EC
		CMP	R7, R10
		BEQ	loc_800AA02
		MOV	R7, R8
		B	loc_800A9EC
@ ---------------------------------------------------------------------------

loc_800AA2E:				@ CODE XREF: sub_800A9AC:loc_800AA08j
		LDR	R7, [SP,#0]
		B	loc_800A9F6
@ End of function sub_800A9AC

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800AA34:				@ CODE XREF: sub_800AB3C:loc_800AB9Cp
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0xA4
		MOVS	R4, #0
		B	loc_800AA46
@ ---------------------------------------------------------------------------

loc_800AA3C:				@ CODE XREF: sub_800AA34+20j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0x84
		STRB	R1, [R0,R4]
		ADDS	R4, R4,	#1

loc_800AA46:				@ CODE XREF: sub_800AA34+6j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C24C
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0xFF
		BNE	loc_800AA3C
		MOVS	R2, R4
		ADD	R1, SP,	#4
		ADD	R0, SP,	#0x84
		BL	sub_800A518
		MOVS	R5, R0
		LSLS	R1, R4,	#2
		ADD	R0, SP,	#4
		BL	sub_800C1C4
		MOVS	R0, R5
		ADD	SP, SP,	#0xA4
		POP	{R4,R5,PC}
@ End of function sub_800AA34


@ =============== S U B	R O U T	I N E =======================================


sub_800AA70:				@ CODE XREF: sub_800AB3C:loc_800ABA2p
		PUSH	{R4,LR}
		SUB	SP, SP,	#0xA8
		MOVS	R4, #0
		B	loc_800AA92
@ ---------------------------------------------------------------------------

loc_800AA78:				@ CODE XREF: sub_800AA70+30j
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800C24C
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0x88
		STRB	R1, [R0,R4]
		LDR	R1, [SP,#4]
		ADD	R0, SP,	#8
		STR.W	R1, [R0,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_800AA92:				@ CODE XREF: sub_800AA70+6j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C24C
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0xFF
		BNE	loc_800AA78
		MOVS	R2, R4
		ADD	R1, SP,	#8
		ADD	R0, SP,	#0x88
		BL	sub_800A558
		ADD	SP, SP,	#0xA8
		POP	{R4,PC}
@ End of function sub_800AA70


@ =============== S U B	R O U T	I N E =======================================


sub_800AAB0:				@ CODE XREF: sub_800AB3C:loc_800ABA8p
		PUSH	{R0,LR}
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C24C
		LDRB.W	R0, [SP,#0]
		BL	sub_800A5E8
		POP	{R1,PC}
@ End of function sub_800AAB0


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800AAC4:				@ CODE XREF: sub_800AB3C:loc_800ABAEp
		B	sub_800A614
@ End of function sub_800AAC4

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800AAC8:				@ CODE XREF: sub_800AB3C:loc_800ABB4p
		B	sub_800A5D8
@ End of function sub_800AAC8

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800AACC:				@ CODE XREF: sub_800AB3C:loc_800ABBAp
		B	sub_800A5AC
@ End of function sub_800AACC

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800AAD0:				@ CODE XREF: sub_800AB3C:loc_800ABC0p
		PUSH	{R0-R3,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		MOVS	R1, #0x14
		STR	R1, [SP,#8]
		STR	R0, [SP,#0xC]
		B	loc_800AAE8
@ ---------------------------------------------------------------------------

loc_800AADE:				@ CODE XREF: sub_800AAD0+44j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4

loc_800AAE4:				@ CODE XREF: sub_800AAD0+56j
					@ sub_800AAD0+5Ej
		BL	sub_800C24C

loc_800AAE8:				@ CODE XREF: sub_800AAD0+Cj
					@ sub_800AAD0+68j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C24C
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_800AB04
		LDR	R2, [SP,#4]
		LDR	R1, [SP,#0xC]
		LDR	R0, [SP,#8]
		BL	sub_800A880
		ADD	SP, SP,	#0x10
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_800AB04:				@ CODE XREF: sub_800AAD0+24j
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C24C
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_800AADE
		CMP	R0, #2
		BEQ	loc_800AB20
		CMP	R0, #3
		BEQ	loc_800AB28
		B	loc_800AB30
@ ---------------------------------------------------------------------------

loc_800AB20:				@ CODE XREF: sub_800AAD0+48j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#8
		B	loc_800AAE4
@ ---------------------------------------------------------------------------

loc_800AB28:				@ CODE XREF: sub_800AAD0+4Cj
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#0xC
		B	loc_800AAE4
@ ---------------------------------------------------------------------------

loc_800AB30:				@ CODE XREF: sub_800AAD0+4Ej
		LDRB.W	R0, [SP,#0]
		BL	sub_800C25C
		B	loc_800AAE8
@ End of function sub_800AAD0

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte	 0

@ =============== S U B	R O U T	I N E =======================================


sub_800AB3C:				@ CODE XREF: sub_800B170+56p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x44
		MOVS	R1, #2
		MOVS	R5, R0
		MOV	R0, SP
		BL	sub_800C24C
		LDRH.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_800C24C
		LDRH.W	R0, [SP,#0]
		CMP	R0, #4
		BCC	loc_800AB64
		ADD	R0, SP,	#4
		BL	sub_800EAB4
		B	loc_800AB66
@ ---------------------------------------------------------------------------

loc_800AB64:				@ CODE XREF: sub_800AB3C+1Ej
		LDR	R0, =0x30000FF

loc_800AB66:				@ CODE XREF: sub_800AB3C+26j
		LDR	R1, =0x2000004C
		CMP	R5, #0x64
		STR	R0, [R1]
		BEQ	loc_800AB90
		CMP	R5, #0x65
		BEQ	loc_800AB96
		CMP	R5, #0x6E
		BEQ	loc_800AB9C
		CMP	R5, #0x6F
		BEQ	loc_800ABA2
		CMP	R5, #0x79
		BEQ	loc_800ABA8
		CMP	R5, #0x7A
		BEQ	loc_800ABAE
		CMP	R5, #0x7B
		BEQ	loc_800ABB4
		CMP	R5, #0x7C
		BEQ	loc_800ABBA
		CMP	R5, #0x82
		BEQ	loc_800ABC0
		B	loc_800ABC6
@ ---------------------------------------------------------------------------

loc_800AB90:				@ CODE XREF: sub_800AB3C+30j
		BL	sub_800A8D0
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800AB96:				@ CODE XREF: sub_800AB3C+34j
		BL	sub_800A9AC
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800AB9C:				@ CODE XREF: sub_800AB3C+38j
		BL	sub_800AA34
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABA2:				@ CODE XREF: sub_800AB3C+3Cj
		BL	sub_800AA70
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABA8:				@ CODE XREF: sub_800AB3C+40j
		BL	sub_800AAB0
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABAE:				@ CODE XREF: sub_800AB3C+44j
		BL	sub_800AAC4
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABB4:				@ CODE XREF: sub_800AB3C+48j
		BL	sub_800AAC8
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABBA:				@ CODE XREF: sub_800AB3C+4Cj
		BL	sub_800AACC
		B	loc_800ABC4
@ ---------------------------------------------------------------------------

loc_800ABC0:				@ CODE XREF: sub_800AB3C+50j
		BL	sub_800AAD0

loc_800ABC4:				@ CODE XREF: sub_800AB3C+58j
					@ sub_800AB3C+5Ej ...
		MOVS	R4, R0

loc_800ABC6:				@ CODE XREF: sub_800AB3C+52j
		MOVS	R0, R4
		BL	sub_800C22C
		ADD	SP, SP,	#0x44
		POP	{R4,R5,PC}
@ End of function sub_800AB3C

@ ---------------------------------------------------------------------------
dword_800ABD0:	.long 0x30000FF		@ DATA XREF: sub_800AB3C:loc_800AB64r
dword_800ABD4:	.long 0x2000004C	@ DATA XREF: sub_800AB3C:loc_800AB66r

@ =============== S U B	R O U T	I N E =======================================


sub_800ABD8:				@ CODE XREF: sub_800B48C:loc_800B608p
		PUSH	{R0,R4,LR}
		MOV	R0, SP
		BL	sub_800B88C
		MOVS	R4, R0
		LDR	R0, [SP,#0]
		UXTH	R0, R0
		BL	loc_800C220
		LDR	R1, [SP,#0]
		MOVS	R0, R4
		BL	sub_800C1C4
		POP	{R0,R4,PC}
@ End of function sub_800ABD8

@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_10. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.byte	 0
		.byte	 0
@ ---------------------------------------------------------------------------

loc_800ABF8:				@ CODE XREF: sub_800B48C:loc_800B55Cp
		PUSH.W	{R0,R1,R4-R11,LR}
		STR	R1, [SP,#4]
		MOV	R8, R0
		MOVS	R1, #2
		MOV	R0, SP
		MOVS	R6, #0
		MOVS	R5, #0
		BL	sub_800C24C
		LDRH.W	R0, [SP]
		ADDS	R0, R0,	#7
		ASRS	R0, R0,	#3
		MOV	R9, R0
		MOVS	R0, #3
		MUL.W	R0, R9,	R0
		BL	sub_800C088
		MOVS	R4, R0
		ADDS.W	R10, R9, R4
		ADDS.W	R11, R9, R10
		CBNZ	R4, loc_800AC3E
		MOV	R0, R9
		LSLS	R0, R0,	#1
		BL	sub_800C25C
		MOV	R0, R9
		BL	sub_800C1E0
		MOVS	R5, #6
		B	loc_800ACCA
@ ---------------------------------------------------------------------------

loc_800AC3E:				@ CODE XREF: ROM:0800AC2Aj
		MOV	R1, R9
		MOV	R0, R10
		BL	sub_800C24C
		MOV	R1, R9
		MOVS	R0, R4
@ ---------------------------------------------------------------------------
		.byte	 1
		.byte 0xF0 @ ð
		.byte 0x17, 0xFB
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800951C

loc_800AC4E:				@ CODE XREF: sub_800951C+1740j
					@ sub_800951C+17ACj
		BL	sub_800C284
		SUBS.W	R1, R9,	R0
		SUBS	R7, R1,	R6
		CBZ	R0, loc_800AC62
		CMP	R7, #0xFF
		BLE	loc_800AC4E
		MOVS	R0, #0x3F
		BICS	R7, R0

loc_800AC62:				@ CODE XREF: sub_800951C+173Cj
		LSLS	R3, R7,	#3
		CMP	R1, R9
		BNE	loc_800AC76
		LDRH.W	R0, [SP,#0]
		ADDS	R0, R0,	#7
		LSLS	R0, R0,	#0x1D
		LSRS	R0, R0,	#0x1D
		SUBS	R0, R0,	#7

loc_800AC74:				@ CODE XREF: sub_800951C+14j
					@ ROM:08009878j
		ADDS	R3, R3,	R0

loc_800AC76:				@ CODE XREF: sub_800951C+174Aj
		UXTB	R5, R5
		CMP	R5, #0
		BNE	loc_800ACA8
		LDR	R0, =0x2000102A
		LDRB	R0, [R0]
		CBNZ	R0, loc_800AC94
		MOV	R0, R11
		ADDS	R2, R0,	R6
		MOV	R0, R10
		ADDS	R1, R0,	R6
		ADDS	R0, R4,	R6
		BL	sub_800BBF8

loc_800AC90:				@ CODE XREF: sub_800951C+178Aj
		MOVS	R5, R0
		B	loc_800ACB6
@ ---------------------------------------------------------------------------

loc_800AC94:				@ CODE XREF: sub_800951C+1764j
		CMP	R0, #1
		BNE	loc_800ACB6
		MOV	R0, R11
		ADDS	R2, R0,	R6
		MOV	R0, R10
		ADDS	R1, R0,	R6
		ADDS	R0, R4,	R6
		BL	sub_800BE28
		B	loc_800AC90
@ ---------------------------------------------------------------------------

loc_800ACA8:				@ CODE XREF: sub_800951C+175Ej
		ADDS	R3, R3,	#7
		ASRS	R2, R3,	#3
		MOVS	R1, #0
		MOV	R0, R11
		ADDS	R0, R0,	R6
		BL	sub_800EB68

loc_800ACB6:				@ CODE XREF: sub_800951C+1776j
					@ sub_800951C+177Aj
		LDR	R0, [SP,#4]
		CBNZ	R0, loc_800ACC4
		MOVS	R1, R7
		MOV	R0, R11
		ADDS	R0, R0,	R6
		BL	sub_800C210

loc_800ACC4:				@ CODE XREF: sub_800951C+179Cj
		ADDS	R6, R6,	R7
		CMP	R6, R9
		BNE	loc_800AC4E

loc_800ACCA:				@ CODE XREF: ROM:0800AC3Cj
		LDR	R0, =0x2000101C
		LDRB	R1, [R0]
		CBNZ	R1, loc_800ACD2
		STRB	R5, [R0]

loc_800ACD2:				@ CODE XREF: sub_800951C+17B2j
		LDR	R0, [SP,#4]
		CBNZ	R0, loc_800ACEC
		MOV	R0, R8
		CMP	R0, #0xCF
		BEQ	loc_800ACE6
		CMP	R0, #0xD5
		BEQ	loc_800ACE6
		BL	sub_800C244
		B	loc_800ACEC
@ ---------------------------------------------------------------------------

loc_800ACE6:				@ CODE XREF: sub_800951C+17BEj
					@ sub_800951C+17C2j
		UXTB	R0, R5
		BL	sub_800C218

loc_800ACEC:				@ CODE XREF: sub_800951C+17B8j
					@ sub_800951C+17C8j
		MOVS	R0, R4
		BL	sub_800C0CC
		POP.W	{R0,R1,R4-R11,PC}
@ END OF FUNCTION CHUNK	FOR sub_800951C
@ ---------------------------------------------------------------------------
		.align 4
dword_800ACF8:	.long 0x2000101C	@ DATA XREF: sub_800951C:loc_800ACCAr
dword_800ACFC:	.long 0x2000102A	@ DATA XREF: sub_800951C+1760r

@ =============== S U B	R O U T	I N E =======================================


sub_800AD00:				@ CODE XREF: sub_800AD58+72p
		PUSH.W	{R4-R10,LR}
		LDRH.W	R7, [SP,#0x20]
		LDRH.W	R5, [SP,#0x2C]
		MOVS	R4, R2
		MOV	R8, R0
		LDRH.W	R0, [SP,#0x24]
		MOV	R9, R1
		MOV	R10, R3
		ADDS	R6, R4,	R0
		BL	sub_800CD36
		BL	sub_800B6A8
		BL	sub_800B6B0

loc_800AD26:				@ CODE XREF: sub_800AD00+4Cj
		MOVS	R0, R7
		SUBS	R7, R0,	#1
		LSLS	R0, R0,	#0x10
		BEQ	loc_800AD4E
		MOV	R0, R10
		LSLS	R3, R0,	#3
		MOVS	R2, R4
		MOV	R1, R9
		MOV	R0, R8
		BL	sub_800BBF8
		LDRB	R1, [R6,#1]
		LDRB	R0, [R6]
		ORRS.W	R0, R0,	R1,LSL#8
		LDRH.W	R1, [SP,#0x28]
		ANDS	R1, R0
		CMP	R1, R5
		BNE	loc_800AD26

loc_800AD4E:				@ CODE XREF: sub_800AD00+2Cj
		BL	sub_800C630
		POP.W	{R4-R10,PC}
@ End of function sub_800AD00

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800AD58:				@ CODE XREF: sub_800B48C:loc_800B5B6p
		PUSH	{R4-R6,LR}
		SUB	SP, SP,	#0x14
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#4
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#8
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#0xC
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#0x10
		BL	sub_800C24C
		LDRH.W	R0, [SP,#0]
		MOVS	R1, #3
		MULS	R0, R1
		ADDS	R0, #9
		BL	sub_800C088
		MOVS	R4, R0
		LDRH.W	R0, [SP,#0]
		ADDS	R5, R4,	R0
		ADDS	R6, R5,	R0
		MOV	R1, R0
		MOVS	R0, R4
		BL	sub_800C24C
		LDRH.W	R1, [SP,#0]
		MOVS	R0, R5
		BL	sub_800C24C
		LDR	R3, [SP,#0x10]
		LDR	R2, [SP,#0xC]
		LDR	R1, [SP,#8]
		LDR	R0, [SP,#4]
		UXTH	R2, R2
		UXTH	R1, R1
		UXTH	R0, R0
		UXTH	R3, R3
		PUSH	{R0-R3}
		LDRH.W	R3, [SP,#0x10]
		MOVS	R0, R5
		MOVS	R2, R6
		MOVS	R1, R4
		BL	sub_800AD00
		LDRH.W	R1, [SP,#0x10]
		B	loc_800AEAC
@ End of function sub_800AD58


@ =============== S U B	R O U T	I N E =======================================


sub_800ADD4:				@ CODE XREF: sub_800AE30+72p
		PUSH.W	{R4-R10,LR}
		LDR	R6, =0x2000019C
		LDRH.W	R7, [SP,#0x20]
		MOVS	R4, R2
		MOV	R8, R0
		LDRH.W	R0, [SP,#0x24]
		MOV	R9, R1
		MOV	R10, R3
		ADDS	R5, R4,	R0
		MOVS	R0, #1
		BL	sub_800CA24
		BL	sub_800B6A8
		BL	sub_800B6B0
		LDR	R0, [R6]
		ADDS	R7, R0,	R7

loc_800ADFE:				@ CODE XREF: sub_800ADD4+52j
		MOV	R0, R10
		LSLS	R3, R0,	#3
		MOVS	R2, R4
		MOV	R1, R9
		MOV	R0, R8
		BL	sub_800BBF8
		LDRB	R1, [R5,#1]
		LDRB	R0, [R5]
		ORRS.W	R0, R0,	R1,LSL#8
		LDRH.W	R1, [SP,#0x28]
		ANDS	R1, R0
		LDRH.W	R0, [SP,#0x2C]
		CMP	R1, R0
		BEQ	locret_800AE28
		LDR	R0, [R6]
		SUBS	R0, R7,	R0
		BPL	loc_800ADFE

locret_800AE28:				@ CODE XREF: sub_800ADD4+4Cj
		POP.W	{R4-R10,PC}
@ End of function sub_800ADD4

@ ---------------------------------------------------------------------------
dword_800AE2C:	.long 0x2000019C	@ DATA XREF: sub_800ADD4+4r

@ =============== S U B	R O U T	I N E =======================================


sub_800AE30:				@ CODE XREF: sub_800B48C:loc_800B5BCp
		PUSH	{R4-R6,LR}
		SUB	SP, SP,	#0x14
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#4
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#8
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#0xC
		BL	sub_800C24C
		MOVS	R1, #2
		ADD	R0, SP,	#0x10
		BL	sub_800C24C
		LDRH.W	R0, [SP,#0]
		MOVS	R1, #3
		MULS	R0, R1
		ADDS	R0, #9
		BL	sub_800C088
		MOVS	R4, R0
		LDRH.W	R0, [SP,#0]
		ADDS	R5, R4,	R0
		ADDS	R6, R5,	R0
		MOV	R1, R0
		MOVS	R0, R4
		BL	sub_800C24C
		LDRH.W	R1, [SP,#0]
		MOVS	R0, R5
		BL	sub_800C24C
		LDR	R3, [SP,#0x10]
		LDR	R2, [SP,#0xC]
		LDR	R1, [SP,#8]
		LDR	R0, [SP,#4]
		UXTH	R2, R2
		UXTH	R1, R1
		UXTH	R0, R0
		UXTH	R3, R3
		PUSH	{R0-R3}
		LDRH.W	R3, [SP,#0x10]
		MOVS	R0, R5
		MOVS	R2, R6
		MOVS	R1, R4
		BL	sub_800ADD4
		LDRH.W	R1, [SP,#0x10]
		NOP

loc_800AEAC:				@ CODE XREF: sub_800AD58+7Aj
		MOVS	R0, R6
		BL	sub_800C1C4
		MOVS	R0, R4
		BL	sub_800C0CC
		ADD	SP, SP,	#0x24
		POP	{R4-R6,PC}
@ End of function sub_800AE30


@ =============== S U B	R O U T	I N E =======================================


sub_800AEBC:				@ CODE XREF: sub_800B48C:loc_800B58Cp
		PUSH	{R0,R1,LR}
		BL	sub_800BA30
		STRH.W	R0, [SP,#0]
		BL	sub_800BA48
		STRB.W	R0, [SP,#2]
		BL	sub_800BA54
		STRB.W	R0, [SP,#3]
		BL	sub_800BA5C
		STRB.W	R0, [SP,#4]
		BL	sub_800BA38
		STRB.W	R0, [SP,#5]
		BL	sub_800BA68
		STRB.W	R0, [SP,#6]
		BL	sub_800BA78
		MOVS	R1, #8
		STRB.W	R0, [SP,#7]
		B	loc_800AFC4
@ End of function sub_800AEBC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800AEFC:				@ CODE XREF: sub_800B48C:loc_800B614p
		PUSH	{LR}
		MOVS	R0, #4
		BL	loc_800C220
		LDR	R0, =0x2EE3
		BL	loc_800C220
		MOVS.W	R0, #0x800
		LDR.W	LR, [SP+0],#4
		B.W	loc_800C220
@ End of function sub_800AEFC

@ ---------------------------------------------------------------------------
		.align 4
dword_800AF18:	.long 0x2EE3		@ DATA XREF: sub_800AEFC+8r

@ =============== S U B	R O U T	I N E =======================================


sub_800AF1C:				@ CODE XREF: sub_800B48C:loc_800B586p
		LDR	R0, =byte_800FC00
		MOVS.W	R1, #0x100
		B.W	sub_800C1C4
@ End of function sub_800AF1C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800AF28:				@ CODE XREF: sub_800AF44+16p
		PUSH	{R4,LR}

loc_800AF2A:				@ CODE XREF: sub_800AF28+16j
		LDRB	R3, [R1]
		LDRB	R4, [R0]
		ANDS	R4, R3
		CMP	R4, R3
		ITT ne
		MOVNE	R0, #0
		POPNE	{R4,PC}
		ADDS	R1, R1,	#1
		ADDS	R0, R0,	#1
		SUBS	R2, R2,	#1
		BNE	loc_800AF2A
		MOVS	R0, #1
		POP	{R4,PC}
@ End of function sub_800AF28


@ =============== S U B	R O U T	I N E =======================================


sub_800AF44:				@ CODE XREF: sub_800B48C:loc_800B592p
		PUSH	{R4,LR}
		LDR	R4, =byte_800FC00
		SUB	SP, SP,	#0x100
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_800C24C
		LSRS	R2, R4,	#0x13
		MOV	R1, SP
		MOVS	R0, R4
		BL	sub_800AF28
		CBZ	R0, loc_800AF6A
		LSRS	R2, R4,	#0x13
		MOV	R1, SP
		MOVS	R0, R4
		BL	sub_800B8A8

loc_800AF6A:				@ CODE XREF: sub_800AF44+1Aj
		MOVS	R0, #0
		BL	nullsub_10
		MOVS	R0, #0
		BL	sub_800C218
		ADD	SP, SP,	#0x100
		POP	{R4,PC}
@ End of function sub_800AF44

@ ---------------------------------------------------------------------------
		.align 4
off_800AF7C:	.long byte_800FC00	@ DATA XREF: sub_800AF1Cr
					@ sub_800AF44+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800AF80:				@ CODE XREF: sub_800B48C:loc_800B61Ap
		LDR	R0, =unk_8009254
		MOVS	R1, #4
		B.W	sub_800C1C4
@ End of function sub_800AF80

@ ---------------------------------------------------------------------------
off_800AF88:	.long unk_8009254	@ DATA XREF: sub_800AF80r

@ =============== S U B	R O U T	I N E =======================================


sub_800AF8C:				@ CODE XREF: sub_800B48C:loc_800B620p
		PUSH	{LR}
		SUB	SP, SP,	#0x20
		MOVS	R2, #0x20
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800EB68
		LDR	R1, =0x88EA5833
		MOV	R0, SP
		BL	sub_800EAA0
		MOVS	R0, #0
		STRB.W	R0, [SP,#4]
		MOVS	R1, #0x20
		MOV	R0, SP
		BL	sub_800C1C4
		ADD	SP, SP,	#0x20
		POP	{PC}
@ End of function sub_800AF8C

@ ---------------------------------------------------------------------------
dword_800AFB4:	.long 0x88EA5833	@ DATA XREF: sub_800AF8C+Er

@ =============== S U B	R O U T	I N E =======================================


sub_800AFB8:				@ CODE XREF: sub_800B48C:loc_800B5C8p
		PUSH	{R0,R1,LR}
		MOV	R0, SP
		BL	sub_800BC34
		MOVS	R1, #6
		NOP

loc_800AFC4:				@ CODE XREF: sub_800AEBC+3Cj
		MOV	R0, SP

loc_800AFC6:				@ CODE XREF: sub_800B05C+16j
		BL	sub_800C1C4
		POP	{R0,R1,PC}
@ End of function sub_800AFB8


@ =============== S U B	R O U T	I N E =======================================


sub_800AFCC:				@ CODE XREF: sub_800B48C:loc_800B580p
		PUSH	{LR}
		BL	sub_800B984
		LDR.W	LR, [SP+0],#4
		B.W	sub_800C22C
@ End of function sub_800AFCC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800AFDC:				@ CODE XREF: sub_800B48C:loc_800B626p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x84
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C24C
		MOVS	R5, #0
		MOVS	R4, #0
		B	loc_800B008
@ ---------------------------------------------------------------------------

loc_800AFEE:				@ CODE XREF: sub_800AFDC+30j
		LSLS	R0, R0,	#0x1F
		BPL	loc_800B000
		MOVS	R0, R5
		BL	sub_800BC48
		ADD	R1, SP,	#4
		STR.W	R0, [R1,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_800B000:				@ CODE XREF: sub_800AFDC+14j
		LDR	R0, [SP,#0]
		ADDS	R5, R5,	#1
		LSRS	R0, R0,	#1
		STR	R0, [SP,#0]

loc_800B008:				@ CODE XREF: sub_800AFDC+10j
		LDR	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_800AFEE
		B	loc_800B04C
@ End of function sub_800AFDC


@ =============== S U B	R O U T	I N E =======================================


sub_800B010:				@ CODE XREF: sub_800B48C+8p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x84
		MOVS	R4, #0
		MOVS	R5, #0
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C24C
		ADD	R1, SP,	#4
		B	loc_800B044
@ ---------------------------------------------------------------------------

loc_800B024:				@ CODE XREF: sub_800B010+38j
		LSLS	R0, R0,	#0x1F
		BPL	loc_800B03C
		MOVS.W	R0, #0xFFFFFFFF
		CMP	R5, #2
		ITT cc
		LDRCC	R0, =0x20000060
		LDRCC.W	R0, [R0,R5,LSL#2]
		STR.W	R0, [R1,R4,LSL#2]
		ADDS	R4, R4,	#1

loc_800B03C:				@ CODE XREF: sub_800B010+16j
		LDR	R0, [SP,#0]
		ADDS	R5, R5,	#1
		LSRS	R0, R0,	#1
		STR	R0, [SP,#0]

loc_800B044:				@ CODE XREF: sub_800B010+12j
		LDR	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_800B024
		NOP

loc_800B04C:				@ CODE XREF: sub_800AFDC+32j
		LSLS	R1, R4,	#2
		ADD	R0, SP,	#4
		BL	sub_800C1C4
		ADD	SP, SP,	#0x84
		POP	{R4,R5,PC}
@ End of function sub_800B010

@ ---------------------------------------------------------------------------
dword_800B058:	.long 0x20000060	@ DATA XREF: sub_800B010+20r

@ =============== S U B	R O U T	I N E =======================================


sub_800B05C:				@ CODE XREF: sub_800B48C:loc_800B62Cp
		PUSH	{R0,R1,LR}
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C24C
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800C24C
		LDR	R1, [SP,#4]
		LDR	R0, [SP,#0]
		B	loc_800AFC6
@ End of function sub_800B05C


@ =============== S U B	R O U T	I N E =======================================


sub_800B074:				@ CODE XREF: sub_800B48C:loc_800B5C2p
		PUSH	{LR}
		BL	sub_800C06C
		LDR.W	LR, [SP+0],#4
		B.W	sub_800C22C
@ End of function sub_800B074

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B084:				@ CODE XREF: sub_800B48C:loc_800B5FCp
		LDR	R0, =byte_800F800
		MOVS.W	R1, #0x100
		B.W	sub_800C1C4
@ End of function sub_800B084

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800B090:				@ CODE XREF: sub_800B48C:loc_800B602p
		PUSH	{LR}
		SUB	SP, SP,	#0x100
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_800C24C
		LDR	R0, =byte_800F800
		MOVS.W	R2, #0x100
		MOV	R1, SP
		BL	sub_800B8A8
		ADD	SP, SP,	#0x100
		POP	{PC}
@ End of function sub_800B090

@ ---------------------------------------------------------------------------
		.align 0x10
off_800B0B0:	.long byte_800F800	@ DATA XREF: sub_800B084r
					@ sub_800B090+Er

@ =============== S U B	R O U T	I N E =======================================


sub_800B0B4:				@ CODE XREF: sub_800B48C:loc_800B632p
		PUSH	{R0,R1,LR}
		MOVS	R1, #1
		ADD	R0, SP,	#4
		BL	sub_800C24C
		STR	R0, [SP,#0]
		CBNZ	R0, locret_800B0E6
		LDRB.W	R0, [SP,#4]
		CMP	R0, #0xFE
		BEQ	loc_800B0D2
		CMP	R0, #0xFF
		BNE	loc_800B0D8
		MOVS	R0, #3
		B	loc_800B0DC
@ ---------------------------------------------------------------------------

loc_800B0D2:				@ CODE XREF: sub_800B0B4+14j
		LDR	R0, =0x2000102A
		LDRB	R0, [R0]
		B	loc_800B0DC
@ ---------------------------------------------------------------------------

loc_800B0D8:				@ CODE XREF: sub_800B0B4+18j
		BL	sub_800B67C

loc_800B0DC:				@ CODE XREF: sub_800B0B4+1Cj
					@ sub_800B0B4+22j
		STR	R0, [SP,#0]
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800C1C4

locret_800B0E6:				@ CODE XREF: sub_800B0B4+Cj
		POP	{R0,R1,PC}
@ End of function sub_800B0B4

@ ---------------------------------------------------------------------------
dword_800B0E8:	.long 0x2000102A	@ DATA XREF: sub_800B0B4:loc_800B0D2r

@ =============== S U B	R O U T	I N E =======================================


sub_800B0EC:				@ CODE XREF: sub_800B48C:loc_800B56Ep
		PUSH	{R0,LR}
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800C24C
		LDR	R1, =0xFFFF
		LDRH.W	R0, [SP,#0]
		CMP	R0, R1
		ITT eq
		MOVEQ	R0, #0
		STRHEQ.W R0, [SP,#0]
		LDRH.W	R0, [SP,#0]
		MOVS.W	R1, #0x3E8
		MULS	R0, R1
		BL	sub_800BB04
		POP	{R0,PC}
@ End of function sub_800B0EC

@ ---------------------------------------------------------------------------
		.align 4
dword_800B118:	.long 0xFFFF		@ DATA XREF: sub_800B0EC+Ar

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B11C:				@ CODE XREF: sub_800B48C:loc_800B574p
		B.W	sub_800B6AC
@ End of function sub_800B11C


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B120:				@ CODE XREF: sub_800B48C:loc_800B57Ap
		B.W	sub_800B6B0
@ End of function sub_800B120


@ =============== S U B	R O U T	I N E =======================================


sub_800B124:				@ CODE XREF: sub_800B48C:loc_800B562p
		PUSH	{R0,R4,LR}
		MOVS	R1, #1
		MOV	R0, SP
		MOVS	R4, #1
		BL	sub_800C24C
		MOV	R1, R4
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C24C
		MOVS	R0, #2
		BL	sub_800C25C
		CBNZ	R0, locret_800B168
		LDRB.W	R0, [SP,#0]
		LDRB.W	R1, [SP,#1]
		ORRS.W	R0, R1,	R0,LSL#8
		LDR	R1, =0x101
		CMP	R0, R1
		BEQ	loc_800B160
		LDR	R1, =0x301
		CMP	R0, R1
		BEQ	loc_800B160
		LDR	R1, =0x601
		CMP	R0, R1
		BNE	loc_800B162

loc_800B160:				@ CODE XREF: sub_800B124+2Ej
					@ sub_800B124+34j
		LDR	R4, =0x3FF

loc_800B162:				@ CODE XREF: sub_800B124+3Aj
		MOVS	R0, R4
		BL	sub_800C22C

locret_800B168:				@ CODE XREF: sub_800B124+1Cj
		POP	{R0,R4,PC}
@ End of function sub_800B124

@ ---------------------------------------------------------------------------
		.align 4
dword_800B16C:	.long 0x3FF		@ DATA XREF: sub_800B124:loc_800B160r

@ =============== S U B	R O U T	I N E =======================================


sub_800B170:				@ CODE XREF: sub_800B48C:loc_800B568p
		PUSH	{R0,LR}
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#2
		BL	sub_800C24C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#3
		BL	sub_800C24C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C24C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C24C
		LDRB.W	R0, [SP,#0]
		LDRB.W	R1, [SP,#1]
		ORRS.W	R0, R1,	R0,LSL#8
		LDR	R1, =0x101
		CMP	R0, R1
		BEQ	loc_800B1B6
		LDR	R1, =0x301
		CMP	R0, R1
		BEQ	loc_800B1B6
		LDR	R1, =0x601
		CMP	R0, R1
		BNE	locret_800B1CA

loc_800B1B6:				@ CODE XREF: sub_800B170+38j
					@ sub_800B170+3Ej
		LDRB.W	R3, [SP,#1]
		LDRB.W	R2, [SP,#0]
		LDRB.W	R1, [SP,#3]
		LDRB.W	R0, [SP,#2]
		BL	sub_800AB3C

locret_800B1CA:				@ CODE XREF: sub_800B170+44j
		POP	{R0,PC}
@ End of function sub_800B170

@ ---------------------------------------------------------------------------
dword_800B1CC:	.long 0x101		@ DATA XREF: sub_800B124+2Ar
					@ sub_800B170+34r
dword_800B1D0:	.long 0x301		@ DATA XREF: sub_800B124+30r
					@ sub_800B170+3Ar
dword_800B1D4:	.long 0x601		@ DATA XREF: sub_800B124+36r
					@ sub_800B170+40r

@ =============== S U B	R O U T	I N E =======================================


sub_800B1D8:				@ CODE XREF: sub_800B230+2p
					@ sub_800B248+2p ...
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_800B1E0
@ ---------------------------------------------------------------------------

loc_800B1DE:				@ CODE XREF: sub_800B1D8+16j
		ADDS	R0, R0,	#1

loc_800B1E0:				@ CODE XREF: sub_800B1D8+4j
		CMP	R0, #4
		BCS	loc_800B1F2
		LDR	R2, =0x20000068
		ADDS.W	R2, R2,	R0,LSL#4
		LDRH	R2, [R2,#0xA]
		CMP	R2, R1
		BNE	loc_800B1DE
		BX	LR
@ ---------------------------------------------------------------------------

loc_800B1F2:				@ CODE XREF: sub_800B1D8+Aj
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ End of function sub_800B1D8


@ =============== S U B	R O U T	I N E =======================================


sub_800B1F8:				@ CODE XREF: sub_800B260+82p
		PUSH	{R4-R7,LR}
		LDRB.W	R5, [SP,#0x14]
		MOVS	R4, R0
		MOVS	R0, #0
		B	loc_800B206
@ ---------------------------------------------------------------------------

loc_800B204:				@ CODE XREF: sub_800B1F8+1Cj
		ADDS	R0, R0,	#1

loc_800B206:				@ CODE XREF: sub_800B1F8+Aj
		CMP	R0, #4
		BCS	loc_800B228
		LDR	R6, =0x20000068
		ADDS.W	R6, R6,	R0,LSL#4
		LDRH	R7, [R6,#0xA]
		CMP	R7, #0
		BNE	loc_800B204
		STR	R1, [R6]
		LDR	R1, =0x2000019C
		STR	R2, [R6,#4]
		STRB	R3, [R6,#8]
		STRB	R5, [R6,#9]
		STRH	R4, [R6,#0xA]
		LDR	R1, [R1]
		STR	R1, [R6,#0xC]
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800B228:				@ CODE XREF: sub_800B1F8+10j
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R7,PC}
@ End of function sub_800B1F8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800B230:				@ CODE XREF: sub_800B260+68p
		PUSH	{LR}
		BL	sub_800B1D8
		CMP	R0, #0
		BMI	locret_800B246
		LDR	R2, =0x2000019C
		LDR	R1, =0x20000068
		LDR	R2, [R2]
		ADDS.W	R1, R1,	R0,LSL#4
		STR	R2, [R1,#0xC]

locret_800B246:				@ CODE XREF: sub_800B230+8j
		POP	{PC}
@ End of function sub_800B230


@ =============== S U B	R O U T	I N E =======================================


sub_800B248:				@ CODE XREF: sub_800B260+8Ep
					@ sub_800B374+20p
		PUSH	{LR}
		BL	sub_800B1D8
		CMP	R0, #0
		BMI	locret_800B25C
		LDR	R1, =0x20000068
		MOVS	R2, #0
		ADDS.W	R1, R1,	R0,LSL#4
		STRH	R2, [R1,#0xA]

locret_800B25C:				@ CODE XREF: sub_800B248+8j
		POP	{PC}
@ End of function sub_800B248

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800B260:				@ CODE XREF: sub_800B48C:loc_800B638p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x94
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#2
		BL	sub_800C24C
		MOVS	R1, #4
		ADD	R0, SP,	#0xC
		BL	sub_800C24C
		MOVS	R1, #4
		ADD	R0, SP,	#0x10
		BL	sub_800C24C
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#3
		BL	sub_800C24C
		MOVS	R1, #1
		ADD	R0, SP,	#8
		BL	sub_800C24C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800C24C
		LDRB.W	R0, [SP,#2]
		CMP	R0, #0x64
		BEQ	loc_800B2A6
		CMP	R0, #0x65
		BEQ	loc_800B2EA
		B	loc_800B2F2
@ ---------------------------------------------------------------------------

loc_800B2A6:				@ CODE XREF: sub_800B260+3Ej
		LDRH.W	R0, [SP,#0]
		CBNZ	R0, loc_800B2C4

loc_800B2AC:				@ CODE XREF: sub_800B260+62j
		LDR	R0, =0x20001014
		LDRH	R1, [R0]
		ADDS	R1, R1,	#1
		STRH	R1, [R0]
		STRH.W	R1, [SP,#0]
		LDRH.W	R0, [SP,#0]
		BL	sub_800B1D8
		CMP	R0, #0
		BPL	loc_800B2AC

loc_800B2C4:				@ CODE XREF: sub_800B260+4Aj
		LDRH.W	R0, [SP,#0]
		BL	sub_800B230
		CMP	R0, #0
		BPL	loc_800B2F2
		LDRB.W	R0, [SP,#8]
		PUSH	{R0}
		LDRB.W	R3, [SP,#7]
		LDR	R2, [SP,#0x14]
		LDR	R1, [SP,#0x10]
		LDRH.W	R0, [SP,#4]
		BL	sub_800B1F8
		ADD	SP, SP,	#4
		B	loc_800B2F2
@ ---------------------------------------------------------------------------

loc_800B2EA:				@ CODE XREF: sub_800B260+42j
		LDRH.W	R0, [SP,#0]
		BL	sub_800B248

loc_800B2F2:				@ CODE XREF: sub_800B260+44j
					@ sub_800B260+6Ej ...
		ADD	R0, SP,	#0x14
		STR	R0, [SP,#4]
		LDRH.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		MOVS	R4, #0
		BL	sub_800EA78
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800EA78
		MOVS	R1, #0x10
		ADD	R0, SP,	#4
		BL	sub_800EA78
		MOVS	R1, #4
		ADD	R0, SP,	#4
		BL	sub_800EA78
		B	loc_800B354
@ ---------------------------------------------------------------------------

loc_800B31C:				@ CODE XREF: sub_800B260+F6j
		LDR	R0, =0x20000068
		ADDS.W	R5, R0,	R4,LSL#4
		LDR	R1, [R5]
		ADD	R0, SP,	#4
		ADDS	R4, R4,	#1
		BL	sub_800EA88
		LDR	R1, [R5,#4]
		ADD	R0, SP,	#4
		BL	sub_800EA88
		LDRB	R1, [R5,#8]
		ADD	R0, SP,	#4
		BL	sub_800EA6C
		LDRB	R1, [R5,#9]
		ADD	R0, SP,	#4
		BL	sub_800EA6C
		LDRH	R1, [R5,#0xA]
		ADD	R0, SP,	#4
		BL	sub_800EA78
		LDR	R1, [R5,#0xC]
		ADD	R0, SP,	#4
		BL	sub_800EA88

loc_800B354:				@ CODE XREF: sub_800B260+BAj
		CMP	R4, #4
		BCC	loc_800B31C
		BL	sub_800BA30
		MOVS	R1, R0
		ADD	R0, SP,	#4
		BL	sub_800EA88
		MOVS	R1, #0x4C
		ADD	R0, SP,	#0x14
		BL	sub_800C1C4
		ADD	SP, SP,	#0x94
		POP	{R4,R5,PC}
@ End of function sub_800B260

@ ---------------------------------------------------------------------------
dword_800B370:	.long 0x20001014	@ DATA XREF: sub_800B260:loc_800B2ACr

@ =============== S U B	R O U T	I N E =======================================


sub_800B374:				@ CODE XREF: sub_800B3AC+Ap
		LDR	R0, =0x2000019C
		PUSH	{R4,R5,LR}
		MOVS	R5, #0
		LDR	R4, [R0]
		B	loc_800B39A
@ ---------------------------------------------------------------------------

loc_800B37E:				@ CODE XREF: sub_800B374+28j
		LDR	R0, =0x20000068
		ADDS.W	R0, R0,	R5,LSL#4
		LDRH	R1, [R0,#0xA]
		CBZ	R1, loc_800B398
		LDR	R1, [R0,#0xC]
		LDR	R2, =0x1388
		SUBS	R1, R4,	R1
		CMP	R1, R2
		ITT ge
		LDRHGE	R0, [R0,#0xA]
		BLGE	sub_800B248

loc_800B398:				@ CODE XREF: sub_800B374+12j
		ADDS	R5, R5,	#1

loc_800B39A:				@ CODE XREF: sub_800B374+8j
		CMP	R5, #4
		BCC	loc_800B37E
		POP	{R4,R5,PC}
@ End of function sub_800B374

@ ---------------------------------------------------------------------------
dword_800B3A0:	.long 0x1388		@ DATA XREF: sub_800B374+16r
dword_800B3A4:	.long 0x2000019C	@ DATA XREF: sub_800B1F8+20r
					@ sub_800B230+Ar ...
dword_800B3A8:	.long 0x20000068	@ DATA XREF: sub_800B1D8+Cr
					@ sub_800B1F8+12r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800B3AC:				@ CODE XREF: sub_800B448+24p
		PUSH	{LR}
		BL	nullsub_11
		LDR.W	LR, [SP+0],#4
		B	sub_800B374
@ End of function sub_800B3AC


@ =============== S U B	R O U T	I N E =======================================


sub_800B3B8:				@ CODE XREF: sub_800B448+12p
		LDR	R1, =0x2000067C
		PUSH	{LR}
		LDR	R2, [R1]
		MOVS	R0, R2
		CMP	R0, #1
		BLT	loc_800B3EE
		MOVS	R2, #0x7FFFFFFF
		CMP	R0, R2
		IT eq
		MOVEQ	R0, #1
		ADDS	R0, R0,	#1
		STR	R0, [R1]
		LDR	R1, =0x2B3
		CMP	R0, R1
		BLT	loc_800B400
		MOVS	R1, #0x64
		BL	sub_800EB94
		CBZ	R0, loc_800B3E8
		MOVS	R0, #0
		BL	sub_800BFF0
		B	loc_800B400
@ ---------------------------------------------------------------------------

loc_800B3E8:				@ CODE XREF: sub_800B3B8+26j
		BL	sub_800C000
		B	loc_800B400
@ ---------------------------------------------------------------------------

loc_800B3EE:				@ CODE XREF: sub_800B3B8+Aj
		CMP	R0, #0
		BPL	loc_800B400
		LDR	R0, =0xFFFFD8F0
		SUBS	R2, R2,	#1
		STR	R2, [R1]
		CMP	R2, R0
		IT eq
		BLEQ	sub_800BCE0

loc_800B400:				@ CODE XREF: sub_800B3B8+1Ej
					@ sub_800B3B8+2Ej ...
		BL	sub_800BA30
		LDR	R1, =0x20000060
		LDR	R2, =0x6D6
		CMP	R0, R2
		LDR	R0, [R1]
		BCC	loc_800B422
		LDR	R2, =0x5265C00
		CMP	R0, R2
		BGE	loc_800B42A
		CBNZ	R0, loc_800B41C
		LDR	R0, [R1,#4]
		ADDS	R0, R0,	#1
		STR	R0, [R1,#4]

loc_800B41C:				@ CODE XREF: sub_800B3B8+5Cj
		LDR	R0, [R1]
		ADDS	R0, #0xA
		B	loc_800B42C
@ ---------------------------------------------------------------------------

loc_800B422:				@ CODE XREF: sub_800B3B8+54j
		CBZ	R0, loc_800B42A
		LDR	R0, [R1,#4]
		ADDS	R0, R0,	#1
		STR	R0, [R1,#4]

loc_800B42A:				@ CODE XREF: sub_800B3B8+5Aj
					@ sub_800B3B8:loc_800B422j
		MOVS	R0, #0

loc_800B42C:				@ CODE XREF: sub_800B3B8+68j
		STR	R0, [R1]
		POP	{PC}
@ End of function sub_800B3B8

@ ---------------------------------------------------------------------------
dword_800B430:	.long 0x2000067C	@ DATA XREF: sub_800B3B8r
dword_800B434:	.long 0x2B3		@ DATA XREF: sub_800B3B8+1Ar
dword_800B438:	.long 0xFFFFD8F0	@ DATA XREF: sub_800B3B8+3Ar
dword_800B43C:	.long 0x6D6		@ DATA XREF: sub_800B3B8+4Er
dword_800B440:	.long 0x5265C00		@ DATA XREF: sub_800B3B8+56r
dword_800B444:	.long 0x20000060	@ DATA XREF: sub_800B3B8+4Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800B448:				@ CODE XREF: ROM:0800CD78p
		LDR	R0, =0x200000A8
		PUSH	{R4,LR}
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		CMP	R1, #0xA
		BNE	locret_800B470
		MOVS	R4, #0
		STR	R4, [R0]
		BL	sub_800B3B8
		LDR	R0, =0x200000AC
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		CMP	R1, #0xA
		ITT eq
		STREQ	R4, [R0]
		BLEQ	sub_800B3AC

locret_800B470:				@ CODE XREF: sub_800B448+Cj
		POP	{R4,PC}
@ End of function sub_800B448

@ ---------------------------------------------------------------------------
		.align 4
dword_800B474:	.long 0x200000A8	@ DATA XREF: sub_800B448r
dword_800B478:	.long 0x200000AC	@ DATA XREF: sub_800B448+16r

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: noreturn

sub_800B47C:				@ CODE XREF: sub_800B48C:loc_800B63Ep
		PUSH	{LR}

loc_800B47E:				@ CODE XREF: sub_800B47C+Cj
		BL	sub_800CD36
		MOVS	R0, #0
		BL	sub_800C010
		B	loc_800B47E
@ End of function sub_800B47C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B48C:				@ CODE XREF: ROM:0800C144p
		PUSH	{R4,LR}
		MOVS	R4, R0
		CMP	R4, #0xC2
		BNE	loc_800B49A
		BL	sub_800B010
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B49A:				@ CODE XREF: sub_800B48C+6j
		CMP	R4, #0xEB
		BNE	loc_800B4A4
		BL	sub_800D370

locret_800B4A2:				@ CODE XREF: sub_800B48C+28j
					@ sub_800B48C+5Ej
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B4A4:				@ CODE XREF: sub_800B48C+10j
		CMP	R4, #0xCE
		BEQ	loc_800B4AC
		CMP	R4, #0xCF
		BNE	loc_800B4BC

loc_800B4AC:				@ CODE XREF: sub_800B48C+1Aj
		MOVS	R0, #1
		BL	sub_800C25C
		CMP	R0, #0
		BNE	locret_800B4A2
		MOVS	R1, #0
		UXTB	R0, R4
		B	loc_800B55C
@ ---------------------------------------------------------------------------

loc_800B4BC:				@ CODE XREF: sub_800B48C+1Ej
		CMP	R0, #1
		BEQ.W	loc_800B608
		CMP	R0, #2
		BEQ.W	loc_800B5EC
		CMP	R0, #3
		BEQ.W	loc_800B5DC
		CMP	R0, #4
		BEQ.W	loc_800B614
		CMP	R0, #5
		BEQ	loc_800B56E
		CMP	R0, #6
		BEQ.W	loc_800B60E
		CMP	R0, #7
		BEQ	loc_800B58C
		CMP	R0, #9
		BEQ.W	loc_800B638
		CMP	R0, #0xB
		BEQ	locret_800B4A2
		CMP	R0, #0xC0
		BEQ	loc_800B5C8
		CMP	R0, #0xC1
		BEQ.W	loc_800B626
		CMP	R0, #0xC7
		BEQ.W	loc_800B632
		CMP	R0, #0xC8
		BEQ	loc_800B5CE
		CMP	R0, #0xC9
		BEQ	loc_800B598
		CMP	R0, #0xCA
		BEQ	loc_800B59E
		CMP	R0, #0xCB
		BEQ	loc_800B5A4
		CMP	R0, #0xCC
		BEQ	loc_800B5AA
		CMP	R0, #0xCD
		BEQ	loc_800B55A
		CMP	R0, #0xD0
		BEQ	loc_800B5B6
		CMP	R0, #0xD1
		BEQ	loc_800B5BC
		CMP	R0, #0xD4
		BEQ	loc_800B5C2
		CMP	R0, #0xDC
		BEQ	loc_800B574
		CMP	R0, #0xDD
		BEQ	loc_800B57A
		CMP	R0, #0xDE
		BEQ	loc_800B5B0
		CMP	R0, #0xDF
		BEQ	loc_800B5F6
		CMP	R0, #0xE6
		BEQ	loc_800B586
		CMP	R0, #0xE7
		BEQ	loc_800B592
		CMP	R0, #0xE8
		BEQ	loc_800B61A
		CMP	R0, #0xE9
		BEQ	loc_800B562
		CMP	R0, #0xEA
		BEQ	loc_800B568
		CMP	R0, #0xED
		BEQ	loc_800B620
		CMP	R0, #0xF0
		BEQ	loc_800B580
		CMP	R0, #0xF2
		BEQ	loc_800B5FC
		CMP	R0, #0xF3
		BEQ	loc_800B602
		CMP	R0, #0xFE
		BEQ	loc_800B62C
		B	loc_800B63E
@ ---------------------------------------------------------------------------

loc_800B55A:				@ CODE XREF: sub_800B48C+86j
		MOVS	R1, #0

loc_800B55C:				@ CODE XREF: sub_800B48C+2Ej
		BL	loc_800ABF8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B562:				@ CODE XREF: sub_800B48C+B2j
		BL	sub_800B124
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B568:				@ CODE XREF: sub_800B48C+B6j
		BL	sub_800B170
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B56E:				@ CODE XREF: sub_800B48C+4Aj
		BL	sub_800B0EC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B574:				@ CODE XREF: sub_800B48C+96j
		BL	sub_800B11C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B57A:				@ CODE XREF: sub_800B48C+9Aj
		BL	sub_800B120
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B580:				@ CODE XREF: sub_800B48C+BEj
		BL	sub_800AFCC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B586:				@ CODE XREF: sub_800B48C+A6j
		BL	sub_800AF1C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B58C:				@ CODE XREF: sub_800B48C+54j
		BL	sub_800AEBC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B592:				@ CODE XREF: sub_800B48C+AAj
		BL	sub_800AF44
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B598:				@ CODE XREF: sub_800B48C+76j
		BL	sub_800BAB0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B59E:				@ CODE XREF: sub_800B48C+7Aj
		BL	sub_800BAB4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5A4:				@ CODE XREF: sub_800B48C+7Ej
		BL	sub_800BAC0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5AA:				@ CODE XREF: sub_800B48C+82j
		BL	sub_800BAD0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5B0:				@ CODE XREF: sub_800B48C+9Ej
		BL	sub_800B6A4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5B6:				@ CODE XREF: sub_800B48C+8Aj
		BL	sub_800AD58
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5BC:				@ CODE XREF: sub_800B48C+8Ej
		BL	sub_800AE30
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5C2:				@ CODE XREF: sub_800B48C+92j
		BL	sub_800B074
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5C8:				@ CODE XREF: sub_800B48C+62j
		BL	sub_800AFB8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5CE:				@ CODE XREF: sub_800B48C+72j
		BL	sub_800BAF8
		BL	sub_800BA54
		BL	sub_800C218
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5DC:				@ CODE XREF: sub_800B48C+3Ej
		BL	sub_800B6AC
		MOVS	R0, #2
		BL	sub_800CA24
		BL	sub_800B6B0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5EC:				@ CODE XREF: sub_800B48C+38j
		BL	sub_800B6A4
		MOVS	R0, #2
		BL	sub_800CA24

loc_800B5F6:				@ CODE XREF: sub_800B48C+A2j
		BL	sub_800B6A8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B5FC:				@ CODE XREF: sub_800B48C+C2j
		BL	sub_800B084
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B602:				@ CODE XREF: sub_800B48C+C6j
		BL	sub_800B090
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B608:				@ CODE XREF: sub_800B48C+32j
		BL	sub_800ABD8
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B60E:				@ CODE XREF: sub_800B48C+4Ej
		BL	sub_800B7B0
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B614:				@ CODE XREF: sub_800B48C+44j
		BL	sub_800AEFC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B61A:				@ CODE XREF: sub_800B48C+AEj
		BL	sub_800AF80
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B620:				@ CODE XREF: sub_800B48C+BAj
		BL	sub_800AF8C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B626:				@ CODE XREF: sub_800B48C+66j
		BL	sub_800AFDC
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B62C:				@ CODE XREF: sub_800B48C+CAj
		BL	sub_800B05C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B632:				@ CODE XREF: sub_800B48C+6Cj
		BL	sub_800B0B4
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B638:				@ CODE XREF: sub_800B48C+58j
		BL	sub_800B260
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B63E:				@ CODE XREF: sub_800B48C+CCj
		BL	sub_800B47C
@ End of function sub_800B48C

@ ---------------------------------------------------------------------------
		POP	{R4,PC}

@ =============== S U B	R O U T	I N E =======================================


sub_800B644:				@ CODE XREF: sub_800B66C+4p
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R0, R2
		CBZ	R1, locret_800B66A

loc_800B64C:				@ CODE XREF: sub_800B644+24j
		MOVS	R2, R0
		LDRB.W	R0, [R4],#1
		EORS	R0, R2
		MOVS	R2, #8

loc_800B656:				@ CODE XREF: sub_800B644+20j
		LSRS	R5, R0,	#1
		LSLS	R0, R0,	#0x1F
		ITEE pl
		MOVPL	R0, R5
		MOVMI	R0, R5
		EORMI	R0, R3
		SUBS	R2, R2,	#1
		BNE	loc_800B656
		SUBS	R1, R1,	#1
		BNE	loc_800B64C

locret_800B66A:				@ CODE XREF: sub_800B644+6j
		POP	{R4,R5,PC}
@ End of function sub_800B644


@ =============== S U B	R O U T	I N E =======================================


sub_800B66C:				@ CODE XREF: sub_800B6B4+Ap
		LDR	R3, =0x8408
		PUSH	{LR}
		BL	sub_800B644
		UXTH	R0, R0
		POP	{PC}
@ End of function sub_800B66C

@ ---------------------------------------------------------------------------
dword_800B678:	.long 0x8408		@ DATA XREF: sub_800B66Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800B67C:				@ CODE XREF: sub_800B0B4:loc_800B0D8p
		PUSH	{R4-R6,LR}
		LDR	R5, =0x2000102A
		MOVS	R4, R0
		LDRB	R0, [R5]
		MOVS	R6, R0
		CMP	R0, #1
		BNE	loc_800B692
		CMP	R4, #1
		IT ne
		BLNE	sub_800D3A8

loc_800B692:				@ CODE XREF: sub_800B67C+Cj
		MOVS	R0, R4
		BL	sub_800BE5C
		STRB	R4, [R5]
		MOVS	R0, R6
		POP	{R4-R6,PC}
@ End of function sub_800B67C

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800B6A0:	.long 0x2000102A	@ DATA XREF: sub_800B67C+2r

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B6A4:				@ CODE XREF: sub_800B48C:loc_800B5B0p
					@ sub_800B48C:loc_800B5ECp
		B.W	sub_800BA88
@ End of function sub_800B6A4


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B6A8:				@ CODE XREF: sub_800AD00+1Ep
					@ sub_800ADD4+1Ep ...
		B.W	sub_800BA8C
@ End of function sub_800B6A8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B6AC:				@ CODE XREF: sub_800A79C+30p
					@ sub_800A880:loc_800A88Ep ...
		B.W	loc_800BA90
@ End of function sub_800B6AC


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800B6B0:				@ CODE XREF: sub_800A79C+3Ap
					@ sub_800A880:loc_800A8C6p ...
		B.W	loc_800BA94
@ End of function sub_800B6B0


@ =============== S U B	R O U T	I N E =======================================


sub_800B6B4:				@ CODE XREF: sub_800B7B0+70p
		PUSH	{R4,R5,LR}
		LDR	R5, =0x5BFE
		MOVS	R4, R0
		MOVS	R2, #0
		MOVS	R1, R5
		BL	sub_800B66C
		LDRH	R1, [R4,R5]
		CMP	R0, R1
		ITT eq
		MOVEQ	R0, #0
		POPEQ	{R4,R5,PC}
		MOVS	R0, #1
		POP	{R4,R5,PC}
@ End of function sub_800B6B4

@ ---------------------------------------------------------------------------
dword_800B6D0:	.long 0x5BFE		@ DATA XREF: sub_800B6B4+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800B6D4:				@ CODE XREF: sub_800B6FC+1Cp
					@ sub_800B6FC+26p ...
		MOVS	R1, R0
		LDRB	R2, [R1]
		MOVS	R0, #0
		CMP	R2, #0x20
		BNE	loc_800B6EC
		ADDS	R1, R1,	#1
		B	loc_800B6EC
@ ---------------------------------------------------------------------------

loc_800B6E2:				@ CODE XREF: sub_800B6D4+22j
		MOVS	R3, #0xA
		MLA.W	R0, R0,	R3, R2
		SUBS	R0, #0x30
		UXTH	R0, R0

loc_800B6EC:				@ CODE XREF: sub_800B6D4+8j
					@ sub_800B6D4+Cj
		LDRB.W	R2, [R1],#1
		CMP	R2, #0x30
		BCC	locret_800B6F8
		CMP	R2, #0x3A
		BCC	loc_800B6E2

locret_800B6F8:				@ CODE XREF: sub_800B6D4+1Ej
		BX	LR
@ End of function sub_800B6D4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B6FC:				@ CODE XREF: sub_800B78C+2p
					@ sub_800B78C+Ap
		LDR	R2, =dword_8009258
		PUSH.W	{R4-R9,LR}
		SUB	SP, SP,	#0x24
		MOV	R1, SP
		MOVS	R4, #0x24

loc_800B708:				@ CODE XREF: sub_800B6FC+12j
		SUBS	R4, R4,	#4
		LDR	R3, [R2,R4]
		STR	R3, [R1,R4]
		BNE	loc_800B708
		ADDW	R8, R0,	#0x12D
		MOV	R0, R8
		ADDS	R0, R0,	#4
		BL	sub_800B6D4
		MOV	R9, R0
		MOV	R0, R8
		ADDS	R0, R0,	#7
		BL	sub_800B6D4
		MOVS	R4, R0
		MOV	R0, R8
		ADDS	R0, #0xC
		BL	sub_800B6D4
		MOVS	R5, R0
		MOV	R0, R8
		ADDS	R0, #0xF
		BL	sub_800B6D4
		MOVS	R6, R0
		MOVS	R7, #0
		B	loc_800B74A
@ ---------------------------------------------------------------------------

loc_800B740:				@ CODE XREF: sub_800B6FC+4Cj
		MOVS	R0, #0
		B	loc_800B77C
@ ---------------------------------------------------------------------------

loc_800B744:				@ CODE XREF: sub_800B6FC+60j
		ADDS	R7, R7,	#1
		CMP	R7, #0xC
		BEQ	loc_800B740

loc_800B74A:				@ CODE XREF: sub_800B6FC+42j
		MOVS	R0, #3
		MOV	R3, SP
		MLA.W	R0, R7,	R0, R3
		MOVS	R2, #3
		MOV	R1, R8
		BL	sub_800EB2C
		CMP	R0, #0
		BNE	loc_800B744
		LDR	R0, =0xFFFFF830
		MOVS	R1, #0xC
		UXTH	R7, R7
		ADDS	R0, R4,	R0
		MLA.W	R0, R0,	R1, R7
		MOVS	R1, #0x1F
		MLA.W	R0, R0,	R1, R9
		MOVS	R1, #0x18
		MLA.W	R0, R0,	R1, R5
		MOVS	R1, #0x3C
		MLA.W	R0, R0,	R1, R6

loc_800B77C:				@ CODE XREF: sub_800B6FC+46j
		ADD	SP, SP,	#0x24
		POP.W	{R4-R9,PC}
@ End of function sub_800B6FC

@ ---------------------------------------------------------------------------
		.align 4
off_800B784:	.long dword_8009258	@ DATA XREF: sub_800B6FCr
dword_800B788:	.long 0xFFFFF830	@ DATA XREF: sub_800B6FC+62r

@ =============== S U B	R O U T	I N E =======================================


sub_800B78C:				@ CODE XREF: sub_800B7B0+36p
		PUSH	{R4,LR}
		BL	sub_800B6FC
		MOVS	R4, R0
		LDR	R0, =dword_8004000
		BL	sub_800B6FC
		CBZ	R4, loc_800B79E
		CBNZ	R0, loc_800B7A2

loc_800B79E:				@ CODE XREF: sub_800B78C+Ej
		MOVS	R0, #1
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B7A2:				@ CODE XREF: sub_800B78C+10j
		CMP	R0, R4
		ITT cc
		MOVCC	R0, #1
		POPCC	{R4,PC}
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800B78C

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800B7B0:				@ CODE XREF: sub_800B48C:loc_800B60Ep
		PUSH	{R5-R7,LR}
		SUBW	SP, SP,	#0x404
		MOVS	R0, #0
		MOVS.W	R5, #0x400
		BL	sub_800C218
		LDR	R0, =0xAA55
		MOVS	R1, #2
		STRH.W	R0, [SP,#0]
		MOV	R0, SP
		BL	sub_800C24C
		MOVS.W	R1, #0x400
		ADD	R0, SP,	#4
		BL	sub_800C24C
		LDRH.W	R0, [SP,#0]
		MOVS.W	R1, #0x5C00
		CMP	R0, R1
		BNE	loc_800B840
		ADD	R0, SP,	#4
		BL	sub_800B78C
		CBZ	R0, loc_800B840
		LDR	R6, =dword_8009C00
		MOV	R2, R5
		ADD	R1, SP,	#4
		MOVS	R0, R6
		BL	sub_800B8E4
		MOVS	R7, R6

loc_800B7FA:				@ CODE XREF: sub_800B7B0+6Cj
		ADDS.W	R7, R7,	#0x400
		LSRS	R1, R6,	#0x11
		ADD	R0, SP,	#4
		BL	sub_800C24C
		LSRS	R2, R6,	#0x11
		ADD	R1, SP,	#4
		MOVS	R0, R7
		BL	sub_800B8E4
		ADDS.W	R5, R5,	#0x400
		UXTH	R5, R5
		MOVS.W	R1, #0x5C00
		CMP	R5, R1
		BCC	loc_800B7FA
		MOVS	R0, R6
		BL	sub_800B6B4
		MOVS	R5, R0
		ITT ne
		MOVNE	R0, R6
		BLNE	sub_800B900
		MOVS	R0, R5
		BL	sub_800C218
		MOVS	R0, #0x64
		BL	sub_800CA24
		BL	sub_800BCE0
@ ---------------------------------------------------------------------------
		B	loc_800B874
@ ---------------------------------------------------------------------------

loc_800B840:				@ CODE XREF: sub_800B7B0+32j
					@ sub_800B7B0+3Aj
		ADD	R0, SP,	#4
		ADDW	R1, R0,	#0x110
		LDR	R0, =0x200005FC
		MOVS	R2, #0x80
		BL	sub_800EB50
		B	loc_800B860
@ ---------------------------------------------------------------------------

loc_800B850:				@ CODE XREF: sub_800B7B0+B6j
		MOVS.W	R1, #0x400
		ADD	R0, SP,	#4
		BL	sub_800C24C
		ADDS.W	R5, R5,	#0x400
		UXTH	R5, R5

loc_800B860:				@ CODE XREF: sub_800B7B0+9Ej
		LDRH.W	R1, [SP,#0]
		CMP	R5, R1
		BCC	loc_800B850
		LDR	R0, =0x5DC
		BL	sub_800CA24
		MOVS	R0, #0
		BL	sub_800C218

loc_800B874:				@ CODE XREF: sub_800B7B0+8Ej
		ADDW	SP, SP,	#0x404
		POP	{R5-R7,PC}
@ End of function sub_800B7B0

@ ---------------------------------------------------------------------------
		.align 4
dword_800B87C:	.long 0xAA55		@ DATA XREF: sub_800B7B0+10r
dword_800B880:	.long 0x5DC		@ DATA XREF: sub_800B7B0+B8r
off_800B884:	.long dword_8009C00	@ DATA XREF: sub_800B7B0+3Cr
off_800B888:	.long dword_8004000	@ DATA XREF: sub_800B78C+8r

@ =============== S U B	R O U T	I N E =======================================


sub_800B88C:				@ CODE XREF: sub_800ABD8+4p
		LDR	R2, =0x200005FC
		MOVS	R1, R0
		LDR	R0, =0x8004110
		LDRB	R3, [R2]
		CBZ	R3, loc_800B898
		MOVS	R0, R2

loc_800B898:				@ CODE XREF: sub_800B88C+8j
		CBZ	R1, locret_800B89E
		MOVS	R2, #0x70
		STR	R2, [R1]

locret_800B89E:				@ CODE XREF: sub_800B88C:loc_800B898j
		BX	LR
@ End of function sub_800B88C

@ ---------------------------------------------------------------------------
dword_800B8A0:	.long 0x8004110		@ DATA XREF: sub_800B88C+4r
dword_800B8A4:	.long 0x200005FC	@ DATA XREF: sub_800B7B0+96r
					@ sub_800B88Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800B8A8:				@ CODE XREF: sub_800AF44+22p
					@ sub_800B090+16p ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		B	loc_800B8C6
@ ---------------------------------------------------------------------------

loc_800B8B2:				@ CODE XREF: sub_800B8A8+16j
		MOVS	R0, #0
		BL	sub_800BFF0
		ADDS	R7, R7,	#1

loc_800B8BA:				@ CODE XREF: sub_800B8A8+38j
		CMP.W	R7, R6,LSL#1
		BLT	loc_800B8B2
		MOVS	R0, #0
		BL	sub_800C000

loc_800B8C6:				@ CODE XREF: sub_800B8A8+8j
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_800B908
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		BL	sub_800EB2C
		CBNZ	R0, loc_800B8DE
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800B8DE:				@ CODE XREF: sub_800B8A8+32j
		MOVS	R7, #0
		B	loc_800B8BA
@ End of function sub_800B8A8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B8E4:				@ CODE XREF: sub_800B7B0+44p
					@ sub_800B7B0+5Cp

@ FUNCTION CHUNK AT 0800B910 SIZE 00000004 BYTES

		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R1, R6
		BL	loc_800B910
@ ---------------------------------------------------------------------------
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4-R6,LR}
		B	sub_800B8A8
@ End of function sub_800B8E4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800B900:				@ CODE XREF: sub_800B7B0+7Ap
		MOVS.W	R1, #0x400
		B.W	loc_800B910
@ End of function sub_800B900


@ =============== S U B	R O U T	I N E =======================================


sub_800B908:				@ CODE XREF: sub_800B8A8+24p
		LDR	R3, =0x200010F1
		BX	R3
@ End of function sub_800B908

@ ---------------------------------------------------------------------------
off_800B90C:	.long 0x200010F1	@ DATA XREF: sub_800B908r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800B8E4

loc_800B910:				@ CODE XREF: sub_800B8E4+Aj
					@ sub_800B900+4j
		LDR	R3, =0x20001095
		BX	R3
@ END OF FUNCTION CHUNK	FOR sub_800B8E4
@ ---------------------------------------------------------------------------
off_800B914:	.long 0x20001095	@ DATA XREF: sub_800B8E4:loc_800B910r

@ =============== S U B	R O U T	I N E =======================================


sub_800B918:				@ CODE XREF: sub_800B98C+58p
					@ sub_800BCB8+14p ...
		LDR	R0, =0x40010800
		LDR	R1, =0x444CC834
		LDR	R2, =0x44844444
		STR	R1, [R0,#4]
		LDR	R1, =0x40010C00
		STR	R2, [R1]
		LDR	R2, =0x43454444
		STR	R2, [R1,#4]
		LDR	R2, =0x2000101F
		MOVS	R1, #0x20
		LDRB	R2, [R2]
		CBZ	R2, loc_800B936
		CMP	R2, #1
		BEQ	loc_800B93E
		BX	LR
@ ---------------------------------------------------------------------------

loc_800B936:				@ CODE XREF: sub_800B918+16j
		LDR	R2, =0x38344433
		STR	R2, [R0]
		STR	R1, [R0,#0x10]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800B93E:				@ CODE XREF: sub_800B918+1Aj
		LDR	R2, =0x38344434
		STR	R2, [R0]
		STR	R1, [R0,#0x14]
		BX	LR
@ End of function sub_800B918

@ ---------------------------------------------------------------------------
		.align 4
dword_800B948:	.long 0x444CC834	@ DATA XREF: sub_800B918+2r
dword_800B94C:	.long 0x43454444	@ DATA XREF: sub_800B918+Cr
dword_800B950:	.long 0x38344433	@ DATA XREF: sub_800B918:loc_800B936r
dword_800B954:	.long 0x38344434	@ DATA XREF: sub_800B918:loc_800B93Er

@ =============== S U B	R O U T	I N E =======================================


sub_800B958:				@ CODE XREF: sub_800B98C:loc_800B9EAp
					@ sub_800BCB8+22p
		LDR	R0, =0x40010800
		MOVS.W	R1, #0x44444444
		STR	R1, [R0]
		LDR	R1, =0x444CC434
		STR	R1, [R0,#4]
		LDR	R0, =0x40010C00
		LDR	R1, =0x44844444
		STR	R1, [R0]
		LDR	R1, =0x44454444
		STR	R1, [R0,#4]
		BX	LR
@ End of function sub_800B958

@ ---------------------------------------------------------------------------
dword_800B970:	.long 0x444CC434	@ DATA XREF: sub_800B958+8r
dword_800B974:	.long 0x44454444	@ DATA XREF: sub_800B958+12r

@ =============== S U B	R O U T	I N E =======================================


sub_800B978:				@ CODE XREF: sub_800B98C+50p
					@ sub_800BCB8+6p
		LDR	R0, =0x40010C08
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1D
		B	loc_800BA40
@ End of function sub_800B978

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B984:				@ CODE XREF: sub_800AFCC+2p
		LDR	R0, =0x200000C8
		LDR	R0, [R0]
		BX	LR
@ End of function sub_800B984

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800B98C:				@ CODE XREF: ROM:0800C0F8p
		LDR	R0, =0x40010004
		PUSH	{R4,LR}
		LDR	R4, =0x20001020
		LDR	R1, [R0]
		MOVS	R2, #0xF8FFFFFF
		ANDS	R2, R1
		ORRS.W	R1, R2,	#0x4000000
		STR	R1, [R0]
		LDR	R0, =0x4E20
		BL	sub_800BB04
		LDR	R0, =0x40021018
		LDR	R2, =0x4E3
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0xC
		STR	R1, [R0]
		LDR	R0, =0x40010800
		MOVS.W	R1, #0x44444444
		STR	R1, [R0]
		STR	R1, [R0,#4]
		STR	R2, [R0,#0xC]
		LDR	R0, =0x40010C00
		LDR	R2, =0x44844444
		STR	R2, [R0]
		STR	R1, [R0,#4]
		MOVS	R1, #0x20
		STR	R1, [R0,#0xC]
		LDR	R0, =0x200000C8
		LDR	R1, =0x11170
		STR	R1, [R0]
		LDR	R0, =0x2000101E
		MOVS	R1, #1
		STRB	R1, [R0]
		LDR	R0, =0x2000101F
		MOVS	R1, #0
		STRB	R1, [R0]
		BL	sub_800B978
		STRB	R0, [R4]
		CBZ	R0, loc_800B9EA
		BL	sub_800B918
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800B9EA:				@ CODE XREF: sub_800B98C+56j
		BL	sub_800B958
		POP	{R4,PC}
@ End of function sub_800B98C

@ ---------------------------------------------------------------------------
dword_800B9F0:	.long 0x40010004	@ DATA XREF: sub_800B98Cr
dword_800B9F4:	.long 0x4E20		@ DATA XREF: sub_800B98C+14r
dword_800B9F8:	.long 0x4E3		@ DATA XREF: sub_800B98C+1Cr
dword_800B9FC:	.long 0x11170		@ DATA XREF: sub_800B98C+40r
dword_800BA00:	.long 0x40021018	@ DATA XREF: sub_800B98C+1Ar
dword_800BA04:	.long 0x40010800	@ DATA XREF: sub_800B918r sub_800B958r ...
dword_800BA08:	.long 0x40010C00	@ DATA XREF: sub_800B918+8r
					@ sub_800B958+Cr ...
dword_800BA0C:	.long 0x44844444	@ DATA XREF: sub_800B918+4r
					@ sub_800B958+Er ...
dword_800BA10:	.long 0x200000C8	@ DATA XREF: sub_800B984r
					@ sub_800B98C+3Er
dword_800BA14:	.long 0x2000101F	@ DATA XREF: sub_800B918+10r
					@ sub_800B98C+4Ar
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800BFF0

loc_800BA18:				@ CODE XREF: sub_800C010-2Ej
					@ sub_800BFF0+Aj
		CBNZ	R0, locret_800BA20
		LDR	R0, =0x40010C14
		LSRS	R1, R0,	#0x12
		STR	R1, [R0]

locret_800BA20:				@ CODE XREF: sub_800BFF0:loc_800BA18j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800BFF0
@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800C000

loc_800BA24:				@ CODE XREF: sub_800C010:loc_800BFE6j
					@ sub_800C000+Aj
		CBNZ	R0, locret_800BA2C
		LDR	R0, =0x40010C10
		LSRS	R1, R0,	#0x12
		STR	R1, [R0]

locret_800BA2C:				@ CODE XREF: sub_800C000:loc_800BA24j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800C000
@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800BA30:				@ CODE XREF: sub_800AEBC+2p
					@ sub_800B260+F8p ...
		LDR	R0, =0xCE4
		BX	LR
@ End of function sub_800BA30

@ ---------------------------------------------------------------------------
dword_800BA34:	.long 0xCE4		@ DATA XREF: sub_800BA30r

@ =============== S U B	R O U T	I N E =======================================


sub_800BA38:				@ CODE XREF: sub_800AEBC+22p
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1C
@ End of function sub_800BA38

@ START	OF FUNCTION CHUNK FOR sub_800BA5C

loc_800BA40:				@ CODE XREF: sub_800B978+8j
					@ ROM:loc_800BA50j ...
		MOVS	R0, #1
		ANDS	R0, R1
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800BA5C
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BA48:				@ CODE XREF: sub_800AEBC+Ap
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1B
@ End of function sub_800BA48


loc_800BA50:				@ CODE XREF: ROM:0800986Cj
					@ ROM:08009882j
		B	loc_800BA40
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BA54:				@ CODE XREF: sub_800AEBC+12p
					@ sub_800B48C+146p
		LDR	R0, =0x40010C08
		LDR	R1, [R0]
		B	loc_800BA40
@ End of function sub_800BA54

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BA5C:				@ CODE XREF: sub_800AEBC+1Ap
					@ sub_800BB50:loc_800BB94p

@ FUNCTION CHUNK AT 0800BA40 SIZE 00000006 BYTES

		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1E
		B	loc_800BA40
@ End of function sub_800BA5C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BA68:				@ CODE XREF: sub_800AEBC+2Ap
		LDR	R0, =0x40010808
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x1A
		B	loc_800BA40
@ End of function sub_800BA68

@ ---------------------------------------------------------------------------
		.align 4
dword_800BA74:	.long 0x40010808	@ DATA XREF: sub_800BA38r sub_800BA48r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800BA78:				@ CODE XREF: sub_800AEBC+32p
		LDR	R0, =0x40010C08
		LDR	R0, [R0]
		LSLS	R1, R0,	#0x18
		LSRS	R1, R1,	#0x19
		B	loc_800BA40
@ End of function sub_800BA78

@ ---------------------------------------------------------------------------
		.align 4
dword_800BA84:	.long 0x40010C08	@ DATA XREF: sub_800B978r sub_800BA54r ...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800BA88:				@ CODE XREF: sub_800B6A4j
		B	loc_800BAA8
@ End of function sub_800BA88

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BA8C:				@ CODE XREF: sub_800B6A8j
		LDR	R0, =0x40010810
		B	loc_800BAAA
@ ---------------------------------------------------------------------------

loc_800BA90:				@ CODE XREF: sub_800B6ACj
		LDR	R0, =0x40010814
		B	loc_800BA98
@ ---------------------------------------------------------------------------

loc_800BA94:				@ CODE XREF: sub_800B6B0j
		LDR	R0, =0x40010810
		NOP

loc_800BA98:				@ CODE XREF: sub_800BA8C+6j
		MOVS	R1, #2
		STR	R1, [R0]
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
dword_800BAA0:	.long 0x20001020	@ DATA XREF: sub_800B98C+4r
dword_800BAA4:	.long 0x2000101E	@ DATA XREF: sub_800B98C+44r
@ ---------------------------------------------------------------------------

loc_800BAA8:				@ CODE XREF: sub_800BA88j
		LDR	R0, =0x40010814

loc_800BAAA:				@ CODE XREF: sub_800BA8C+2j
		MOVS	R1, #1
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BA8C


@ =============== S U B	R O U T	I N E =======================================


sub_800BAB0:				@ CODE XREF: sub_800B48C:loc_800B598p
					@ sub_800BB50:loc_800BB7Cp ...
		LDR	R0, =0x40010814
		B	loc_800BAB8
@ End of function sub_800BAB0


@ =============== S U B	R O U T	I N E =======================================


sub_800BAB4:				@ CODE XREF: sub_800B48C:loc_800B59Ep
					@ sub_800BB50+26p
		LDR	R0, =0x40010810
		NOP

loc_800BAB8:				@ CODE XREF: sub_800BAB0+2j
		MOVS	R1, #0x80
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BAB4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800BAC0:				@ CODE XREF: sub_800B48C:loc_800B5A4p
					@ sub_800BB50:loc_800BB6Ep
		LDR	R0, =0x40010C14
		MOVS.W	R1, #0x4000
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BAC0

@ ---------------------------------------------------------------------------
		.align 4
dword_800BACC:	.long 0x40010C14	@ DATA XREF: sub_800BFF0-5D6r
					@ sub_800BAC0r

@ =============== S U B	R O U T	I N E =======================================


sub_800BAD0:				@ CODE XREF: sub_800B48C:loc_800B5AAp
					@ sub_800BB50+18p
		LDR	R0, =0x40010C10
		MOVS.W	R1, #0x4000
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BAD0

@ ---------------------------------------------------------------------------
		.align 4
dword_800BADC:	.long 0x40010C10	@ DATA XREF: sub_800C000-5DAr
					@ sub_800BAD0r

@ =============== S U B	R O U T	I N E =======================================


sub_800BAE0:				@ CODE XREF: sub_800BAF8+2p
					@ sub_800BB50:loc_800BB80p
		LDR	R0, =0x40010814
		B	loc_800BAEC
@ End of function sub_800BAE0

@ ---------------------------------------------------------------------------
dword_800BAE4:	.long 0x40010814	@ DATA XREF: sub_800BA8C:loc_800BA90r
					@ sub_800BA8C:loc_800BAA8r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800BAE8:				@ CODE XREF: sub_800BAF8+Ap
					@ sub_800BB50:loc_800BB9Ep
		LDR	R0, =0x40010810
		NOP

loc_800BAEC:				@ CODE XREF: sub_800BAE0+2j
		MOVS	R1, #0x20
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BAE8

@ ---------------------------------------------------------------------------
		.align 4
dword_800BAF4:	.long 0x40010810	@ DATA XREF: sub_800BA8Cr
					@ sub_800BA8C:loc_800BA94r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800BAF8:				@ CODE XREF: sub_800B48C:loc_800B5CEp
		PUSH	{LR}
		BL	sub_800BAE0
		LDR.W	LR, [SP+0],#4
		B	sub_800BAE8
@ End of function sub_800BAF8


@ =============== S U B	R O U T	I N E =======================================


sub_800BB04:				@ CODE XREF: sub_800B0EC+24p
					@ sub_800B98C+16p ...
		LDR	R1, =0x200000B0
		STR	R0, [R1]
		CBZ	R0, locret_800BB3C
		LDR	R2, =0x155CC0
		MOV	R1, R0
		MOVS	R0, #0
		CMP	R1, R2
		BCS	loc_800BB26
		LDR	R2, =0x5B8D7F
		ADDS	R2, R1,	R2
		UDIV.W	R2, R2,	R1
		SUBS	R2, R2,	#3
		CMP	R2, #1
		BGE	loc_800BB28
		MOVS	R2, #1
		B	loc_800BB28
@ ---------------------------------------------------------------------------

loc_800BB26:				@ CODE XREF: sub_800BB04+Ej
		MOVS	R2, #0

loc_800BB28:				@ CODE XREF: sub_800BB04+1Cj
					@ sub_800BB04+20j
		LDR	R3, =0x200000B8
		STR	R2, [R3]
		LDR	R2, =0x5B8D80
		UDIV.W	R1, R2,	R1
		LDR	R2, =0x200000B4
		SUBS	R1, #0xA
		STR	R1, [R2]
		IT mi
		STRMI	R0, [R2]

locret_800BB3C:				@ CODE XREF: sub_800BB04+4j
		BX	LR
@ End of function sub_800BB04

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800BB40:	.long 0x155CC0		@ DATA XREF: sub_800BB04+6r
dword_800BB44:	.long 0x5B8D7F		@ DATA XREF: sub_800BB04+10r
dword_800BB48:	.long 0x5B8D80		@ DATA XREF: sub_800BB04+28r
dword_800BB4C:	.long 0x200000B0	@ DATA XREF: sub_800BB04r

@ =============== S U B	R O U T	I N E =======================================


sub_800BB50:				@ CODE XREF: sub_800BBC8+16p
					@ sub_800BBF8+30p
		PUSH.W	{R4-R10,LR}
		MOVS	R5, R0
		LDR	R0, =0x200000B4
		MOVS	R6, R1
		MOV	R8, R2
		MOV	R9, R3
		MOV	R4, R9
		MOVS	R7, #0
		MOV	R10, R0

loc_800BB64:				@ CODE XREF: sub_800BB50+5Ej
		LSLS	R0, R6,	#0x1F
		BPL	loc_800BB6E
		BL	sub_800BAD0
		B	loc_800BB72
@ ---------------------------------------------------------------------------

loc_800BB6E:				@ CODE XREF: sub_800BB50+16j
		BL	sub_800BAC0

loc_800BB72:				@ CODE XREF: sub_800BB50+1Cj
		LSLS	R0, R5,	#0x1F
		BPL	loc_800BB7C
		BL	sub_800BAB4
		B	loc_800BB80
@ ---------------------------------------------------------------------------

loc_800BB7C:				@ CODE XREF: sub_800BB50+24j
		BL	sub_800BAB0

loc_800BB80:				@ CODE XREF: sub_800BB50+2Aj
		BL	sub_800BAE0
		LDR.W	R0, [R10]
		LSRS	R5, R5,	#1
		LSRS	R6, R6,	#1
		LSRS	R7, R7,	#1
		CBZ	R0, loc_800BB94
		BL	sub_800BFD0

loc_800BB94:				@ CODE XREF: sub_800BB50+3Ej
		BL	sub_800BA5C
		CBZ	R0, loc_800BB9E
		ORRS.W	R7, R7,	#0x80

loc_800BB9E:				@ CODE XREF: sub_800BB50+48j
		BL	sub_800BAE8
		LDR.W	R0, [R10]
		CBZ	R0, loc_800BBAC
		BL	sub_800BFD0

loc_800BBAC:				@ CODE XREF: sub_800BB50+56j
		SUBS	R4, R4,	#1
		BNE	loc_800BB64
		MOVS	R0, #8
		MOV	R1, R9
		SUBS	R0, R0,	R1
		LSRS	R7, R0
		STRB.W	R7, [R8]
		BL	sub_800BAB0
		POP.W	{R4-R10,PC}
@ End of function sub_800BB50

@ ---------------------------------------------------------------------------
dword_800BBC4:	.long 0x200000B4	@ DATA XREF: sub_800BB04+2Er
					@ sub_800BB50+6r

@ =============== S U B	R O U T	I N E =======================================


sub_800BBC8:				@ CODE XREF: sub_800BBEC+2p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3

loc_800BBD2:				@ CODE XREF: sub_800BBC8+1Ej
		LDRB.W	R1, [R4],#1
		LDRB.W	R0, [R5],#1
		MOVS	R3, #8
		MOVS	R2, R6
		BL	sub_800BB50
		ADDS	R6, R6,	#1
		SUBS	R7, R7,	#1
		BNE	loc_800BBD2
		POP	{R4-R7,PC}
@ End of function sub_800BBC8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BBEC:				@ CODE XREF: sub_800BBF8+12p
		PUSH	{LR}
		BL	sub_800BBC8
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_800BBEC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BBF8:				@ CODE XREF: sub_800951C+1770p
					@ sub_800AD00+38p ...
		PUSH.W	{R4-R9,LR}
		MOV	R8, R0
		MOV	R9, R1
		MOVS	R6, R2
		MOVS	R7, R3
		LSRS	R4, R7,	#3
		BEQ	loc_800BC14
		MOVS	R3, R4
		BL	sub_800BBEC
		MOVS	R5, R0
		BNE	loc_800BC2C
		B	loc_800BC16
@ ---------------------------------------------------------------------------

loc_800BC14:				@ CODE XREF: sub_800BBF8+Ej
		MOVS	R5, #0

loc_800BC16:				@ CODE XREF: sub_800BBF8+1Aj
		LSLS	R7, R7,	#0x1D
		LSRS	R7, R7,	#0x1D
		BEQ	loc_800BC2C
		MOV	R0, R8
		LDRB	R1, [R0,R4]
		MOV	R0, R9
		LDRB	R0, [R0,R4]
		MOVS	R3, R7
		ADDS	R2, R6,	R4
		BL	sub_800BB50

loc_800BC2C:				@ CODE XREF: sub_800BBF8+18j
					@ sub_800BBF8+22j
		MOVS	R0, R5
		POP.W	{R4-R9,PC}
@ End of function sub_800BBF8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BC34:				@ CODE XREF: sub_800AFB8+4p
		LDR	R1, =0x2DC6C00
		STR	R1, [R0]
		MOVS	R1, #4
		STRH	R1, [R0,#4]
		BX	LR
@ End of function sub_800BC34

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800BC40:	.long 0x2DC6C00		@ DATA XREF: sub_800BC34r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_11. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BC48:				@ CODE XREF: sub_800AFDC+18p
		LDR	R1, =0x200000BC
		CBZ	R0, loc_800BC6A
		CMP	R0, #1
		BEQ	loc_800BC70
		CMP	R0, #2
		BEQ	loc_800BC76
		CMP	R0, #3
		BEQ	loc_800BC7E
		CMP	R0, #4
		BEQ	loc_800BC86
		CMP	R0, #0xA
		BEQ	loc_800BC8E
		CMP	R0, #0xB
		BEQ	loc_800BC92
		CMP	R0, #0xC
		BEQ	loc_800BC96
		B	loc_800BC9A
@ ---------------------------------------------------------------------------

loc_800BC6A:				@ CODE XREF: sub_800BC48+2j
		LDR	R0, =0x2000101D
		LDRB	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC70:				@ CODE XREF: sub_800BC48+6j
		LDR	R0, =0x200000C4
		LDR	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC76:				@ CODE XREF: sub_800BC48+Aj
		LDR	R0, =0x20001016
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC7E:				@ CODE XREF: sub_800BC48+Ej
		LDR	R0, =0x20001018
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC86:				@ CODE XREF: sub_800BC48+12j
		LDR	R0, =0x2000101A
		LDRSH.W	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC8E:				@ CODE XREF: sub_800BC48+16j
		LDRH	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC92:				@ CODE XREF: sub_800BC48+1Aj
		LDRH	R0, [R1,#2]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC96:				@ CODE XREF: sub_800BC48+1Ej
		LDRH	R0, [R1,#4]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800BC9A:				@ CODE XREF: sub_800BC48+20j
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ End of function sub_800BC48

@ ---------------------------------------------------------------------------
dword_800BCA0:	.long 0x200000BC	@ DATA XREF: sub_800BC48r
dword_800BCA4:	.long 0x2000101D	@ DATA XREF: sub_800BC48:loc_800BC6Ar
dword_800BCA8:	.long 0x200000C4	@ DATA XREF: sub_800BC48:loc_800BC70r
dword_800BCAC:	.long 0x20001016	@ DATA XREF: sub_800BC48:loc_800BC76r
dword_800BCB0:	.long 0x20001018	@ DATA XREF: sub_800BC48:loc_800BC7Er
dword_800BCB4:	.long 0x2000101A	@ DATA XREF: sub_800BC48:loc_800BC86r

@ =============== S U B	R O U T	I N E =======================================


sub_800BCB8:				@ CODE XREF: ROM:0800CD74p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20001020
		LDRB	R5, [R4]
		BL	sub_800B978
		CBZ	R0, loc_800BCD6
		LDR	R0, =0x2000101E
		LDRB	R0, [R0]
		CBZ	R0, loc_800BCD0
		CBNZ	R5, loc_800BCD0
		BL	sub_800B918

loc_800BCD0:				@ CODE XREF: sub_800BCB8+10j
					@ sub_800BCB8+12j
		MOVS	R0, #1
		STRB	R0, [R4]
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_800BCD6:				@ CODE XREF: sub_800BCB8+Aj
		CBZ	R5, locret_800BCDE
		STRB	R0, [R4]
		BL	sub_800B958

locret_800BCDE:				@ CODE XREF: sub_800BCB8:loc_800BCD6j
		POP	{R4,R5,PC}
@ End of function sub_800BCB8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: noreturn

sub_800BCE0:				@ CODE XREF: sub_800B3B8+44p
					@ sub_800B7B0+8Ap
		PUSH	{LR}
		BL	sub_800CD36
		LDR	R0, =0xE000ED0C
		LDR	R2, =0x5FA0007
		LDR	R1, [R0]
		UXTH	R1, R1
		ORRS	R2, R1
		STR	R2, [R0]

loc_800BCF2:				@ CODE XREF: sub_800BCE0:loc_800BCF2j
		B	loc_800BCF2
@ End of function sub_800BCE0

@ ---------------------------------------------------------------------------
dword_800BCF4:	.long 0xE000ED0C	@ DATA XREF: sub_800BCE0+6r
dword_800BCF8:	.long 0x5FA0007		@ DATA XREF: sub_800BCE0+8r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_12. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 0x10
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_13. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BD04:				@ CODE XREF: sub_800BDEC+Cp
		PUSH.W	{R0,R4-R11,LR}
		LDR	R7, =0x40010800
		STR	R2, [SP,#0]
		MOVS	R4, R0
		LDR	R0, =0x200000B8
		MOV	R8, R3
		MOVS	R5, R1
		MOVS	R6, #0
		MOV	R9, R8
		MOV	R10, R0
		MOVS	R0, #0x20
		MOV	R11, R0

loc_800BD1E:				@ CODE XREF: sub_800BD04+6Ej
		MOVS	R0, #0xFFFFFFF
		LSLS	R1, R4,	#0x1F
		LDR	R1, [R7]
		BPL	loc_800BD30
		ANDS	R0, R1
		ORRS.W	R0, R0,	#0x30000000
		B	loc_800BD36
@ ---------------------------------------------------------------------------

loc_800BD30:				@ CODE XREF: sub_800BD04+22j
		ANDS	R0, R1
		ORRS.W	R0, R0,	#0x80000000

loc_800BD36:				@ CODE XREF: sub_800BD04+2Aj
		STR	R0, [R7]
		MOVS	R0, #0x80
		LSLS	R1, R5,	#0x1F
		ITE pl
		STRPL	R0, [R7,#0x14]
		STRMI	R0, [R7,#0x10]
		STR.W	R11, [R7,#0x10]
		LDR.W	R0, [R10]
		LSRS	R4, R4,	#1
		LSRS	R5, R5,	#1
		BL	sub_800BFD0
		STR.W	R11, [R7,#0x14]
		LDR.W	R0, [R10]
		LSLS	R6, R6,	#0x17
		LSRS	R6, R6,	#0x18
		BL	sub_800BFD0
		LDR	R0, [R7,#8]
		LSLS	R0, R0,	#0x1B
		IT mi
		ORRSMI.W R6, R6, #0x80
		MOV	R0, R9
		SUBS	R0, R0,	#1
		MOV	R9, R0
		BNE	loc_800BD1E
		LDR	R0, [SP,#0]
		MOVS	R1, #8
		MOV	R2, R8
		SUBS	R1, R1,	R2
		LSRS	R6, R1
		STRB	R6, [R0]
		MOVS	R0, #0
		POP.W	{R1,R4-R11,PC}
@ End of function sub_800BD04

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BD88:				@ CODE XREF: sub_800BDEC+12p
		PUSH.W	{R4-R9,LR}
		MOV	R8, R2
		MOVS	R2, #0
		MOVS	R4, #0x20
		MOV	R9, R3

loc_800BD94:				@ CODE XREF: sub_800BD88+4Cj
		LDR	R5, =0x40010800
		MOVS	R6, #0xFFFFFFF
		LSLS	R7, R0,	#0x1F
		LDR	R7, [R5]
		BPL	loc_800BDA8
		ANDS	R6, R7
		ORRS.W	R6, R6,	#0x30000000
		B	loc_800BDAE
@ ---------------------------------------------------------------------------

loc_800BDA8:				@ CODE XREF: sub_800BD88+16j
		ANDS	R6, R7
		ORRS.W	R6, R6,	#0x80000000

loc_800BDAE:				@ CODE XREF: sub_800BD88+1Ej
		STR	R6, [R5]
		MOVS	R6, #0x80
		LSLS	R7, R1,	#0x1F
		ITE pl
		STRPL	R6, [R5,#0x14]
		STRMI	R6, [R5,#0x10]
		STR	R4, [R5,#0x10]
		STR	R4, [R5,#0x10]
		STR	R4, [R5,#0x14]
		LDR	R5, [R5,#8]
		LSRS	R0, R0,	#1
		LSRS	R1, R1,	#1
		LSLS	R2, R2,	#0x17
		LSRS	R2, R2,	#0x18
		LSLS	R5, R5,	#0x1B
		IT mi
		ORRSMI.W R2, R2, #0x80
		SUBS	R3, R3,	#1
		BNE	loc_800BD94
		MOVS	R0, #8
		MOV	R1, R9
		SUBS	R0, R0,	R1
		LSRS	R2, R0
		STRB.W	R2, [R8]
		MOVS	R0, #0
		POP.W	{R4-R9,PC}
@ End of function sub_800BD88

@ ---------------------------------------------------------------------------
dword_800BDE8:	.long 0x40010800	@ DATA XREF: sub_800BD04+4r
					@ sub_800BD88:loc_800BD94r

@ =============== S U B	R O U T	I N E =======================================


sub_800BDEC:				@ CODE XREF: sub_800BE04+16p
					@ sub_800BE28+2Cp
		PUSH	{R4,LR}
		LDR	R4, =0x200000B8
		LDR	R4, [R4]
		CBZ	R4, loc_800BDFA
		POP.W	{R4,LR}
		B	sub_800BD04
@ ---------------------------------------------------------------------------

loc_800BDFA:				@ CODE XREF: sub_800BDEC+6j
		POP.W	{R4,LR}
		B	sub_800BD88
@ End of function sub_800BDEC

@ ---------------------------------------------------------------------------
dword_800BE00:	.long 0x200000B8	@ DATA XREF: sub_800BB04:loc_800BB28r
					@ sub_800BD04+Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800BE04:				@ CODE XREF: sub_800BE28+12p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3

loc_800BE0E:				@ CODE XREF: sub_800BE04+1Ej
		LDRB.W	R1, [R4],#1
		LDRB.W	R0, [R5],#1
		MOVS	R3, #8
		MOVS	R2, R6
		BL	sub_800BDEC
		ADDS	R6, R6,	#1
		SUBS	R7, R7,	#1
		BNE	loc_800BE0E
		POP	{R4-R7,PC}
@ End of function sub_800BE04

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BE28:				@ CODE XREF: sub_800951C+1786p
		PUSH.W	{R4-R8,LR}
		MOV	R8, R0
		MOVS	R4, R1
		MOVS	R5, R2
		MOVS	R6, R3
		LSRS	R7, R6,	#3
		BEQ	loc_800BE42
		MOVS	R3, R7
		BL	sub_800BE04
		CBNZ	R0, locret_800BE58
		B	loc_800BE44
@ ---------------------------------------------------------------------------

loc_800BE42:				@ CODE XREF: sub_800BE28+Ej
		MOVS	R0, #0

loc_800BE44:				@ CODE XREF: sub_800BE28+18j
		LSLS	R1, R6,	#0x1D
		BEQ	locret_800BE58
		MOV	R0, R8
		LDRB	R1, [R0,R7]
		LDRB	R0, [R4,R7]
		LSLS	R3, R6,	#0x1D
		LSRS	R3, R3,	#0x1D
		ADDS	R2, R5,	R7
		BL	sub_800BDEC

locret_800BE58:				@ CODE XREF: sub_800BE28+16j
					@ sub_800BE28+1Ej
		POP.W	{R4-R8,PC}
@ End of function sub_800BE28


@ =============== S U B	R O U T	I N E =======================================


sub_800BE5C:				@ CODE XREF: sub_800B67C+18p
		LDR	R2, =0x20001020
		LDR	R1, =0x2000101F
		LDRB	R2, [R2]
		CBZ	R2, loc_800BE74
		LDR	R2, =0x2000101E
		LDRB	R2, [R2]
		CBZ	R2, loc_800BE74
		LDRB	R2, [R1]
		CMP	R2, R0
		BEQ	loc_800BE74
		STRB	R0, [R1]
		B	sub_800B918
@ ---------------------------------------------------------------------------

loc_800BE74:				@ CODE XREF: sub_800BE5C+6j
					@ sub_800BE5C+Cj ...
		STRB	R0, [R1]
		BX	LR
@ End of function sub_800BE5C

@ ---------------------------------------------------------------------------
dword_800BE78:	.long 0x20001020	@ DATA XREF: sub_800BCB8+2r
					@ sub_800BE5Cr
dword_800BE7C:	.long 0x2000101F	@ DATA XREF: sub_800BE5C+2r
dword_800BE80:	.long 0x2000101E	@ DATA XREF: sub_800BCB8+Cr
					@ sub_800BE5C+8r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800BF84

loc_800BE84:				@ CODE XREF: sub_800BF84+Cj
		LDR	R0, =0x40021018
		LDR	R2, =0x4004
		LDR	R3, =0x200000CC
		PUSH	{LR}
		LDR	R1, [R0]
		ORRS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x40010804
		MOVS	R2, #0xFFFFF0FF
		LDR	R1, [R0]
		ANDS	R2, R1
		ORRS.W	R1, R2,	#0x800
		LDR	R2, =0x8954400
		STR	R1, [R0]
		LDR	R0, =0x40013808
		LSRS	R1, R0,	#0x15
		STR	R1, [R0,#8]
		MOVS	R1, #0x24
		STR	R1, [R0,#4]
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R3, [R3]
		LSLS	R3, R3,	#4
		UDIV.W	R2, R2,	R3
		LDR	R3, =0x200000D0
		ADDS	R2, R2,	#1
		LSRS	R2, R2,	#1

loc_800BEC0:				@ CODE XREF: ROM:080095AEj
		LSLS	R2, R2,	#4
		STR	R2, [R0]
		LDR	R2, =0x200000D8
		LDR	R3, [R3]
		STR	R3, [R2]
		LDR	R3, =0x200000D4
		LDR	R2, =0x200000DC
		LDR	R3, [R3]
		STR	R3, [R2]
		LDR	R2, =0x200000E0
		STR	R1, [R2]
		LDR	R1, [R0,#4]
		ORRS.W	R1, R1,	#0x2000
		STR	R1, [R0,#4]
		MOVS	R1, #0x10
		MOVS	R0, #0x35
		BL	sub_800CE7C
		MOVS	R0, #0x35
		BL	sub_800CE10
		POP	{PC}
@ END OF FUNCTION CHUNK	FOR sub_800BF84
@ ---------------------------------------------------------------------------
		.align 0x10
dword_800BEF0:	.long 0x4004		@ DATA XREF: sub_800BF84-FEr
dword_800BEF4:	.long 0x40010804	@ DATA XREF: sub_800BF84-F2r
dword_800BEF8:	.long 0x8954400		@ DATA XREF: sub_800BF84-E4r
dword_800BEFC:	.long 0x40013808	@ DATA XREF: sub_800BF84-E0r
dword_800BF00:	.long 0x40021018	@ DATA XREF: sub_800BF84:loc_800BE84r

@ =============== S U B	R O U T	I N E =======================================


sub_800BF04:				@ CODE XREF: sub_800BFA0j
		LDR	R0, =0x4001380C
		MOVS	R2, #4
		LDR	R1, [R0]
		BICS	R1, R2
		STR	R1, [R0]
		BX	LR
@ End of function sub_800BF04

@ ---------------------------------------------------------------------------
dword_800BF10:	.long 0x4001380C	@ DATA XREF: sub_800BF04r

@ =============== S U B	R O U T	I N E =======================================


sub_800BF14:				@ CODE XREF: sub_800BFA4j
		CPSID	I
		LDR	R2, =0x200000D8
		LDR	R2, [R2]
		STR	R2, [R0]
		LDR	R0, =0x200000DC
		LDR	R0, [R0]
		STR	R0, [R1]
		CPSIE	I
		BX	LR
@ End of function sub_800BF14

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BF28:				@ CODE XREF: sub_800BFA8j
		CPSID	I
		LDR	R1, =0x200000D8
		LDR	R1, [R1]
		SUBS	R2, R0,	R1
		CMP	R2, #1
		BGE	loc_800BF46
		LDR	R2, =0x200000D0
		LDR	R3, [R2]
		LDR	R2, =0x200000D4
		SUBS	R0, R0,	R3
		LDR	R2, [R2]
		ADDS	R2, R3,	R2
		SUBS	R2, R2,	R1
		LDR	R1, =0x200000E0
		STR	R0, [R1]

loc_800BF46:				@ CODE XREF: sub_800BF28+Aj
		LDR	R0, =0x200000DC
		STR	R2, [R0]
		CPSIE	I
		BX	LR
@ End of function sub_800BF28

@ ---------------------------------------------------------------------------
		.align 0x10

loc_800BF50:				@ CODE XREF: ROM:0800BFBAj
		LDR	R1, =0x200000DC
		LDR	R3, =0x200000D8
		PUSH	{R4,LR}
		LDR	R2, [R1]
		LDR	R4, [R3]
		CBZ	R2, loc_800BF72
		SUBS	R2, R2,	#1
		STRB.W	R0, [R4],#1
		BNE	loc_800BF70
		LDR	R0, =0x200000E0
		MOVS	R4, #0
		LDR	R2, [R0]
		STR	R4, [R0]
		LDR	R0, =0x200000D0
		LDR	R4, [R0]

loc_800BF70:				@ CODE XREF: ROM:0800BF62j
		STR	R2, [R1]

loc_800BF72:				@ CODE XREF: ROM:0800BF5Aj
		STR	R4, [R3]
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_800BF78:	.long 0x200000DC	@ DATA XREF: sub_800BF84-B8r
					@ sub_800BF14+8r ...
dword_800BF7C:	.long 0x200000D8	@ DATA XREF: sub_800BF84-C0r
					@ sub_800BF14+2r ...
dword_800BF80:	.long 0x200000E0	@ DATA XREF: sub_800BF84-B2r
					@ sub_800BF28+1Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800BF84:				@ CODE XREF: sub_800D0D8+54p

@ FUNCTION CHUNK AT 0800BE84 SIZE 0000006A BYTES

		LDR	R0, =0x200000CC
		STR	R1, [R0]
		LDR	R0, =0x200000D0
		STR	R2, [R0]
		LDR	R0, =0x200000D4
		STR	R3, [R0]
		B	loc_800BE84
@ End of function sub_800BF84

@ ---------------------------------------------------------------------------
		.align 4
dword_800BF94:	.long 0x200000CC	@ DATA XREF: sub_800BF84-FCr
					@ sub_800BF84r
dword_800BF98:	.long 0x200000D0	@ DATA XREF: sub_800BF84-CAr
					@ sub_800BF28+Cr ...
dword_800BF9C:	.long 0x200000D4	@ DATA XREF: sub_800BF84-BAr
					@ sub_800BF28+10r ...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800BFA0:				@ CODE XREF: sub_800D0D8:loc_800D120p
					@ sub_800D13C+8p
		B	sub_800BF04
@ End of function sub_800BFA0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800BFA4:				@ CODE XREF: sub_800D190+20p
		B	sub_800BF14
@ End of function sub_800BFA4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800BFA8:				@ CODE XREF: sub_800D158+2Ap
		B	sub_800BF28
@ End of function sub_800BFA8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BFAC:				@ CODE XREF: sub_800D20C+58p
					@ sub_800D270+22p
		LDR	R0, =dword_800927C
		BX	LR
@ End of function sub_800BFAC

@ ---------------------------------------------------------------------------
off_800BFB0:	.long dword_800927C	@ DATA XREF: sub_800BFACr
@ ---------------------------------------------------------------------------
		LDR	R0, =0x40013804
		LDR	R0, [R0]
		UXTB	R0, R0
		B	loc_800BF50
@ ---------------------------------------------------------------------------
dword_800BFBC:	.long 0x40013804	@ DATA XREF: ROM:0800BFB4r
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_15. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 4
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_16. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800BFC8:				@ CODE XREF: ROM:0800C0E8p
		LDR	R0, =0x20004FFF
		BX	LR
@ End of function sub_800BFC8

@ ---------------------------------------------------------------------------
dword_800BFCC:	.long 0x20004FFF	@ DATA XREF: sub_800BFC8r

@ =============== S U B	R O U T	I N E =======================================


sub_800BFD0:				@ CODE XREF: sub_800BB50+40p
					@ sub_800BB50+58p ...
		SUBS	R0, R0,	#1
		BNE	sub_800BFD0
		BX	LR
@ End of function sub_800BFD0

@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800C010

loc_800BFD8:				@ CODE XREF: sub_800C010+10j
		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MULS	R1, R0
		LDRB	R1, [R2,R1]
		CBZ	R1, loc_800BFE6
		B.W	loc_800BA18
@ ---------------------------------------------------------------------------

loc_800BFE6:				@ CODE XREF: sub_800C010-30j
		B.W	loc_800BA24
@ END OF FUNCTION CHUNK	FOR sub_800C010
@ ---------------------------------------------------------------------------
		.align 4
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_14. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800BFF0:				@ CODE XREF: sub_800B3B8+2Ap
					@ sub_800B8A8+Cp ...

@ FUNCTION CHUNK AT 0800BA18 SIZE 0000000A BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MOVS	R3, #1
		MULS	R1, R0
		STRB	R3, [R2,R1]
		B.W	loc_800BA18
@ End of function sub_800BFF0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800C000:				@ CODE XREF: sub_800B3B8:loc_800B3E8p
					@ sub_800B8A8+1Ap ...

@ FUNCTION CHUNK AT 0800BA24 SIZE 0000000A BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MOVS	R3, #0
		MULS	R1, R0
		STRB	R3, [R2,R1]
		B.W	loc_800BA24
@ End of function sub_800C000

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800C010:				@ CODE XREF: sub_800B47C+8p
					@ ROM:0800C15Cp

@ FUNCTION CHUNK AT 0800BFD8 SIZE 00000012 BYTES

		LDR	R2, =0x200000E4
		MOVS	R1, #0xA
		MLA.W	R1, R0,	R1, R2
		LDRB	R2, [R1]
		EORS.W	R2, R2,	#1
		STRB	R2, [R1]
		B	loc_800BFD8
@ End of function sub_800C010

@ ---------------------------------------------------------------------------
		.align 4
dword_800C024:	.long 0x200000E4	@ DATA XREF: sub_800C010:loc_800BFD8r
					@ sub_800BFF0r	...
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800C04C

loc_800C028:				@ CODE XREF: sub_800C04C+1Ej
		LDR	R0, =0x200000F0
		LDR	R0, [R0]
		CBNZ	R0, loc_800C032

locret_800C02E:				@ CODE XREF: sub_800C04C-16j
		BX	LR
@ ---------------------------------------------------------------------------

loc_800C030:				@ CODE XREF: sub_800C04C-Ej
		MOVS	R0, R1

loc_800C032:				@ CODE XREF: sub_800C04C-20j
					@ sub_800C04C-2j
		LDR	R1, [R0,#4]
		CMP	R1, #0
		BEQ	locret_800C02E
		LDR	R2, [R0]
		ADDS	R3, R0,	R2
		CMP	R3, R1
		BNE	loc_800C030
		LDR	R3, [R1,#4]
		STR	R3, [R0,#4]
		LDR	R1, [R1]
		ADDS	R1, R2,	R1
		STR	R1, [R0]
		B	loc_800C032
@ END OF FUNCTION CHUNK	FOR sub_800C04C

@ =============== S U B	R O U T	I N E =======================================


sub_800C04C:				@ CODE XREF: sub_800C0CC+8p
					@ sub_800C0DC+4j

@ FUNCTION CHUNK AT 0800C028 SIZE 00000024 BYTES

		MOVS	R2, #0
		STR	R2, [R0,#4]
		STR	R1, [R0]
		LDR	R1, =0x200000F0
		LDR	R2, [R1]
		CBNZ	R2, loc_800C05E
		STR	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800C05C:				@ CODE XREF: sub_800C04C+18j
		ADDS	R1, R2,	#4

loc_800C05E:				@ CODE XREF: sub_800C04C+Aj
		LDR	R2, [R1]
		CBZ	R2, loc_800C066
		CMP	R0, R2
		BCS	loc_800C05C

loc_800C066:				@ CODE XREF: sub_800C04C+14j
		STR	R2, [R0,#4]
		STR	R0, [R1]
		B	loc_800C028
@ End of function sub_800C04C


@ =============== S U B	R O U T	I N E =======================================


sub_800C06C:				@ CODE XREF: sub_800A8D0+24p
					@ sub_800A9AC+28p ...
		LDR	R1, =0x200000F0
		MOVS	R0, #0
		LDR	R1, [R1]
		B	loc_800C07E
@ ---------------------------------------------------------------------------

loc_800C074:				@ CODE XREF: sub_800C06C+14j
		LDR	R2, [R1]
		CMP	R0, R2
		IT cc
		MOVCC	R0, R2
		LDR	R1, [R1,#4]

loc_800C07E:				@ CODE XREF: sub_800C06C+6j
		CMP	R1, #0
		BNE	loc_800C074
		CBZ	R0, locret_800C086
		SUBS	R0, #8

locret_800C086:				@ CODE XREF: sub_800C06C+16j
		BX	LR
@ End of function sub_800C06C


@ =============== S U B	R O U T	I N E =======================================


sub_800C088:				@ CODE XREF: sub_800A8D0+34p
					@ sub_800A9AC+38p ...
		PUSH	{R4,LR}
		MOVS	R1, R0
		MOVS	R0, #0
		ADDS	R1, R1,	#7
		MOVS	R2, #7
		BICS	R1, R2
		LDR	R2, =0x200000F0
		ADDS	R1, #8
		B	loc_800C09C
@ ---------------------------------------------------------------------------

loc_800C09A:				@ CODE XREF: sub_800C088:loc_800C0B8j
		ADDS	R2, R3,	#4

loc_800C09C:				@ CODE XREF: sub_800C088+10j
		LDR	R3, [R2]
		CBZ	R3, locret_800C0C6
		LDR	R4, [R3]
		CMP	R1, R4
		BCS	loc_800C0B8
		MOVS	R0, R3
		ADDS	R3, R3,	R1
		STR	R3, [R2]
		LDR	R2, [R0]
		SUBS	R2, R2,	R1
		STR	R2, [R3]
		LDR	R2, [R0,#4]
		STR	R2, [R3,#4]
		B	loc_800C0C0
@ ---------------------------------------------------------------------------

loc_800C0B8:				@ CODE XREF: sub_800C088+1Cj
		BNE	loc_800C09A
		MOVS	R0, R3
		LDR	R3, [R3,#4]
		STR	R3, [R2]

loc_800C0C0:				@ CODE XREF: sub_800C088+2Ej
		CBZ	R0, locret_800C0C6
		STR.W	R1, [R0],#8

locret_800C0C6:				@ CODE XREF: sub_800C088+16j
					@ sub_800C088:loc_800C0C0j
		POP	{R4,PC}
@ End of function sub_800C088

@ ---------------------------------------------------------------------------
dword_800C0C8:	.long 0x200000F0	@ DATA XREF: sub_800C04C:loc_800C028r
					@ sub_800C04C+6r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800C0CC:				@ CODE XREF: sub_800A8D0+7Ap
					@ sub_800A9AC+4Cp ...
		PUSH	{LR}
		CBZ	R0, locret_800C0D8
		LDR.W	R1, [R0,#-8]!
		BL	sub_800C04C

locret_800C0D8:				@ CODE XREF: sub_800C0CC+2j
		POP	{PC}
@ End of function sub_800C0CC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C0DC:				@ CODE XREF: ROM:0800C0F4p
		MOVS	R2, #7
		BICS	R1, R2
		B	sub_800C04C
@ End of function sub_800C0DC

@ ---------------------------------------------------------------------------
		.align 4
		PUSH	{R0,R4,LR}
		LDR	R4, =0x20001408
		BL	sub_800BFC8
		SUBS	R1, R0,	R4
		ADDS	R1, R1,	#1
		MOVS	R0, R4
		LDR	R4, =0x2000067C
		BL	sub_800C0DC
		BL	sub_800B98C
		LDR	R0, =0x4E20
		BL	sub_800BB04
		MOVS	R0, #1
		BL	nullsub_10
		BL	sub_800BA30
		BL	nullsub_14
		MOVS	R0, #0
		BL	sub_800BFF0
		BL	sub_800C294
		B	loc_800C154
@ ---------------------------------------------------------------------------

loc_800C11C:				@ CODE XREF: ROM:0800C14Ej
		BL	sub_800BFF0
		MOVS	R0, #1
		STR	R0, [R4]
		BL	nullsub_12
		MOV	R0, SP
		BL	sub_800C2D4
		CBNZ	R0, loc_800C148
		BL	nullsub_13
		MOVS.W	R0, #0xFFFFFFFF
		STR	R0, [R4]
		MOVS	R0, #0
		BL	sub_800C000
		LDRB.W	R0, [SP]
		BL	sub_800B48C

loc_800C148:				@ CODE XREF: ROM:0800C12Ej
					@ ROM:0800C15Aj
		BL	sub_800C1B8
		CMP	R0, #0
		BEQ	loc_800C11C
		BL	sub_800C2B8

loc_800C154:				@ CODE XREF: ROM:0800C11Aj
					@ ROM:0800C166j
		BL	sub_800C2D0
		CMP	R0, #0
		BNE	loc_800C148
		BL	sub_800C010
		MOVS	R0, #0x32
		BL	sub_800CA24
		B	loc_800C154
@ ---------------------------------------------------------------------------
dword_800C168:	.long 0x20001408	@ DATA XREF: ROM:0800C0E6r
dword_800C16C:	.long 0x2000067C	@ DATA XREF: ROM:0800C0F2r
dword_800C170:	.long 0x4E20		@ DATA XREF: ROM:0800C0FCr

@ =============== S U B	R O U T	I N E =======================================


sub_800C174:				@ CODE XREF: sub_800C2D4:loc_800C2E6p
		PUSH	{R0,R4,LR}
		LDR	R4, =0x200000F8
		BL	sub_800C5D8
		CBNZ	R0, loc_800C188
		MOVS	R1, #2
		MOVS	R0, R4
		BL	sub_800CBF4
		POP	{R0,R4,PC}
@ ---------------------------------------------------------------------------

loc_800C188:				@ CODE XREF: sub_800C174+8j
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800C5B8
		MOVS	R0, R4
		BL	sub_800CBC8
		POP	{R0,R4,PC}
@ End of function sub_800C174


@ =============== S U B	R O U T	I N E =======================================


sub_800C198:				@ CODE XREF: sub_800C2D4+16p
		PUSH	{LR}
		BL	sub_800C5D8
		CBZ	R0, loc_800C1B2
		BL	sub_800C5D4
		CMP	R0, #1
		BLT	loc_800C1B2
		LDR	R0, =0x200000F4
		LDR	R1, =off_80092A0
		STR	R1, [R0]
		MOVS	R0, #1
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_800C1B2:				@ CODE XREF: sub_800C198+6j
					@ sub_800C198+Ej
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_800C198

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C1B8:				@ CODE XREF: ROM:loc_800C148p
					@ sub_800C2D4+4p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#8]
		BX	R0
@ End of function sub_800C1B8


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800C1C0:				@ CODE XREF: sub_800C2B8+2p
		B.W	sub_800C414
@ End of function sub_800C1C0


@ =============== S U B	R O U T	I N E =======================================


sub_800C1C4:				@ CODE XREF: sub_800A8D0+62p
					@ sub_800AA34+32p ...
		PUSH	{LR}
		MOVS	R2, R1
		ORRS	R2, R0
		BEQ	locret_800C1D4
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x18]
		BLX	R2

locret_800C1D4:				@ CODE XREF: sub_800C1C4+6j
		POP	{PC}
@ End of function sub_800C1C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C1D8:				@ CODE XREF: sub_800C23C-6p
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x20]
		BX	R2
@ End of function sub_800C1D8


@ =============== S U B	R O U T	I N E =======================================


sub_800C1E0:				@ CODE XREF: sub_800A8D0+72p
					@ ROM:0800AC36p
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x20
		MOVS	R4, R0
		MOV	R0, SP
		MOVS	R1, #0
		MOVS	R2, #0x20

loc_800C1EC:				@ CODE XREF: sub_800C1E0+10j
		SUBS	R2, R2,	#4
		STR	R1, [R0,R2]
		BNE	loc_800C1EC

loc_800C1F2:				@ CODE XREF: sub_800C1E0+28j
		CMP	R4, #0x21
		ITE cc
		MOVCC	R5, R4
		MOVCS	R5, #0x20
		LDR	R2, =0x200000F4
		MOVS	R1, R5
		MOV	R0, SP
		LDR	R2, [R2]
		LDR	R2, [R2,#0x18]
		BLX	R2
		SUBS	R4, R4,	R5
		BNE	loc_800C1F2
		ADD	SP, SP,	#0x20
		POP	{R4,R5,PC}
@ End of function sub_800C1E0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800C210:				@ CODE XREF: sub_800951C+17A4p
					@ sub_800D158+Cp
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x1C]
		BX	R2
@ End of function sub_800C210


@ =============== S U B	R O U T	I N E =======================================


sub_800C218:				@ CODE XREF: sub_800951C+17CCp
					@ sub_800AF44+2Ep ...
		PUSH	{R0,LR}
		MOVS	R1, #1
		B	loc_800C224
@ ---------------------------------------------------------------------------
		.align 0x10

loc_800C220:				@ CODE XREF: sub_800ABD8+Ep
					@ sub_800AEFC+4p ...
		PUSH	{R0,LR}
		MOVS	R1, #2

loc_800C224:				@ CODE XREF: sub_800C218+4j
					@ sub_800C22C+4j
		MOV	R0, SP
		BL	sub_800C1C4
		POP	{R0,PC}
@ End of function sub_800C218


@ =============== S U B	R O U T	I N E =======================================


sub_800C22C:				@ CODE XREF: sub_800AB3C+8Cp
					@ sub_800AFCC+Ap ...
		PUSH	{R0,LR}
		MOVS	R1, #4
		B	loc_800C224
@ End of function sub_800C22C

@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800C23C

loc_800C234:				@ CODE XREF: sub_800C23C+4j
		MOV	R0, SP
		BL	sub_800C1D8
		POP	{R0,PC}
@ END OF FUNCTION CHUNK	FOR sub_800C23C

@ =============== S U B	R O U T	I N E =======================================


sub_800C23C:				@ CODE XREF: sub_800D20C+4Cp
					@ sub_800D20C+52p

@ FUNCTION CHUNK AT 0800C234 SIZE 00000008 BYTES

		PUSH	{R0,LR}
		MOVS	R1, #4
		B	loc_800C234
@ End of function sub_800C23C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C244:				@ CODE XREF: sub_800951C+17C4p
					@ sub_800D190:loc_800D202p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#0x24]
		BX	R0
@ End of function sub_800C244


@ =============== S U B	R O U T	I N E =======================================


sub_800C24C:				@ CODE XREF: sub_800A8D0+8p
					@ sub_800A8D0+10p ...
		CBNZ	R1, loc_800C252
		MOVS	R0, #0
		BX	LR
@ ---------------------------------------------------------------------------

loc_800C252:				@ CODE XREF: sub_800C24Cj
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0xC]
		BX	R2
@ End of function sub_800C24C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C25C:				@ CODE XREF: sub_800A9AC+44p
					@ sub_800AAD0+64p ...
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#0x20
		MOVS	R4, R0

loc_800C262:				@ CODE XREF: sub_800C25C+1Aj
		CMP	R4, #0x21
		ITE cc
		MOVCC	R5, R4
		MOVCS	R5, #0x20
		MOVS	R1, R5
		MOV	R0, SP
		BL	sub_800C24C
		CBNZ	R0, loc_800C278
		SUBS	R4, R4,	R5
		BNE	loc_800C262

loc_800C278:				@ CODE XREF: sub_800C25C+16j
		ADD	SP, SP,	#0x20
		POP	{R4,R5,PC}
@ End of function sub_800C25C


@ =============== S U B	R O U T	I N E =======================================


sub_800C27C:				@ CODE XREF: sub_800A954+10p
		LDR	R2, =0x200000F4
		LDR	R2, [R2]
		LDR	R2, [R2,#0x10]
		BX	R2
@ End of function sub_800C27C


@ =============== S U B	R O U T	I N E =======================================


sub_800C284:				@ CODE XREF: sub_800A954:loc_800A96Ap
					@ sub_800951C:loc_800AC4Ep
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0]
		BX	R0
@ End of function sub_800C284


@ =============== S U B	R O U T	I N E =======================================


sub_800C28C:				@ CODE XREF: sub_800D158:loc_800D168p
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#4]
		BX	R0
@ End of function sub_800C28C


@ =============== S U B	R O U T	I N E =======================================


sub_800C294:				@ CODE XREF: ROM:0800C116p
		LDR	R0, =0x200000F8
		PUSH	{LR}
		BL	sub_800CB24
		BL	sub_800C3D8
		LDR	R0, =0x200000F4
		LDR	R1, =off_80092A0
		STR	R1, [R0]
		POP	{PC}
@ End of function sub_800C294

@ ---------------------------------------------------------------------------
off_800C2A8:	.long off_80092A0	@ DATA XREF: sub_800C198+12r
					@ sub_800C294+Er

@ =============== S U B	R O U T	I N E =======================================


sub_800C2AC:				@ CODE XREF: ROM:0800C398j
					@ ROM:0800C3AAp
		LDR	R0, =0x200000F8
		B.W	sub_800CB84
@ End of function sub_800C2AC

@ ---------------------------------------------------------------------------
		.align 4
dword_800C2B4:	.long 0x200000F8	@ DATA XREF: sub_800C174+2r
					@ sub_800C294r	...

@ =============== S U B	R O U T	I N E =======================================


sub_800C2B8:				@ CODE XREF: ROM:0800C150p
					@ sub_800C2D4+Ap
		PUSH	{LR}
		BL	sub_800C1C0
		LDR	R0, =0x200000F4
		LDR	R0, [R0]
		LDR	R0, [R0,#0x14]
		LDR.W	LR, [SP+0],#4
		BX	R0
@ End of function sub_800C2B8

@ ---------------------------------------------------------------------------
		.align 4
dword_800C2CC:	.long 0x200000F4	@ DATA XREF: sub_800C198+10r
					@ sub_800C1B8r	...

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800C2D0:				@ CODE XREF: ROM:loc_800C154p
		B.W	sub_800C5D8
@ End of function sub_800C2D0


@ =============== S U B	R O U T	I N E =======================================


sub_800C2D4:				@ CODE XREF: ROM:0800C12Ap
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800C1B8
		CBZ	R0, loc_800C2E2
		BL	sub_800C2B8

loc_800C2E2:				@ CODE XREF: sub_800C2D4+8j
		BL	sub_800C5F0

loc_800C2E6:				@ CODE XREF: sub_800C2D4+1Cj
		BL	sub_800C174
		BL	sub_800C198
		CMP	R0, #0
		BEQ	loc_800C2E6
		MOVS	R1, #1
		MOVS	R0, R4
		BL	sub_800C24C
		MOVS	R4, R0
		BL	sub_800C600
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_800C2D4


@ =============== S U B	R O U T	I N E =======================================


sub_800C304:				@ CODE XREF: sub_800C3D8+Ap
		PUSH	{R0,LR}
		MOVS	R3, #0
		MOVS	R0, #0
		PUSH	{R0}
		MOVS	R2, #0x40
		MOVS	R1, #2
		MOVS	R0, #1
		BL	sub_800DB38
		LDR	R3, =0x20000114
		STRB.W	R0, [SP,#4]
		MOVS	R0, #0x40
		PUSH	{R0}
		MOV	R2, R0
		MOVS	R1, #2
		MOVS	R0, #0
		BL	sub_800DB38
		STRB.W	R0, [SP,#9]
		ADD	R0, SP,	#8
		BL	sub_800D424
		POP	{R0-R2,PC}
@ End of function sub_800C304

@ ---------------------------------------------------------------------------
		.align 4
dword_800C338:	.long 0x20000114	@ DATA XREF: sub_800C304+12r

@ =============== S U B	R O U T	I N E =======================================


sub_800C33C:				@ CODE XREF: sub_800C35C+16j
		PUSH	{R4,LR}
		MOVS	R2, R0
		LDR	R4, =0x20000014
		MOVS	R3, #0xA

loc_800C344:				@ CODE XREF: sub_800C33C+1Cj
		MOVS	R0, R2
		MOVS	R1, #0xA
		BL	sub_800EB88
		ADDS	R0, #0x30
		STRB	R0, [R4,R3]
		MOVS	R0, #0xA
		UDIV.W	R2, R2,	R0
		SUBS	R3, R3,	#1
		BNE	loc_800C344
		POP	{R4,PC}
@ End of function sub_800C33C


@ =============== S U B	R O U T	I N E =======================================


sub_800C35C:				@ CODE XREF: sub_800C3D8+2p
		LDR	R0, =byte_800F801
		LDRB	R0, [R0]
		CMP	R0, #1
		BEQ	loc_800C36A
		CMP	R0, #2
		BEQ	loc_800C36E
		B	loc_800C374
@ ---------------------------------------------------------------------------

loc_800C36A:				@ CODE XREF: sub_800C35C+6j
		LDR	R0, =byte_800FC00
		B	loc_800C370
@ ---------------------------------------------------------------------------

loc_800C36E:				@ CODE XREF: sub_800C35C+Aj
		LDR	R0, =unk_800F808

loc_800C370:				@ CODE XREF: sub_800C35C+10j
		LDR	R0, [R0]
		B	sub_800C33C
@ ---------------------------------------------------------------------------

loc_800C374:				@ CODE XREF: sub_800C35C+Cj
		LDR	R0, =byte_800F800
		LDRB	R0, [R0]
		CMP	R0, #4
		ITTT cc
		LDRCC	R1, =0x2000004A
		ADDCCW	R0, R0,	#0x101
		STRHCC	R0, [R1]
		BX	LR
@ End of function sub_800C35C

@ ---------------------------------------------------------------------------
		.align 4
off_800C388:	.long byte_800F801	@ DATA XREF: sub_800C35Cr
off_800C38C:	.long byte_800FC00	@ DATA XREF: sub_800C35C:loc_800C36Ar
off_800C390:	.long unk_800F808	@ DATA XREF: sub_800C35C:loc_800C36Er
off_800C394:	.long byte_800F800	@ DATA XREF: sub_800C35C:loc_800C374r
@ ---------------------------------------------------------------------------
		B.W	sub_800C2AC
@ ---------------------------------------------------------------------------
		PUSH	{LR}
		BL	sub_800E078
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		IT ne
		BLNE	sub_800C2AC
		POP	{PC}

@ =============== S U B	R O U T	I N E =======================================


sub_800C3B0:				@ CODE XREF: sub_800E524+50p
		LDR	R0, =0x20000048
		LDRH	R0, [R0]
		BX	LR
@ End of function sub_800C3B0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C3B8:				@ CODE XREF: sub_800E524+5Cp
		LDR	R0, =0x2000004A
		LDRH	R0, [R0]
		BX	LR
@ End of function sub_800C3B8

@ ---------------------------------------------------------------------------
		.align 0x10
@ START	OF FUNCTION CHUNK FOR sub_800E624

loc_800C3C0:				@ CODE XREF: sub_800E624:loc_800E636j
		LDR	R0, =0x20000020
		LDR	R0, [R0]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800E624
@ ---------------------------------------------------------------------------
		.align 4
@ START	OF FUNCTION CHUNK FOR sub_800E624

loc_800C3C8:				@ CODE XREF: sub_800E624:loc_800E63Aj
		LDR	R0, =0x20000024
		LDR	R0, [R0]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800E624
@ ---------------------------------------------------------------------------
		.align 0x10
@ START	OF FUNCTION CHUNK FOR sub_800E624

loc_800C3D0:				@ CODE XREF: sub_800E624:loc_800E63Ej
		LDR	R0, =0x20000014
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800E624
@ ---------------------------------------------------------------------------
dword_800C3D4:	.long 0x20000014	@ DATA XREF: sub_800C33C+4r
					@ sub_800E624:loc_800C3D0r

@ =============== S U B	R O U T	I N E =======================================


sub_800C3D8:				@ CODE XREF: sub_800C294+8p
		PUSH	{LR}
		BL	sub_800C35C
		BL	sub_800DC3C
		BL	sub_800C304
		BL	sub_800DC78
		LDR	R0, =(loc_8006798+1)
		BL	sub_800D464
		LDR	R1, =(sub_800679C+1)
		LDR	R0, =0x20000104
		MOVS	R3, #0
		MOVS	R2, #0
		LDR.W	LR, [SP+0],#4
		B.W	sub_800E00C
@ End of function sub_800C3D8

@ ---------------------------------------------------------------------------
off_800C400:	.long loc_8006798+1	@ DATA XREF: sub_800C3D8+12r
off_800C404:	.long sub_800679C+1	@ DATA XREF: sub_800C3D8+18r
dword_800C408:	.long 0x20000104	@ DATA XREF: sub_800C3D8+1Ar
@ ---------------------------------------------------------------------------
		LDR	R0, =0x20001021
		LDRB	R0, [R0]
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C414:				@ CODE XREF: sub_800C1C0j
		LDR	R0, =0x20001021
		MOVS	R1, #0
		STRB	R1, [R0]
		BX	LR
@ End of function sub_800C414

@ ---------------------------------------------------------------------------
		PUSH	{LR}
		BL	nullsub_16
		MOVS	R0, #0xA
		BL	sub_800CA24
		LDR.W	LR, [SP],#4
		B.W	nullsub_15
@ ---------------------------------------------------------------------------
		PUSH.W	{R4-R11,LR}
		MOV	R11, R1
		LDR	R1, =0x20001021
		MOV	R8, R1
		LDRB.W	R1, [R8]
		CMP	R1, #0
		BNE	locret_800C4D4
		LDR	R5, =0x20000194
		MOVS	R4, R0
		LDR	R0, =0x20000154
		LDR	R7, [R5]
		MOV	R6, R11
		MOV	R9, R0
		CBZ	R7, loc_800C492
		MOVS	R0, #0x40
		SUBS	R0, R0,	R7
		CMP	R6, R0
		ITE cs
		MOVCS	R10, R0
		MOVCC	R10, R6
		MOV	R2, R10
		MOVS	R1, R4
		MOV	R0, R9
		ADDS	R0, R0,	R7
		BL	sub_800EB50
		ADDS.W	R7, R10, R7
		ADDS.W	R4, R10, R4
		SUBS.W	R6, R6,	R10
		CMP	R7, #0x40
		BNE	loc_800C492
		LDR	R0, =0x20000010
		MOVS	R2, #0
		MOVS	R1, #0x40
		LDR	R3, [R0]
		MOV	R0, R9
		BL	sub_800D3FC
		CMP	R0, #0x40
		ITT ne
		MOVNE	R0, #1
		STRBNE.W R0, [R8]
		MOVS	R7, #0

loc_800C492:				@ CODE XREF: ROM:0800C44Ej
					@ ROM:0800C476j
		LSRS	R0, R6,	#6
		LSLS	R0, R0,	#6
		MOV	R10, R0
		BEQ	loc_800C4BA
		LDR	R0, =0x20000010
		MOVS	R2, #0
		MOV	R1, R10
		LDR	R3, [R0]
		MOVS	R0, R4
		BL	sub_800D3FC
		CMP	R0, R10
		ITT ne
		MOVNE	R0, #1
		STRBNE.W R0, [R8]
		ADDS.W	R4, R10, R4
		SUBS.W	R6, R6,	R10

loc_800C4BA:				@ CODE XREF: ROM:0800C498j
		CBZ	R6, loc_800C4C8
		MOVS	R2, R6
		MOVS	R1, R4
		MOV	R0, R9
		BL	sub_800EB50
		MOVS	R7, R6

loc_800C4C8:				@ CODE XREF: ROM:loc_800C4BAj
		LDR	R0, =0x20000198
		STR	R7, [R5]
		MOV	R2, R11
		LDR	R1, [R0]
		ADDS	R1, R1,	R2
		STR	R1, [R0]

locret_800C4D4:				@ CODE XREF: ROM:0800C440j
		POP.W	{R4-R11,PC}

@ =============== S U B	R O U T	I N E =======================================


sub_800C4D8:				@ CODE XREF: ROM:0800C528p
					@ sub_800C544+12p
		PUSH	{R4-R7,LR}
		LDR	R4, =0x20000198
		LDR	R0, [R4]
		CBZ	R0, locret_800C516
		LDR	R5, =0x20001021
		LDRB	R1, [R5]
		CBNZ	R1, locret_800C516
		LDR	R6, =0x20000194
		MOVS	R7, #0
		LDR	R1, [R6]
		CBZ	R1, loc_800C508
		LDR	R0, =0x20000010
		MOVS	R2, #1
		LDR	R3, [R0]
		LDR	R0, =0x20000154
		BL	sub_800D3FC
		LDR	R1, [R6]
		CMP	R0, R1
		ITT ne
		MOVNE	R0, #1
		STRBNE	R0, [R5]
		STR	R7, [R6]
		B	loc_800C514
@ ---------------------------------------------------------------------------

loc_800C508:				@ CODE XREF: sub_800C4D8+14j
		LSLS	R1, R0,	#0x1A
		BNE	loc_800C514
		LSLS	R0, R0,	#0x15
		IT ne
		BLNE	sub_800D3EC

loc_800C514:				@ CODE XREF: sub_800C4D8+2Ej
					@ sub_800C4D8+32j
		STR	R7, [R4]

locret_800C516:				@ CODE XREF: sub_800C4D8+6j
					@ sub_800C4D8+Cj
		POP	{R4-R7,PC}
@ End of function sub_800C4D8

@ ---------------------------------------------------------------------------
dword_800C518:	.long 0x20000154	@ DATA XREF: ROM:0800C446r
					@ sub_800C4D8+1Cr
@ ---------------------------------------------------------------------------
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20001021
		MOVS	R4, R0
		MOVS	R5, R1
		LDRB	R0, [R6]
		CBNZ	R0, locret_800C542
		BL	sub_800C4D8
		LDR	R0, =0x20000010
		MOVS	R2, #1
		MOVS	R1, R5
		LDR	R3, [R0]
		MOVS	R0, R4
		BL	sub_800D3FC
		CMP	R0, R5
		ITT ne
		MOVNE	R0, #1
		STRBNE	R0, [R6]

locret_800C542:				@ CODE XREF: ROM:0800C526j
		POP	{R4-R6,PC}

@ =============== S U B	R O U T	I N E =======================================


sub_800C544:				@ CODE XREF: ROM:08009720p
					@ ROM:08009766p ...
		PUSH	{R4,R5,LR}
		MOVS	R5, R0
		LDR	R0, =0x20001021
		MOVS	R4, R1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800C574
		LDR	R0, =0x20000194
		LDR	R0, [R0]
		CBZ	R0, loc_800C55A
		BL	sub_800C4D8

loc_800C55A:				@ CODE XREF: sub_800C544+10j
		MOVS	R1, R4
		MOVS	R0, R5
		BL	sub_800D3C8
		LDR	R0, =0x20000198
		LSLS	R1, R4,	#0x1A
		ITTT ne
		MOVNE	R1, #0
		STRNE	R1, [R0]
		POPNE	{R4,R5,PC}
		LDR	R1, [R0]
		ADDS	R1, R1,	R4
		STR	R1, [R0]

locret_800C574:				@ CODE XREF: sub_800C544+Aj
		POP	{R4,R5,PC}
@ End of function sub_800C544

@ ---------------------------------------------------------------------------
		.align 4
dword_800C578:	.long 0x20000194	@ CODE XREF: sub_8009688+Ep
					@ sub_800969C+18p
					@ DATA XREF: ...
dword_800C57C:	.long 0x20000198	@ DATA XREF: ROM:loc_800C4C8r
					@ sub_800C4D8+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800C580:				@ CODE XREF: sub_800D20C+Ep
					@ sub_800D20C+16p ...
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20001021
		MOVS	R4, R0
		MOVS	R5, R1
		LDRB	R0, [R6]
		CBZ	R0, loc_800C592
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_800C592:				@ CODE XREF: sub_800C580+Aj
		LDR	R0, =0x20000010
		LDR	R2, [R0]
		MOVS	R0, R4
		BL	sub_800D414
		CMP	R0, R5
		BEQ	loc_800C5B4
		MOVS	R2, R5
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_800EB68
		MOVS	R0, #1
		STRB	R0, [R6]
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4-R6,PC}
@ End of function sub_800C580

@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800951C

loc_800C5B4:				@ CODE XREF: sub_800951C+22j
					@ ROM:0800954Ej ...
		MOVS	R0, #0
		POP	{R4-R6,PC}
@ END OF FUNCTION CHUNK	FOR sub_800951C

@ =============== S U B	R O U T	I N E =======================================


sub_800C5B8:				@ CODE XREF: sub_800C174+18p

@ FUNCTION CHUNK AT 0800D3BC SIZE 0000000C BYTES

		LDR	R2, =0x20001021
		LDRB	R2, [R2]
		CBZ	R2, loc_800C5C4
		MOVS.W	R0, #0xFFFFFFFF
		BX	LR
@ ---------------------------------------------------------------------------

loc_800C5C4:				@ CODE XREF: sub_800C5B8+4j
		B.W	loc_800D3BC
@ End of function sub_800C5B8

@ ---------------------------------------------------------------------------
dword_800C5C8:	.long 0x20001021	@ DATA XREF: ROM:0800C40Cr
					@ sub_800C414r	...
@ ---------------------------------------------------------------------------
		B.W	loc_800D3E4
@ ---------------------------------------------------------------------------
		B.W	loc_800D3E0

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800C5D4:				@ CODE XREF: sub_800C198+8p
		B.W	sub_800D3D8
@ End of function sub_800C5D4


@ =============== S U B	R O U T	I N E =======================================


sub_800C5D8:				@ CODE XREF: sub_800C174+4p
					@ sub_800C198+2p ...
		PUSH	{LR}
		BL	sub_800E078
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		ITT eq
		MOVEQ	R0, #1
		POPEQ	{PC}
		MOVS	R0, #0
		POP	{PC}
@ End of function sub_800C5D8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800C5F0:				@ CODE XREF: sub_800C2D4:loc_800C2E2p
		LDR	R0, =0x20000010
		LDR	R1, =0x20000100
		LDR	R2, [R0]
		STR	R2, [R1]
		MOVS	R1, #0
		STR	R1, [R0]
		BX	LR
@ End of function sub_800C5F0

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800C600:				@ CODE XREF: sub_800C2D4+28p
		LDR	R1, =0x20000100
		LDR	R0, =0x20000010
		LDR	R1, [R1]
		STR	R1, [R0]
		BX	LR
@ End of function sub_800C600

@ ---------------------------------------------------------------------------
		.align 4
dword_800C60C:	.long 0x20000100	@ DATA XREF: sub_800C5F0+2r
					@ sub_800C600r
dword_800C610:	.long 0x20000010	@ DATA XREF: ROM:0800C478r
					@ ROM:0800C49Ar ...
dword_800C614:	.long 0x20000048	@ DATA XREF: sub_800C3B0r
dword_800C618:	.long 0x2000004A	@ DATA XREF: sub_800C35C+20r
					@ sub_800C3B8r
dword_800C61C:	.long 0x20000020	@ DATA XREF: sub_800E624:loc_800C3C0r
dword_800C620:	.long 0x20000024	@ DATA XREF: sub_800E624:loc_800C3C8r

@ =============== S U B	R O U T	I N E =======================================


sub_800C624:				@ CODE XREF: sub_800C9BC:loc_800C9D0p
		LDR	R0, =0x20001208
		BX	LR
@ End of function sub_800C624

@ ---------------------------------------------------------------------------
dword_800C628:	.long 0x20001208	@ DATA XREF: sub_800C624r

@ =============== S U B	R O U T	I N E =======================================


sub_800C62C:				@ CODE XREF: sub_800C9BC+1Ap
		MOV	R0, SP
		BX	LR
@ End of function sub_800C62C


@ =============== S U B	R O U T	I N E =======================================


sub_800C630:				@ CODE XREF: sub_800AD00:loc_800AD4Ep
					@ sub_800CDC0+30p ...
		LDR	R0, =0x200001A1
		PUSH	{LR}
		LDRB	R0, [R0]
		CBNZ	R0, locret_800C63C
		BL	sub_800CD2A

locret_800C63C:				@ CODE XREF: sub_800C630+6j
		POP	{PC}
@ End of function sub_800C630

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800C640:	.long 0x200001A1	@ DATA XREF: sub_800C630r

@ =============== S U B	R O U T	I N E =======================================


sub_800C644:				@ CODE XREF: sub_800CA34+64p
					@ sub_800CB2C+34p ...
		PUSH	{R4,LR}
		LDR	R4, =0x200001A0
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		LSLS	R0, R0,	#0x18
		BNE	locret_800C670
		BL	sub_800CD36
		LDR	R0, =0x20001022
		LDRB	R0, [R0]
		CBZ	R0, loc_800C668
		MOVS	R0, #1
		STRB	R0, [R4]
		BL	sub_800CD08

loc_800C664:				@ CODE XREF: ROM:080097A0j
					@ ROM:080097ACj
		MOVS	R0, #0
		STRB	R0, [R4]

loc_800C668:				@ CODE XREF: sub_800C644+16j
		LDRB	R0, [R4,#1]
		CBNZ	R0, locret_800C670
		BL	sub_800CD2A

locret_800C670:				@ CODE XREF: sub_800C644+Cj
					@ sub_800C644+26j
		POP	{R4,PC}
@ End of function sub_800C644

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C674:				@ CODE XREF: sub_800C6F4+3Ap
					@ sub_800C734+92p ...
		PUSH.W	{R4,R5,R7,R8,LR}
		LDR	R1, [R0,#8]
		MOVS	R2, #0
		MOV	R8, R2
		CBZ	R1, loc_800C68E
		LDR	R2, [R1]
		LDR	R1, [R1,#4]
		CBZ	R2, loc_800C688
		STR	R1, [R2,#4]

loc_800C688:				@ CODE XREF: sub_800C674+10j
		STR	R2, [R1]
		STR.W	R8, [R0,#8]

loc_800C68E:				@ CODE XREF: sub_800C674+Aj
		LDRB	R1, [R0,#0x11]
		LDR	R4, =0x200001A0
		LSLS	R1, R1,	#0x1E
		LSRS	R1, R1,	#0x1E
		STRB	R1, [R0,#0x11]
		BNE	loc_800C6BE
		LDR	R1, =0x200001AC
		LDR	R2, [R1]
		CBNZ	R2, loc_800C6CA

loc_800C6A0:				@ CODE XREF: sub_800C674+5Cj
					@ sub_800C674+78j
		STR	R0, [R1]

loc_800C6A2:				@ CODE XREF: sub_800C674+60j
		LDRB	R0, [R4]
		CBNZ	R0, loc_800C6B4
		MOVS	R0, #1
		STRB	R0, [R4]
		BL	sub_800CD08
		MOVS	R0, #0
		STRB	R0, [R4]
		B	loc_800C6BE
@ ---------------------------------------------------------------------------

loc_800C6B4:				@ CODE XREF: sub_800C674+30j
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ORRS.W	R1, R1,	#2
		STRB	R1, [R0]

loc_800C6BE:				@ CODE XREF: sub_800C674+24j
					@ sub_800C674+3Ej ...
		LDRB	R0, [R4,#1]
		CBNZ	R0, locret_800C6C6
		BL	sub_800CD2A

locret_800C6C6:				@ CODE XREF: sub_800C674+4Cj
		POP.W	{R4,R5,R7,R8,PC}
@ ---------------------------------------------------------------------------

loc_800C6CA:				@ CODE XREF: sub_800C674+2Aj
		LDRB	R3, [R0,#0x10]
		LDRB	R5, [R2,#0x10]
		CMP	R5, R3
		BCC	loc_800C6A0
		CMP	R2, R0
		BEQ	loc_800C6A2
		CMP	R3, R5
		BNE	loc_800C6BE
		MOVS	R5, R0

loc_800C6DC:				@ CODE XREF: sub_800C674+76j
		LDR	R5, [R5]
		CMP	R5, #0
		BEQ	loc_800C6BE
		LDRB	R7, [R5,#0x10]
		CMP	R3, R7
		BNE	loc_800C6BE
		CMP	R5, R2
		BNE	loc_800C6DC
		B	loc_800C6A0
@ End of function sub_800C674

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800C6F0:	.long 0x200001A0	@ DATA XREF: sub_800C644+2r
					@ sub_800C674+1Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800C6F4:				@ CODE XREF: sub_800CA34+60p
		LDR	R1, =0x200001A4
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		LDRB	R0, [R4,#0x10]
		B	loc_800C700
@ ---------------------------------------------------------------------------

loc_800C6FE:				@ CODE XREF: sub_800C6F4+14j
		MOVS	R1, R2

loc_800C700:				@ CODE XREF: sub_800C6F4+8j
		LDR	R2, [R1]
		CBZ	R2, loc_800C70A
		LDRB	R5, [R2,#0x10]
		CMP	R0, R5
		BCC	loc_800C6FE

loc_800C70A:				@ CODE XREF: sub_800C6F4+Ej
		STR	R2, [R4]
		STR	R1, [R4,#0x14]
		STR	R4, [R1]
		CBZ	R2, loc_800C724
		STR	R4, [R2,#0x14]
		LDRB	R2, [R2,#0x10]
		MOVS	R1, R4
		ADDS	R1, #0x24
		CMP	R2, R0
		ITE ne
		MOVNE	R0, #0
		LDRBEQ	R0, [R1,#1]
		STRB	R0, [R1]

loc_800C724:				@ CODE XREF: sub_800C6F4+1Cj
		LDRB	R0, [R4,#0x11]
		CBNZ	R0, locret_800C732
		BL	sub_800CD36
		MOVS	R0, R4
		BL	sub_800C674

locret_800C732:				@ CODE XREF: sub_800C6F4+32j
		POP	{R4,R5,PC}
@ End of function sub_800C6F4


@ =============== S U B	R O U T	I N E =======================================


sub_800C734:				@ CODE XREF: sub_800C850+E4p
		PUSH	{R4-R7,LR}
		LDR	R4, =0x20000028
		LDR	R5, =0x2000019C
		LDR	R6, =0x200001B0
		LDR	R7, =0x200001B4
		BL	sub_800CD36
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ANDS.W	R1, R1,	#0xFE
		STRB	R1, [R0]
		LDR	R0, [R5]
		ADDS.W	R0, R0,	#0xFA0
		STR	R0, [R4]
		B	loc_800C772
@ ---------------------------------------------------------------------------

loc_800C756:				@ CODE XREF: sub_800C734+4Aj
		STR	R0, [R7]
		LDR	R1, [R0]
		STR	R1, [R6]
		MOVS	R1, #0
		STRB	R1, [R0,#0x10]
		LDR	R0, [R7]
		STR	R1, [R0,#8]
		BL	sub_800CD2A
		LDR	R0, [R7]
		LDR	R0, [R0,#4]
		BLX	R0
		BL	sub_800CD36

loc_800C772:				@ CODE XREF: sub_800C734+20j
		LDR	R0, [R6]
		CBZ	R0, loc_800C784
		LDR	R1, [R0,#8]
		LDR	R2, [R5]
		SUBS	R1, R1,	R2
		CMP	R1, #1
		BLT	loc_800C756
		LDR	R0, [R0,#8]
		STR	R0, [R4]

loc_800C784:				@ CODE XREF: sub_800C734+40j
		BL	sub_800CD2A
		LDR	R0, =0x200001A4
		LDR	R6, [R0]
		B	loc_800C79E
@ ---------------------------------------------------------------------------

loc_800C78E:				@ CODE XREF: sub_800C734+8Ej
					@ sub_800C734+9Ej
		LDR	R0, [R6,#0xC]
		LDR	R1, [R4]
		SUBS	R1, R0,	R1
		IT mi
		STRMI	R0, [R4]

loc_800C798:				@ CODE XREF: sub_800C734+84j
		BL	sub_800CD2A
		LDR	R6, [R6]

loc_800C79E:				@ CODE XREF: sub_800C734+58j
		CBZ	R6, locret_800C7D4
		BL	sub_800CD36
		LDR	R0, =0x200001AC
		LDR	R1, [R0]
		CBZ	R1, loc_800C7B4
		LDRB	R1, [R6,#0x10]
		LDR	R0, [R0]
		LDRB	R0, [R0,#0x10]
		CMP	R1, R0
		BCC	locret_800C7D4

loc_800C7B4:				@ CODE XREF: sub_800C734+74j
		LDRB	R0, [R6,#0x11]
		LSLS	R0, R0,	#0x1D
		BPL	loc_800C798
		LDR	R0, [R6,#0xC]
		LDR	R1, [R5]
		SUBS	R0, R0,	R1
		CMP	R0, #1
		BGE	loc_800C78E
		MOVS	R0, R6
		BL	sub_800C674
		BL	sub_800CD36
		LDRB	R0, [R6,#0x11]
		CMP	R0, #0
		BNE	loc_800C78E

locret_800C7D4:				@ CODE XREF: sub_800C734:loc_800C79Ej
					@ sub_800C734+7Ej
		POP	{R4-R7,PC}
@ End of function sub_800C734

@ ---------------------------------------------------------------------------
		.align 4
dword_800C7D8:	.long 0x200001B0	@ DATA XREF: sub_800C734+6r
dword_800C7DC:	.long 0x200001B4	@ DATA XREF: sub_800C734+8r
dword_800C7E0:	.long 0x200001A4	@ DATA XREF: sub_800C6F4r
					@ sub_800C734+54r

@ =============== S U B	R O U T	I N E =======================================


sub_800C7E4:				@ CODE XREF: sub_800C850+4Ap
		PUSH	{R4,R5,LR}
		BL	sub_800CD36
		LDR	R0, =0x200001A8
		LDR	R4, [R0]
		LDR	R0, =0x20001022
		LDRB	R1, [R0]
		ANDS.W	R1, R1,	#0xFB
		STRB	R1, [R0]
		BL	sub_800CD2A
		CBZ	R4, loc_800C842
		LDR	R5, [R4]
		CBZ	R5, loc_800C842
		LDRB	R0, [R4,#0x10]
		LDRB	R1, [R5,#0x10]
		CMP	R1, R0
		BNE	loc_800C842
		B	loc_800C80E
@ ---------------------------------------------------------------------------

loc_800C80C:				@ CODE XREF: sub_800C7E4+32j
		MOVS	R5, R1

loc_800C80E:				@ CODE XREF: sub_800C7E4+26j
		LDR	R1, [R5]
		CBZ	R1, loc_800C818
		LDRB	R2, [R1,#0x10]
		CMP	R2, R0
		BEQ	loc_800C80C

loc_800C818:				@ CODE XREF: sub_800C7E4+2Cj
		BL	sub_800CD36
		LDR	R0, =0x200001AC
		LDR	R1, [R0]
		CMP	R1, R4
		ITT eq
		LDREQ	R1, [R4]
		STREQ	R1, [R0]
		LDR	R0, [R4,#0x14]
		LDR	R1, [R4]
		STR	R1, [R0]
		STR	R0, [R1,#0x14]
		STR	R5, [R4,#0x14]
		LDR	R0, [R5]
		STR	R0, [R4]
		CBZ	R0, loc_800C83A
		STR	R4, [R0,#0x14]

loc_800C83A:				@ CODE XREF: sub_800C7E4+52j
		STR.W	R4, [R5],#0x24
		LDRB	R0, [R5,#1]
		STRB	R0, [R5]

loc_800C842:				@ CODE XREF: sub_800C7E4+18j
					@ sub_800C7E4+1Cj ...
		BL	sub_800CD2A
		POP	{R4,R5,PC}
@ End of function sub_800C7E4

@ ---------------------------------------------------------------------------
dword_800C848:	.long 0x20001022	@ DATA XREF: sub_800C644+12r
					@ sub_800C674:loc_800C6B4r ...
dword_800C84C:	.long 0x200001AC	@ DATA XREF: sub_800C674+26r
					@ sub_800C734+70r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800C850:				@ CODE XREF: ROM:0800CCB2p
		PUSH.W	{R4-R11,LR}
		MOVS	R0, #0
		MOVS	R1, #0
		MOV	R8, R0
		LDR	R0, =0x200001A1
		STRB	R1, [R0]
		LDR	R0, =0x200001A0
		MOVS	R1, #1
		STRB	R1, [R0]
		LDR	R0, =0x200001A8
		MOV	R9, R0
		LDR.W	R0, [R9]
		CBZ	R0, loc_800C87C
		LDR	R1, [R0,#0x28]
		CBZ	R1, loc_800C87C
		LDR	R1, [R1]
		MOVS	R2, R1
		ITT ne
		LDRNE	R0, [R0,#4]
		BLXNE	R1

loc_800C87C:				@ CODE XREF: sub_800C850+1Cj
					@ sub_800C850+20j
		LDR	R5, =0x20001025
		LDR	R0, =0x20001022
		LDR	R4, =0x20001024
		MOV	R10, R0
		LDRB	R0, [R5]
		CBZ	R0, loc_800C89E
		LDR.W	R0, [R9]
		LDRB	R1, [R4]
		STRB.W	R1, [R0,#0x24]!
		LDRB.W	R0, [R10]
		LSLS	R0, R0,	#0x1D
		IT mi
		BLMI	sub_800C7E4

loc_800C89E:				@ CODE XREF: sub_800C850+36j
		LDR	R0, =0x200001AC
		MOV	R11, R0
		LDR.W	R0, [R11]
		CBZ	R0, loc_800C8FE
		B	loc_800C8B4
@ ---------------------------------------------------------------------------

loc_800C8AA:				@ CODE XREF: sub_800C850+A0j
					@ sub_800C850+ACj
		LDR	R0, [R6]
		STR.W	R0, [R11]
		BL	sub_800CD2A

loc_800C8B4:				@ CODE XREF: sub_800C850+58j
		BL	sub_800CD36
		LDR.W	R6, [R11]
		CBZ	R6, loc_800C8FE
		LDRB	R7, [R6,#0x11]
		MOVS	R0, R7
		BEQ	loc_800C8FE
		LSLS	R0, R7,	#0x1D
		BPL	loc_800C8EA
		LDR	R1, =0x2000019C
		LDR	R0, [R6,#0xC]
		LDR	R1, [R1]
		SUBS	R1, R0,	R1
		CMP	R1, #1
		BGE	loc_800C8E0
		MOVS	R0, R6
		BL	sub_800C674
		LDRB	R0, [R6,#0x11]
		CBNZ	R0, loc_800C8EA
		B	loc_800C8FE
@ ---------------------------------------------------------------------------

loc_800C8E0:				@ CODE XREF: sub_800C850+82j
		LDR	R1, =0x20000028
		LDR	R2, [R1]
		SUBS	R2, R0,	R2
		IT mi
		STRMI	R0, [R1]

loc_800C8EA:				@ CODE XREF: sub_800C850+76j
					@ sub_800C850+8Cj
		ANDS.W	R0, R7,	#0xFB
		CMP	R0, #0x10
		BNE	loc_800C8AA
		LDR	R0, [R6,#8]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#4]
		LDRB	R0, [R0,#0x11]
		CMP	R0, #0
		BNE	loc_800C8AA

loc_800C8FE:				@ CODE XREF: sub_800C850+56j
					@ sub_800C850+6Cj ...
		BL	sub_800CD36
		LDRB.W	R0, [R10]
		LSLS	R0, R0,	#0x1F
		BMI	loc_800C930
		LDRB.W	R0, [R10]
		ANDS.W	R0, R0,	#0xFD
		STRB.W	R0, [R10]
		LDR.W	R0, [R11]
		CBZ	R0, loc_800C970
		LDR.W	R0, [R11]
		LDRB	R0, [R0,#0x11]
		CBZ	R0, loc_800C93A
		LDR.W	R0, [R11]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#8]
		LDR	R0, [R0,#4]
		B	loc_800C93E
@ ---------------------------------------------------------------------------

loc_800C930:				@ CODE XREF: sub_800C850+B8j
		BL	sub_800CD2A
		BL	sub_800C734
		B	loc_800C8FE
@ ---------------------------------------------------------------------------

loc_800C93A:				@ CODE XREF: sub_800C850+D2j
		LDR.W	R0, [R11]

loc_800C93E:				@ CODE XREF: sub_800C850+DEj
		STR.W	R0, [R9]
		LDR	R0, [R0,#0x20]
		LDRB	R0, [R0]
		CMP	R0, #0xCD
		ITT ne
		MOVNE	R0, #0x78
		BLNE	sub_800CC44
		LDR.W	R0, [R9]
		LDR	R1, [R0,#0x28]
		CBZ	R1, loc_800C962
		LDR	R1, [R1,#4]
		MOVS	R2, R1
		ITT ne
		LDRNE	R0, [R0,#4]
		BLXNE	R1

loc_800C962:				@ CODE XREF: sub_800C850+106j
		LDR.W	R0, [R9]
		ADDS	R0, #0x24
		LDRB	R0, [R0]
		STRB	R0, [R4]
		STRB	R0, [R5]
		B	locret_800C982
@ ---------------------------------------------------------------------------

loc_800C970:				@ CODE XREF: sub_800C850+CAj
		STRB	R0, [R5]
		STRB	R0, [R4]
		LDR	R0, =0x200001A0
		STR.W	R8, [R9]
		MOVS	R1, #0
		STRB	R1, [R0]
		BL	sub_800CD2A

locret_800C982:				@ CODE XREF: sub_800C850+11Ej
		POP.W	{R4-R11,PC}
@ End of function sub_800C850

@ ---------------------------------------------------------------------------
		.align 4
dword_800C988:	.long 0x20001025	@ DATA XREF: sub_800C850:loc_800C87Cr
dword_800C98C:	.long 0x20001024	@ DATA XREF: sub_800C850+30r
dword_800C990:	.long 0x200001A1	@ DATA XREF: sub_800C850+Ar
dword_800C994:	.long 0x200001AC	@ DATA XREF: sub_800C850:loc_800C89Er
dword_800C998:	.long 0x2000019C	@ DATA XREF: sub_800C734+4r
					@ sub_800C850+78r
dword_800C99C:	.long 0x20000028	@ DATA XREF: sub_800C734+2r
					@ sub_800C850:loc_800C8E0r

@ =============== S U B	R O U T	I N E =======================================


sub_800C9A0:				@ CODE XREF: sub_800C9F0+28p
					@ sub_800CAA8+2Ep ...
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		LDRB	R5, [R4]
		ADDS	R0, R5,	#1
		STRB	R0, [R4]
		BL	sub_800CD08
		LDRB	R0, [R4,#1]
		STRB	R5, [R4]
		CBNZ	R0, locret_800C9B8
		BL	sub_800CD2A

locret_800C9B8:				@ CODE XREF: sub_800C9A0+12j
		POP	{R4,R5,PC}
@ End of function sub_800C9A0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800C9BC:				@ CODE XREF: ROM:0800EAE2p
		PUSH	{R4,LR}
		BL	sub_800CD20
		LDR	R0, =0x200001A0
		MOVS	R1, #1
		STRB	R1, [R0]
		LDRB	R0, [R0,#1]
		CBNZ	R0, loc_800C9D0
		BL	sub_800CD2A

loc_800C9D0:				@ CODE XREF: sub_800C9BC+Ej
		BL	sub_800C624
		MOVS	R4, R0
		BL	sub_800C62C
		SUBS	R2, R0,	R4
		SUBS	R2, #0x20
		CMP	R2, #1
		ITTT ge
		MOVGE	R1, #0xCD
		MOVGE	R0, R4
		BLGE	sub_800EB68
		POP	{R4,PC}
@ End of function sub_800C9BC

@ ---------------------------------------------------------------------------
dword_800C9EC:	.long 0x20001022	@ DATA XREF: sub_800C850+2Er

@ =============== S U B	R O U T	I N E =======================================


sub_800C9F0:				@ CODE XREF: sub_800CA24+6j
		PUSH	{R4,LR}
		MOVS	R4, R0
		LDR	R0, =0x200001A0
		LDRB	R0, [R0]
		CBZ	R0, loc_800CA08
		BL	sub_800CD2A

loc_800C9FE:				@ CODE XREF: sub_800C9F0+16j
		LDR	R0, =0x2000019C
		LDR	R0, [R0]
		SUBS	R0, R0,	R4
		BPL	locret_800CA1C
		B	loc_800C9FE
@ ---------------------------------------------------------------------------

loc_800CA08:				@ CODE XREF: sub_800C9F0+8j
		BL	sub_800CD36
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		STR	R4, [R1,#0xC]
		LDR	R0, [R0]
		MOVS	R1, #4
		STRB	R1, [R0,#0x11]
		BL	sub_800C9A0

locret_800CA1C:				@ CODE XREF: sub_800C9F0+14j
		POP	{R4,PC}
@ End of function sub_800C9F0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800CA20:	.long 0x200001A0	@ DATA XREF: sub_800C850+Er
					@ sub_800C850+124r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800CA24:				@ CODE XREF: sub_800A6B8+AAp
					@ sub_800A79C+2Cp ...
		LDR	R1, =0x2000019C
		LDR	R1, [R1]
		ADDS	R0, R0,	R1
		B	sub_800C9F0
@ End of function sub_800CA24

@ ---------------------------------------------------------------------------
dword_800CA2C:	.long 0x2000019C	@ DATA XREF: sub_800C9F0:loc_800C9FEr
					@ sub_800CA24r
dword_800CA30:	.long 0x200001A8	@ DATA XREF: sub_800C7E4+6r
					@ sub_800C850+14r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800CA34:				@ CODE XREF: ROM:0800EAFAp
		PUSH.W	{R4-R10,LR}
		LDR	R6, [SP,#0x20]
		LDR	R7, [SP,#0x24]
		MOVS	R4, R0
		MOV	R8, R1
		MOV	R9, R2
		MOV	R10, R3
		MOVS	R2, #0x2C
		MOVS	R1, #0
		BL	sub_800EB68
		ADDS	R5, R4,	#4
		STRB.W	R9, [R5,#0xC]
		LDR	R0, [SP,#0x28]
		STRB.W	R0, [R4,#0x25]
		MOV	R0, R8
		CBZ	R0, loc_800CA60
		STR.W	R8, [R5,#0x14]

loc_800CA60:				@ CODE XREF: sub_800CA34+26j
		STR	R6, [R5,#0x1C]
		STR	R7, [R5,#0x18]
		MOVS	R2, R7
		MOVS	R1, #0xCD
		MOVS	R0, R6
		BL	sub_800EB68
		ADDS	R0, R6,	R7
		SUBS	R0, #0x48
		MOVS	R1, #7
		BICS	R0, R1
		MOVS	R1, #0
		STR	R1, [R0]
		MOVS.W	R1, #0x1000000
		STR	R1, [R0,#0x40]
		LDR	R1, =(loc_80070F4+1)
		STR	R1, [R0,#0x3C]
		STR.W	R10, [R0,#0x44]
		STR	R0, [R5]
		LDR	R0, =0x200001A0
		LDRB	R1, [R0]
		ADDS	R1, R1,	#1
		STRB	R1, [R0]
		MOVS	R0, R4
		BL	sub_800C6F4
		BL	sub_800C644
		POP.W	{R4-R10,PC}
@ End of function sub_800CA34

@ ---------------------------------------------------------------------------
off_800CAA0:	.long loc_80070F4+1	@ DATA XREF: sub_800CA34+4Cr
dword_800CAA4:	.long 0x200001A0	@ DATA XREF: sub_800CA34+56r

@ =============== S U B	R O U T	I N E =======================================


sub_800CAA8:				@ CODE XREF: sub_800CBC8+14p
		PUSH	{R0-R6,LR}
		LDR	R6, =0x200001A8
		MOVS	R4, R0
		STR	R4, [SP,#8]
		LDR	R0, [R6]
		MOVS	R5, R1
		STR	R4, [SP,#4]
		STR	R0, [SP,#0xC]
		BL	sub_800CD36
		LDR	R0, [R4]
		STR	R0, [SP,#0]
		MOV	R0, SP
		STR	R0, [R4]
		LDR	R0, [SP,#0]
		CBZ	R0, loc_800CACC
		MOV	R1, SP
		STR	R1, [R0,#4]

loc_800CACC:				@ CODE XREF: sub_800CAA8+1Ej
		LDR	R0, [R6]
		MOV	R1, SP
		STR	R1, [R0,#8]
		LDR	R0, [R6]
		STRB	R5, [R0,#0x11]
		BL	sub_800C9A0
		POP	{R0-R6,PC}
@ End of function sub_800CAA8

@ ---------------------------------------------------------------------------
dword_800CADC:	.long 0x200001A8	@ DATA XREF: sub_800CAA8+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800CAE0:				@ CODE XREF: sub_800CBF4+1Cp
		PUSH	{R0-R7,LR}
		LDR	R7, =0x200001A8
		MOVS	R4, R0
		STR	R4, [SP,#8]
		LDR	R0, [R7]
		MOVS	R5, R1
		MOVS	R6, R2
		STR	R4, [SP,#4]
		STR	R0, [SP,#0xC]
		BL	sub_800CD36
		LDR	R0, [R4]
		STR	R0, [SP,#0]
		MOV	R0, SP
		STR	R0, [R4]
		LDR	R0, [SP,#0]
		CBZ	R0, loc_800CB06
		MOV	R1, SP
		STR	R1, [R0,#4]

loc_800CB06:				@ CODE XREF: sub_800CAE0+20j
		LDR	R0, [R7]
		MOV	R1, SP
		STR	R6, [R0,#0xC]
		LDR	R0, [R7]
		STR	R1, [R0,#8]
		LDR	R0, [R7]
		ORRS.W	R1, R5,	#4
		STRB	R1, [R0,#0x11]
		BL	sub_800C9A0
		POP	{R0-R7,PC}
@ End of function sub_800CAE0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800CB20:	.long 0x200001A8	@ DATA XREF: sub_800CAE0+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800CB24:				@ CODE XREF: sub_800C294+4p
					@ sub_800E15C+Ap
		MOVS	R2, #8
		MOVS	R1, #0
		B.W	sub_800EB68
@ End of function sub_800CB24


@ =============== S U B	R O U T	I N E =======================================


sub_800CB2C:				@ CODE XREF: sub_800E19C+6j
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		MOVS	R5, R0
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_800CD36
		LDRB	R0, [R4,#1]
		ADDS	R0, R0,	#1
		STRB	R0, [R4,#1]
		MOVS	R0, R5
		BL	sub_800CB84
		MOVS	R0, R5
		BL	sub_800CB68
		LDRB	R0, [R4,#1]
		SUBS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LSLS	R0, R0,	#0x18
		IT eq
		BLEQ	sub_800CD2A
		POP.W	{R4,R5,LR}
		B.W	sub_800C644
@ End of function sub_800CB2C

@ ---------------------------------------------------------------------------
dword_800CB64:	.long 0x200001A0	@ DATA XREF: sub_800CB2C+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800CB68:				@ CODE XREF: sub_800CB2C+1Ep
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800CD36
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800CB7E
		BL	sub_800CD2A

locret_800CB7E:				@ CODE XREF: sub_800CB68+10j
		POP	{R4,PC}
@ End of function sub_800CB68

@ ---------------------------------------------------------------------------
dword_800CB80:	.long 0x200001A1	@ DATA XREF: sub_800CB68+Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800CB84:				@ CODE XREF: sub_800C2AC+2j
					@ sub_800CB2C+18p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		MOVS	R5, R0
		BL	sub_800CD36
		LDRB	R0, [R4,#1]
		ADDS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LDR	R0, [R5]
		CBZ	R0, loc_800CBAE
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		MOVS	R0, #0
		STRB	R0, [R5,#4]
		MOVS	R0, R5
		BL	sub_800CC6C
		BL	sub_800C644
		B	loc_800CBB2
@ ---------------------------------------------------------------------------

loc_800CBAE:				@ CODE XREF: sub_800CB84+12j
		MOVS	R0, #1
		STRB	R0, [R5,#4]

loc_800CBB2:				@ CODE XREF: sub_800CB84+28j
		LDRB	R0, [R4,#1]
		SUBS	R0, R0,	#1
		STRB	R0, [R4,#1]
		LSLS	R0, R0,	#0x18
		IT eq
		BLEQ	sub_800CD2A
		POP	{R4,R5,PC}
@ End of function sub_800CB84

@ ---------------------------------------------------------------------------
		.align 4
dword_800CBC4:	.long 0x200001A0	@ DATA XREF: sub_800CB84+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800CBC8:				@ CODE XREF: sub_800C174+1Ep
					@ sub_800E1A8+6j
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800CD36
		LDRB	R0, [R4,#4]
		CBNZ	R0, loc_800CBE0
		MOVS	R1, #0x48
		MOVS	R0, R4
		POP.W	{R4,LR}
		B.W	sub_800CAA8
@ ---------------------------------------------------------------------------

loc_800CBE0:				@ CODE XREF: sub_800CBC8+Aj
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800CBEE
		BL	sub_800CD2A

locret_800CBEE:				@ CODE XREF: sub_800CBC8+20j
		POP	{R4,PC}
@ End of function sub_800CBC8

@ ---------------------------------------------------------------------------
dword_800CBF0:	.long 0x200001A1	@ DATA XREF: sub_800CBC8+1Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800CBF4:				@ CODE XREF: sub_800C174+Ep
					@ sub_800E1B4+8j
		PUSH	{R4-R7,LR}
		LDR	R5, =0x2000019C
		LDR	R7, =0x200001A0
		MOVS	R4, R0
		MOVS	R6, R1
		BL	sub_800CD36
		LDR	R0, [R5]
		ADDS	R6, R0,	R6
		LDRB	R0, [R4,#4]
		CBNZ	R0, loc_800CC2C
		MOVS	R2, R6
		MOVS	R1, #0x48
		MOVS	R0, R4
		BL	sub_800CAE0
		BL	sub_800CD36
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		CMP	R0, #1
		BGE	loc_800CC2C
		LDRB	R0, [R7,#1]
		CBNZ	R0, loc_800CC28
		BL	sub_800CD2A

loc_800CC28:				@ CODE XREF: sub_800CBF4+2Ej
		MOVS	R0, #1
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800CC2C:				@ CODE XREF: sub_800CBF4+14j
					@ sub_800CBF4+2Aj
		MOVS	R0, #0
		STRB	R0, [R4,#4]
		LDRB	R0, [R7,#1]
		CBNZ	R0, loc_800CC38
		BL	sub_800CD2A

loc_800CC38:				@ CODE XREF: sub_800CBF4+3Ej
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ End of function sub_800CBF4

@ ---------------------------------------------------------------------------
dword_800CC3C:	.long 0x2000019C	@ DATA XREF: sub_800CBF4+2r
dword_800CC40:	.long 0x200001A0	@ DATA XREF: sub_800CBF4+4r

@ =============== S U B	R O U T	I N E =======================================


sub_800CC44:				@ CODE XREF: sub_800C850+FCp
		PUSH	{R4,LR}
		MOVS	R4, R0
		LDR	R0, =0x200001A0
		LDRB	R1, [R0]
		ADDS	R1, R1,	#1
		STRB	R1, [R0]
		MOVS	R1, #0
		STRB	R1, [R0,#1]
		BL	sub_800CD2A
		LDR	R0, =0x20001023
		STRB	R4, [R0]

loc_800CC5C:				@ CODE XREF: sub_800CC44+1Cj
		LDRB	R1, [R0]
		CMP	R1, #0
		BNE	loc_800CC5C
		POP	{R4,PC}
@ End of function sub_800CC44

@ ---------------------------------------------------------------------------
dword_800CC64:	.long 0x200001A0	@ DATA XREF: sub_800CC44+4r
dword_800CC68:	.long 0x20001023	@ DATA XREF: sub_800CC44+14r

@ =============== S U B	R O U T	I N E =======================================


sub_800CC6C:				@ CODE XREF: sub_800CB84+20p
		PUSH	{R4,LR}
		MOVS	R4, R0
		B	loc_800CC78
@ ---------------------------------------------------------------------------

loc_800CC72:				@ CODE XREF: sub_800CC6C+14j
		LDR	R0, [R0,#0xC]
		BL	sub_800C674

loc_800CC78:				@ CODE XREF: sub_800CC6C+4j
		BL	sub_800CD36
		LDR	R0, [R4]
		CMP	R0, #0
		BNE	loc_800CC72
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800CC8C
		BL	sub_800CD2A

locret_800CC8C:				@ CODE XREF: sub_800CC6C+1Aj
		POP	{R4,PC}
@ End of function sub_800CC6C

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800CC90:	.long 0x200001A1	@ DATA XREF: sub_800CC6C+16r
@ ---------------------------------------------------------------------------
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		CBZ	R1, loc_800CCB0
		MRS.W	R0, PSP
		SUB.W	R0, R0,	#0x24
		LDR	R1, =0x200001A0
		LDR	R3, [R1]
		STMIA.W	R0, {R3-R11}
		LDR	R1, =0x200001A8
		LDR	R2, [R1]
		STR	R0, [R2,#4]

loc_800CCB0:				@ CODE XREF: ROM:0800CC98j
		PUSH	{LR}
		BL	sub_800C850
		LDR.W	LR, [SP],#4
		LDR	R0, =0x200001A8
		LDR	R1, [R0]
		CBZ	R1, loc_800CCDE
		LDR	R0, [R1,#4]
		LDMIA.W	R0, {R3-R11}
		LDR	R1, =0x200001A0
		STR	R3, [R1]
		ADD.W	R0, R0,	#0x24
		MSR.W	PSP, R0
		ORR.W	LR, LR,	#4
		TST.W	R3, #0xFF00
		BEQ	sub_800CD2A
		BX	LR
@ ---------------------------------------------------------------------------

loc_800CCDE:				@ CODE XREF: ROM:0800CCBEj
		LDR	R0, =0x200013E8
		MOV.W	R1, #0x1000000
		STR	R1, [R0,#0x1C]
		LDR	R1, =(loc_8007200+1)
		STR	R1, [R0,#0x18]
		MSR.W	PSP, R0
		ORR.W	LR, LR,	#4
		BX	LR
@ ---------------------------------------------------------------------------
		BL	sub_800CD2A
		MOV	R0, R4
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_800CCFC:				@ CODE XREF: ROM:0800EAFEj
		BL	sub_800CD2A
		BL	sub_800CD18

loc_800CD04:				@ CODE XREF: ROM:loc_800CD04j
		B	loc_800CD04

@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800CD06:				@ CODE XREF: ROM:0800CDA2p
					@ ROM:0800D4B4p
		B	sub_800CD18
@ End of function sub_800CD06


@ =============== S U B	R O U T	I N E =======================================


sub_800CD08:				@ CODE XREF: sub_800C644+1Cp
					@ sub_800C674+36p ...
		PUSH	{LR}
		BL	sub_800CD18
		BL	sub_800CD2A
		LDR.W	LR, [SP+0],#4
		B	sub_800CD36
@ End of function sub_800CD08


@ =============== S U B	R O U T	I N E =======================================


sub_800CD18:				@ CODE XREF: ROM:0800CD00p
					@ sub_800CD06j	...
		LDR	R0, =0xE000ED04
		LDR	R1, =0x10000000
		STR	R1, [R0]
		BX	LR
@ End of function sub_800CD18


@ =============== S U B	R O U T	I N E =======================================


sub_800CD20:				@ CODE XREF: sub_800C9BC+2p
		LDR	R0, =0xE000ED20
		LDR	R1, =0xFFFF0000
		STR	R1, [R0]
		BX	LR
@ End of function sub_800CD20

@ ---------------------------------------------------------------------------
		NOP

@ =============== S U B	R O U T	I N E =======================================


sub_800CD2A:				@ CODE XREF: sub_800C630+8p
					@ sub_800C644+28p ...
		MOV.W	R0, #0
		MSR.W	BASEPRI, R0
		BX	LR
@ End of function sub_800CD2A

@ ---------------------------------------------------------------------------
		NOP

@ =============== S U B	R O U T	I N E =======================================


sub_800CD36:				@ CODE XREF: sub_800AD00+1Ap
					@ sub_800B47C:loc_800B47Ep ...
		MOV.W	R0, #0x80
		MSR.W	BASEPRI, R0
		BX	LR
@ End of function sub_800CD36

@ ---------------------------------------------------------------------------
		.byte	 0
		.byte 0xBF
		.ds.b 2, 0
dword_800CD44:	.long 0x200001A8	@ DATA XREF: ROM:0800CC94r
					@ ROM:0800CCAAr ...
dword_800CD48:	.long 0x200001A0	@ DATA XREF: ROM:0800CCA2r
					@ ROM:0800CCC6r
dword_800CD4C:	.long 0x200013E8	@ DATA XREF: ROM:loc_800CCDEr
off_800CD50:	.long loc_8007200+1	@ DATA XREF: ROM:0800CCE6r
dword_800CD54:	.long 0xE000ED04	@ DATA XREF: sub_800CD18r
dword_800CD58:	.long 0x10000000	@ DATA XREF: sub_800CD18+2r
dword_800CD5C:	.long 0xE000ED20	@ DATA XREF: sub_800CD20r
dword_800CD60:	.long 0xFFFF0000	@ DATA XREF: sub_800CD20+2r
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		LDR	R4, =0x200001A0
		LDR	R5, =0x20001022
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_800CD2A
		BL	sub_800BCB8
		BL	sub_800B448
		LDR	R0, =0x2000019C
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		LDR	R0, =0x20000028
		LDR	R0, [R0]
		SUBS	R0, R1,	R0
		BMI	loc_800CD94
		LDRB	R0, [R5]
		ORRS.W	R0, R0,	#1
		STRB	R0, [R5]

loc_800CD94:				@ CODE XREF: ROM:0800CD8Aj
		BL	sub_800CD36
		LDRB	R0, [R4]
		CMP	R0, #1
		BNE	loc_800CDA6
		LDRB	R0, [R5]
		CBZ	R0, loc_800CDA6
		BL	sub_800CD06

loc_800CDA6:				@ CODE XREF: ROM:0800CD9Cj
					@ ROM:0800CDA0j
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		POP.W	{R4,R5,LR}
		B.W	sub_800CD2A
@ ---------------------------------------------------------------------------
dword_800CDB4:	.long 0x200001A0	@ DATA XREF: ROM:0800CD66r
dword_800CDB8:	.long 0x20001022	@ DATA XREF: ROM:0800CD68r
dword_800CDBC:	.long 0x20000028	@ DATA XREF: ROM:0800CD84r

@ =============== S U B	R O U T	I N E =======================================


sub_800CDC0:				@ CODE XREF: ROM:0800EAE6p
		PUSH	{LR}
		BL	sub_800CD36
		LDR	R0, =0xE000E014
		LDR	R1, =0x1193F
		STR	R1, [R0]
		LDR	R0, =0xE000E010
		MOVS	R1, #5
		STR	R1, [R0]
		LDR	R1, =(sub_8007164+1)
		MOVS	R0, #0xF
		BL	sub_800CE0C
		MOVS	R1, #0xFF
		MOVS	R0, #0xF
		BL	sub_800CE7C
		MOVS	R0, #0xF
		BL	sub_800CE10
		BL	nullsub_17
		LDR.W	LR, [SP+0],#4
		B.W	sub_800C630
@ End of function sub_800CDC0

@ ---------------------------------------------------------------------------
dword_800CDF4:	.long 0xE000E014	@ DATA XREF: sub_800CDC0+6r
dword_800CDF8:	.long 0x1193F		@ DATA XREF: sub_800CDC0+8r
off_800CDFC:	.long sub_8007164+1	@ DATA XREF: sub_800CDC0+12r
@ ---------------------------------------------------------------------------

loc_800CE00:				@ CODE XREF: ROM:loc_800CE00j
		B	loc_800CE00
@ ---------------------------------------------------------------------------
		.align 4
dword_800CE04:	.long 0x2000019C	@ DATA XREF: ROM:0800CD7Cr
@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_17. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800CE0C:				@ CODE XREF: sub_800CDC0+16p
		MOVS	R0, #0
		BX	LR
@ End of function sub_800CE0C


@ =============== S U B	R O U T	I N E =======================================


sub_800CE10:				@ CODE XREF: sub_800BF84-9Cp
					@ sub_800CDC0+24p ...
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800CD36
		CMP	R4, #0x3B
		BGE	loc_800CE68
		CMP	R4, #0x10
		BLT	loc_800CE34
		LDR	R1, =0xE000E100
		SUBS	R4, #0x10
		ASRS	R0, R4,	#5
		MOVS	R2, #1
		LSLS	R3, R4,	#0x1B
		LSRS	R3, R3,	#0x1B
		LSLS	R2, R3
		STR.W	R2, [R1,R0,LSL#2]
		B	loc_800CE68
@ ---------------------------------------------------------------------------

loc_800CE34:				@ CODE XREF: sub_800CE10+Ej
		LDR	R0, =0xE000ED24
		CMP	R4, #4
		BNE	loc_800CE42
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x10000
		B	loc_800CE66
@ ---------------------------------------------------------------------------

loc_800CE42:				@ CODE XREF: sub_800CE10+28j
		CMP	R4, #5
		BNE	loc_800CE4E
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x20000
		B	loc_800CE66
@ ---------------------------------------------------------------------------

loc_800CE4E:				@ CODE XREF: sub_800CE10+34j
		CMP	R4, #6
		BNE	loc_800CE5A
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#0x40000
		B	loc_800CE66
@ ---------------------------------------------------------------------------

loc_800CE5A:				@ CODE XREF: sub_800CE10+40j
		CMP	R4, #0xF
		BNE	loc_800CE68
		LDR	R0, =0xE000E010
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#2

loc_800CE66:				@ CODE XREF: sub_800CE10+30j
					@ sub_800CE10+3Cj ...
		STR	R1, [R0]

loc_800CE68:				@ CODE XREF: sub_800CE10+Aj
					@ sub_800CE10+22j ...
		POP.W	{R4,LR}
		B.W	sub_800C630
@ End of function sub_800CE10

@ ---------------------------------------------------------------------------
dword_800CE70:	.long 0xE000E100	@ DATA XREF: sub_800CE10+10r
dword_800CE74:	.long 0xE000ED24	@ DATA XREF: sub_800CE10:loc_800CE34r
dword_800CE78:	.long 0xE000E010	@ DATA XREF: sub_800CDC0+Cr
					@ sub_800CE10+4Er

@ =============== S U B	R O U T	I N E =======================================


sub_800CE7C:				@ CODE XREF: sub_800BF84-A2p
					@ sub_800CDC0+1Ep ...
		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, #0
		CMP	R4, #0x3B
		BGE	loc_800CECE
		CMP	R4, #0x10
		BLT	loc_800CE96
		BL	sub_800CD36
		LDR	R0, =0xE000E3F0
		ADDS	R0, R4,	R0
		B	loc_800CEC6
@ ---------------------------------------------------------------------------

loc_800CE96:				@ CODE XREF: sub_800CE7C+Ej
		MOVS	R0, #1
		CMP	R4, #4
		BGE	loc_800CEA6
		MOVS	R2, #1

loc_800CE9E:				@ CODE XREF: sub_800CE7C+2Ej
					@ sub_800CE7C+32j
		MOVS	R3, #0
		CMP	R4, #0xD
		BNE	loc_800CEB2
		B	loc_800CEB4
@ ---------------------------------------------------------------------------

loc_800CEA6:				@ CODE XREF: sub_800CE7C+1Ej
		MOVS	R2, #0
		CMP	R4, #7
		BLT	loc_800CE9E
		CMP	R4, #0xB
		BGE	loc_800CE9E
		MOVS	R3, #1

loc_800CEB2:				@ CODE XREF: sub_800CE7C+26j
		MOVS	R0, #0

loc_800CEB4:				@ CODE XREF: sub_800CE7C+28j
		ORRS	R3, R2
		ORRS	R0, R3
		LSLS	R0, R0,	#0x18
		BNE	loc_800CECE
		BL	sub_800CD36
		LDR	R0, =0xE000ED18
		SUBS	R4, R4,	#4
		ADDS	R0, R0,	R4

loc_800CEC6:				@ CODE XREF: sub_800CE7C+18j
		LDRB	R6, [R0]
		STRB	R5, [R0]
		BL	sub_800C630

loc_800CECE:				@ CODE XREF: sub_800CE7C+Aj
					@ sub_800CE7C+3Ej
		MOVS	R0, R6
		POP	{R4-R6,PC}
@ End of function sub_800CE7C

@ ---------------------------------------------------------------------------
		.align 4
dword_800CED4:	.long 0xE000E3F0	@ DATA XREF: sub_800CE7C+14r
dword_800CED8:	.long 0xE000ED18	@ DATA XREF: sub_800CE7C+44r
@ ---------------------------------------------------------------------------
		LDR	R1, =0x4002100C
		PUSH	{R4,R5,LR}
		LDR	R4, =0xF8FF0000
		MOVS	R0, #0
		STR.W	R0, [R1],#4
		MOVS	R2, #0x14
		STR.W	R0, [R1],#4
		MOVS	R5, #0xFF80FFFF
		STR.W	R2, [R1],#4
		STR.W	R0, [R1],#4
		STR.W	R0, [R1],#-0x1C
		LDR	R2, [R1]
		ORRS.W	R2, R2,	#1
		STR	R2, [R1]
		LDR	R2, =0x40021004
		LDR	R3, [R2]
		ANDS	R4, R3
		STR	R4, [R2]
		LDR	R3, [R1]
		LDR	R4, =0xFEF6FFFF
		ANDS	R4, R3
		STR	R4, [R1]
		LDR	R4, [R1]
		MOVS	R3, #0xFFFBFFFF
		ANDS	R4, R3
		STR	R4, [R1]
		LDR	R4, [R2]
		ANDS	R5, R4
		LDR	R4, =0x40021008
		STR	R5, [R2]
		MOVS	R5, #0xFFFEFFFF
		STR	R0, [R4]
		LDR	R4, [R1]
		ANDS	R5, R4
		STR	R5, [R1]
		LDR	R4, [R1]
		ANDS	R3, R4
		STR	R3, [R1]
		LDR	R3, [R1]
		ORRS.W	R3, R3,	#0x10000
		STR	R3, [R1]

loc_800CF42:				@ CODE XREF: ROM:0800CF46j
		LDR	R3, [R1]
		LSLS	R3, R3,	#0xE
		BMI	loc_800CF42
		LDR	R3, =0x40022000
		MOVS	R5, #0x10
		LDR	R4, [R3]
		ANDS.W	R4, R4,	#0x38
		STR	R4, [R3]
		LDR	R4, [R3]
		ORRS.W	R4, R4,	#2
		STR	R4, [R3]
		LDR	R4, [R3]
		BICS	R4, R5
		STR	R4, [R3]
		LDR	R4, [R3]
		ORRS.W	R4, R4,	#0x10
		STR	R4, [R3]
		LDR	R3, [R2]
		MOVS	R4, #0xF0
		BICS	R3, R4
		STR	R3, [R2]
		LDR	R3, [R2]
		MOVS	R4, #0xFFFFC7FF
		STR	R3, [R2]
		LDR	R3, [R2]
		ANDS	R4, R3
		STR	R4, [R2]
		STR	R0, [R2]
		LDR	R0, [R2]
		MOVS	R3, #0xFFFFF8FF
		ANDS	R3, R0
		STR	R3, [R2]
		LSRS	R0, R1,	#0x14
		STR	R0, [R2]
		LDR	R0, [R2]
		MOVS	R3, #0xFFC0FFFF
		ANDS	R3, R0
		ORRS.W	R0, R3,	#0x1D0000
		STR	R0, [R2]
		LDR	R0, =0x42420060
		MOVS	R3, #1
		STR	R3, [R0]

loc_800CFA4:				@ CODE XREF: ROM:0800CFA8j
		LDR	R0, [R1]
		LSLS	R0, R0,	#6
		BMI	loc_800CFA4
		LDR	R0, [R2]
		MOVS	R1, #3
		BICS	R0, R1
		ORRS.W	R0, R0,	#2
		STR	R0, [R2]

loc_800CFB6:				@ CODE XREF: ROM:0800CFBEj
		LDR	R0, [R2]
		ANDS.W	R0, R0,	#0xC
		CMP	R0, #8
		BNE	loc_800CFB6
		MOVS	R0, #1
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
dword_800CFC4:	.long 0x4002100C	@ DATA XREF: ROM:0800CEDCr
dword_800CFC8:	.long 0xF8FF0000	@ DATA XREF: ROM:0800CEE0r
dword_800CFCC:	.long 0x40021004	@ DATA XREF: ROM:0800CF06r
dword_800CFD0:	.long 0xFEF6FFFF	@ DATA XREF: ROM:0800CF10r
dword_800CFD4:	.long 0x40021008	@ DATA XREF: ROM:0800CF24r
dword_800CFD8:	.long 0x40022000	@ DATA XREF: ROM:0800CF48r
dword_800CFDC:	.long 0x42420060	@ DATA XREF: ROM:0800CF9Er

@ =============== S U B	R O U T	I N E =======================================


sub_800CFE0:				@ CODE XREF: sub_800CFEC+Cp
		LDR	R0, =0x20001026
		LDRB	R1, [R0]
		EORS.W	R1, R1,	#1
		STRB	R1, [R0]
		BX	LR
@ End of function sub_800CFE0


@ =============== S U B	R O U T	I N E =======================================


sub_800CFEC:				@ CODE XREF: ROM:0800D006j
					@ sub_800D008+8j
		LDR	R1, =0x20001026
		PUSH	{R4,LR}
		LDRB	R1, [R1]
		MOVS	R4, R1
		CMP	R1, R0
		IT ne
		BLNE	sub_800CFE0
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_800CFEC

@ ---------------------------------------------------------------------------
dword_800D000:	.long 0x20001026	@ DATA XREF: sub_800CFE0r sub_800CFECr
@ ---------------------------------------------------------------------------
		MOVS	R0, #0
		B	sub_800CFEC

@ =============== S U B	R O U T	I N E =======================================


sub_800D008:				@ CODE XREF: ROM:0800EADEp
		LDR	R0, =0xE000ED08
		LDR	R1, =dword_8004000
		STR	R1, [R0]
		MOVS	R0, #1
		B	sub_800CFEC
@ End of function sub_800D008

@ ---------------------------------------------------------------------------
		.align 4
dword_800D014:	.long 0xE000ED08	@ DATA XREF: sub_800D008r
off_800D018:	.long dword_8004000	@ DATA XREF: sub_800D008+2r
@ ---------------------------------------------------------------------------
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D0D8:				@ CODE XREF: sub_800D270+46p
		PUSH	{R4,LR}
		LDR	R4, =0x2000002C
		LDR	R0, [R4]
		CBZ	R0, loc_800D0F0
		LDR	R1, [R4,#0xC]
		LDR	R2, [R4,#0x10]
		CMP	R1, R2
		BEQ	loc_800D120
		BL	sub_800C0CC
		MOVS	R0, #0
		STR	R0, [R4]

loc_800D0F0:				@ CODE XREF: sub_800D0D8+6j
		LDR	R0, [R4,#0x10]
		CBNZ	R0, loc_800D10C
		BL	sub_800C06C
		LDR	R1, =0xFFFFFE00
		ADDS	R0, R0,	R1
		ANDS	R1, R0
		CMP.W	R1, #0x200
		BGE	loc_800D10A
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800D10A:				@ CODE XREF: sub_800D0D8+2Aj
		STR	R1, [R4,#0x10]

loc_800D10C:				@ CODE XREF: sub_800D0D8+1Aj
		LDR	R0, [R4,#0x10]
		BL	sub_800C088
		STR	R0, [R4]
		LDR	R0, [R4,#0x10]
		LDR	R1, [R4]
		STR	R0, [R4,#0xC]
		ADDS	R0, R1,	R0
		STR	R0, [R4,#4]
		CBZ	R1, loc_800D134

loc_800D120:				@ CODE XREF: sub_800D0D8+Ej
		BL	sub_800BFA0
		LDR	R3, [R4,#0x10]
		LDR	R2, [R4]
		LDR	R1, [R4,#0x18]
		LDR	R0, [R4,#0x14]
		BL	sub_800BF84
		LDR	R0, [R4]
		STR	R0, [R4,#8]

loc_800D134:				@ CODE XREF: sub_800D0D8+46j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800D0D8

@ ---------------------------------------------------------------------------
dword_800D138:	.long 0xFFFFFE00	@ DATA XREF: sub_800D0D8+20r

@ =============== S U B	R O U T	I N E =======================================


sub_800D13C:				@ CODE XREF: sub_800D2FC+26p
					@ sub_800D3A8j
		PUSH	{R4,LR}
		LDR	R4, =0x2000002C
		LDR	R0, [R4]
		CBZ	R0, loc_800D152
		BL	sub_800BFA0
		LDR	R0, [R4]
		BL	sub_800C0CC
		MOVS	R0, #0
		STR	R0, [R4]

loc_800D152:				@ CODE XREF: sub_800D13C+6j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800D13C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D158:				@ CODE XREF: sub_800D190+64p
					@ sub_800D190+6Ep
		PUSH	{R4-R6,LR}
		MOVS	R4, R0
		BEQ	locret_800D18A
		LDR	R5, =0x2000002C
		MOVS	R1, R4
		LDR	R0, [R5,#8]
		BL	sub_800C210

loc_800D168:				@ CODE XREF: sub_800D158+16j
					@ sub_800D158+30j
		BL	sub_800C28C
		SUBS	R6, R4,	R0
		BEQ	loc_800D168
		LDR	R0, [R5,#8]
		LDR	R1, [R5,#4]
		ADDS	R0, R0,	R6
		STR	R0, [R5,#8]
		CMP	R0, R1
		ITT cs
		LDRCS	R0, [R5]
		STRCS	R0, [R5,#8]
		LDR	R0, [R5,#8]
		BL	sub_800BFA8
		SUBS	R4, R4,	R6
		BNE	loc_800D168

locret_800D18A:				@ CODE XREF: sub_800D158+4j
		POP	{R4-R6,PC}
@ End of function sub_800D158

@ ---------------------------------------------------------------------------
dword_800D18C:	.long 0x2000002C	@ DATA XREF: sub_800D158+6r

@ =============== S U B	R O U T	I N E =======================================


sub_800D190:				@ CODE XREF: sub_800D32C+22p
		PUSH	{R4-R7,LR}
		LDR	R5, =0x2000002C
		SUB	SP, SP,	#0x14
		MOVS	R4, R0
		LDR	R0, [R5]
		MOVS	R6, #0
		CBNZ	R0, loc_800D1AC
		STR	R6, [SP,#8]
		STR	R6, [SP,#0xC]
		MOVS	R1, #8
		ADD	R0, SP,	#8
		BL	sub_800C1C4
		B	loc_800D206
@ ---------------------------------------------------------------------------

loc_800D1AC:				@ CODE XREF: sub_800D190+Cj
		ADD	R1, SP,	#0x10
		ADD	R0, SP,	#4
		BL	sub_800BFA4
		LDR	R1, [R5,#8]
		LDR	R0, [SP,#4]
		SUBS	R7, R0,	R1
		BNE	loc_800D1C6
		LDR	R0, [SP,#0x10]
		CBNZ	R0, loc_800D1CC
		LDR	R7, [R5,#0xC]
		MOVS	R6, #1
		B	loc_800D1CC
@ ---------------------------------------------------------------------------

loc_800D1C6:				@ CODE XREF: sub_800D190+2Aj
		ITT mi
		LDRMI	R0, [R5,#0xC]
		ADDMI	R7, R7,	R0

loc_800D1CC:				@ CODE XREF: sub_800D190+2Ej
					@ sub_800D190+34j
		CMP	R7, R4
		IT cc
		MOVCC	R4, R7
		STR	R6, [SP,#8]
		STR	R4, [SP,#0xC]
		MOVS	R1, #8
		ADD	R0, SP,	#8
		BL	sub_800C1C4
		CBZ	R4, loc_800D1FA
		LDR	R0, [R5,#8]
		LDR	R1, [SP,#4]
		CMP	R0, R1
		BCC	loc_800D1FC
		LDR	R1, [R5,#4]
		SUBS	R7, R1,	R0
		CMP	R7, R4
		IT cs
		MOVCS	R7, R4
		MOVS	R0, R7
		BL	sub_800D158
		SUBS	R4, R4,	R7

loc_800D1FA:				@ CODE XREF: sub_800D190+4Ej
		CBZ	R4, loc_800D202

loc_800D1FC:				@ CODE XREF: sub_800D190+56j
		MOVS	R0, R4
		BL	sub_800D158

loc_800D202:				@ CODE XREF: sub_800D190:loc_800D1FAj
		BL	sub_800C244

loc_800D206:				@ CODE XREF: sub_800D190+1Aj
		ADD	SP, SP,	#0x14
		POP	{R4-R7,PC}
@ End of function sub_800D190

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D20C:				@ CODE XREF: sub_800D370:loc_800D3A2p
		PUSH	{R0,R1,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		B	loc_800D21E
@ ---------------------------------------------------------------------------

loc_800D214:				@ CODE XREF: sub_800D20C+3Ej
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_800C580

loc_800D21E:				@ CODE XREF: sub_800D20C+6j
					@ sub_800D20C+48j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_800D23A
		LDR	R0, [SP,#4]
		CBZ	R0, loc_800D256
		MOVS.W	R0, #0xFFFFFFFF
		BL	sub_800C22C
		POP	{R0,R1,PC}
@ ---------------------------------------------------------------------------

loc_800D23A:				@ CODE XREF: sub_800D20C+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C580
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_800D214
		LDRB.W	R0, [SP,#0]
		BL	sub_800C25C
		B	loc_800D21E
@ ---------------------------------------------------------------------------

loc_800D256:				@ CODE XREF: sub_800D20C+22j
		MOVS	R0, #0x1C
		BL	sub_800C23C
		LDR	R0, [SP,#4]
		BL	sub_800C23C
		LDR	R0, [SP,#4]
		BL	sub_800BFAC
		MOVS	R1, #0x14
		BL	sub_800C1C4
		POP	{R0,R1,PC}
@ End of function sub_800D20C


@ =============== S U B	R O U T	I N E =======================================


sub_800D270:				@ CODE XREF: sub_800D370:loc_800D396p
		PUSH	{R0,R4,LR}
		B	loc_800D280
@ ---------------------------------------------------------------------------

loc_800D274:				@ CODE XREF: sub_800D270+60j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x14

loc_800D27A:				@ CODE XREF: sub_800D270+72j
					@ sub_800D270+7Aj
		MOVS	R0, R4
		BL	sub_800C580

loc_800D280:				@ CODE XREF: sub_800D270+2j
					@ sub_800D270+84j
		MOVS	R1, #1
		LDR	R4, =0x2000002C
		MOV	R0, SP
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_800D2C0
		LDR	R0, [R4,#0x14]
		BL	sub_800BFAC
		LDR	R1, [R0]
		LDR	R2, [R0,#4]
		UDIV.W	R1, R1,	R2
		LDR	R2, [R4,#0x18]
		CMP	R1, R2
		IT cc
		STRCC	R1, [R4,#0x18]
		LDR	R1, [R0]
		LDR	R0, [R0,#8]
		UDIV.W	R0, R1,	R0
		LDR	R1, [R4,#0x18]
		CMP	R1, R0
		IT cc
		STRCC	R0, [R4,#0x18]
		BL	sub_800D0D8
		BL	sub_800C22C
		POP	{R0,R4,PC}
@ ---------------------------------------------------------------------------

loc_800D2C0:				@ CODE XREF: sub_800D270+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C580
		LDRB.W	R0, [SP,#1]
		CMP	R0, #1
		BEQ	loc_800D274
		CMP	R0, #2
		BEQ	loc_800D2DC
		CMP	R0, #4
		BEQ	loc_800D2E4
		B	loc_800D2EC
@ ---------------------------------------------------------------------------

loc_800D2DC:				@ CODE XREF: sub_800D270+64j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x18
		B	loc_800D27A
@ ---------------------------------------------------------------------------

loc_800D2E4:				@ CODE XREF: sub_800D270+68j
		LDRB.W	R1, [SP,#0]
		ADDS	R4, #0x10
		B	loc_800D27A
@ ---------------------------------------------------------------------------

loc_800D2EC:				@ CODE XREF: sub_800D270+6Aj
		LDRB.W	R0, [SP,#0]
		BL	sub_800C25C
		B	loc_800D280
@ End of function sub_800D270

@ ---------------------------------------------------------------------------
		.align 4
dword_800D2F8:	.long 0x2000002C	@ DATA XREF: sub_800D0D8+2r
					@ sub_800D13C+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800D2FC:				@ CODE XREF: sub_800D370:loc_800D39Cp
		PUSH	{R0,LR}
		B	loc_800D312
@ ---------------------------------------------------------------------------

loc_800D300:				@ CODE XREF: sub_800D2FC+24j
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		BL	sub_800C25C

loc_800D312:				@ CODE XREF: sub_800D2FC+2j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0
		BNE	loc_800D300
		BL	sub_800D13C
		BL	sub_800C22C
		POP	{R0,PC}
@ End of function sub_800D2FC


@ =============== S U B	R O U T	I N E =======================================


sub_800D32C:				@ CODE XREF: sub_800D370+12p
		PUSH	{R0,R1,LR}
		MOVS	R0, #0
		STR	R0, [SP,#4]
		B	loc_800D33E
@ ---------------------------------------------------------------------------

loc_800D334:				@ CODE XREF: sub_800D32C+38j
		LDRB.W	R1, [SP,#0]
		ADD	R0, SP,	#4
		BL	sub_800C580

loc_800D33E:				@ CODE XREF: sub_800D32C+6j
					@ sub_800D32C+42j
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		CBNZ	R0, loc_800D354
		LDR	R0, [SP,#4]
		BL	sub_800D190
		POP	{R0,R1,PC}
@ ---------------------------------------------------------------------------

loc_800D354:				@ CODE XREF: sub_800D32C+1Ej
		MOVS	R1, #1
		ADD	R0, SP,	#0
		ADDS	R0, R0,	#1
		BL	sub_800C580
		LDRB.W	R0, [SP,#1]
		CMP	R0, #3
		BEQ	loc_800D334
		LDRB.W	R0, [SP,#0]
		BL	sub_800C25C
		B	loc_800D33E
@ End of function sub_800D32C


@ =============== S U B	R O U T	I N E =======================================


sub_800D370:				@ CODE XREF: sub_800B48C+12p
		PUSH	{R0,LR}
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800C580
		LDRB.W	R0, [SP,#0]
		CMP	R0, #0x66
		BNE	loc_800D388
		BL	sub_800D32C
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800D388:				@ CODE XREF: sub_800D370+10j
		CMP	R0, #0x64
		BEQ	loc_800D396
		CMP	R0, #0x65
		BEQ	loc_800D39C
		CMP	R0, #0x6E
		BEQ	loc_800D3A2
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800D396:				@ CODE XREF: sub_800D370+1Aj
		BL	sub_800D270
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800D39C:				@ CODE XREF: sub_800D370+1Ej
		BL	sub_800D2FC
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800D3A2:				@ CODE XREF: sub_800D370+22j
		BL	sub_800D20C
		POP	{R0,PC}
@ End of function sub_800D370


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800D3A8:				@ CODE XREF: sub_800B67C+12p
		B	sub_800D13C
@ End of function sub_800D3A8

@ ---------------------------------------------------------------------------
		.align 4

loc_800D3AC:				@ CODE XREF: ROM:0800D3EAj
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDR	R0, [R0,#0xC]
		BX	LR
@ ---------------------------------------------------------------------------
dword_800D3B8:	.long 0x20000310	@ DATA XREF: ROM:loc_800D3ACr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800C5B8

loc_800D3BC:				@ CODE XREF: sub_800C5B8:loc_800C5C4j
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	sub_800DD78
@ END OF FUNCTION CHUNK	FOR sub_800C5B8

@ =============== S U B	R O U T	I N E =======================================


sub_800D3C8:				@ CODE XREF: sub_800C544+1Ap
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001027
		MOVS	R3, #0
		LDRB	R0, [R0]
		B.W	sub_800DD98
@ End of function sub_800D3C8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D3D8:				@ CODE XREF: sub_800C5D4j

@ FUNCTION CHUNK AT 0800E0C4 SIZE 0000000C BYTES

		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	loc_800E0C4
@ End of function sub_800D3D8

@ ---------------------------------------------------------------------------

loc_800D3E0:				@ CODE XREF: ROM:0800C5D0j
		LDR	R0, =0x20001027
		B	loc_800D3E8
@ ---------------------------------------------------------------------------

loc_800D3E4:				@ CODE XREF: ROM:0800C5CCj
		LDR	R0, =0x20001028
		NOP

loc_800D3E8:				@ CODE XREF: ROM:0800D3E2j
		LDRB	R0, [R0]
		B	loc_800D3AC

@ =============== S U B	R O U T	I N E =======================================


sub_800D3EC:				@ CODE XREF: sub_800C4D8+38p
		LDR	R0, =0x20001027
		MOVS	R3, #1
		LDRB	R0, [R0]
		MOVS	R2, #0
		MOVS	R1, #1
		B.W	sub_800DE20
@ End of function sub_800D3EC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D3FC:				@ CODE XREF: ROM:0800C482p
					@ ROM:0800C4A4p ...
		PUSH	{LR}
		PUSH	{R3}
		MOVS	R3, R2
		NOP
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001027
		LDRB	R0, [R0]
		BL	sub_800DE64
		POP	{R1,PC}
@ End of function sub_800D3FC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D414:				@ CODE XREF: sub_800C580+18p
		MOVS	R3, R2
		MOVS	R2, R1
		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	sub_800DD54
@ End of function sub_800D414

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D424:				@ CODE XREF: sub_800C304+2Cp
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800E108
		LDR	R2, =0x20000450
		MOVS	R1, #0x14
		MLA.W	R0, R0,	R1, R2
		MOVS	R1, #0xFF
		ADDS	R0, #8
		STRB	R1, [R0,#2]
		STRB	R1, [R0,#3]
		STRB	R1, [R0,#4]
		LDRB	R2, [R4]
		LDRB	R3, [R4,#1]
		MOVS	R1, #1
		LSLS	R1, R2
		MOVS	R2, #1
		LSLS	R2, R3
		ORRS	R2, R1
		STRH	R2, [R0]
		LDR	R0, =0x20001027
		LDRB	R1, [R4]
		STRB	R1, [R0]
		LDRB	R1, [R4,#1]
		STRB	R1, [R0,#1]
		POP	{R4,PC}
@ End of function sub_800D424

@ ---------------------------------------------------------------------------
		.align 4
dword_800D45C:	.long 0x20000450	@ DATA XREF: sub_800D424+8r
dword_800D460:	.long 0x20001027	@ DATA XREF: sub_800D3C8+4r
					@ ROM:loc_800D3E0r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800D464:				@ CODE XREF: sub_800C3D8+14p

@ FUNCTION CHUNK AT 0800E14C SIZE 0000000C BYTES

		MOVS	R1, R0
		LDR	R0, =0x20001028
		LDRB	R0, [R0]
		B.W	loc_800E14C
@ End of function sub_800D464

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800D470:	.long 0x20001028	@ DATA XREF: sub_800C5B8+E08r
					@ sub_800D3D8r	...
@ ---------------------------------------------------------------------------

loc_800D474:				@ CODE XREF: ROM:0800D8CCj
		LDR	R0, =0x40010810
		LSRS	R1, R0,	#0x15
		STR	R1, [R0]
		BX	LR
@ ---------------------------------------------------------------------------
dword_800D47C:	.long 0x40010810	@ DATA XREF: ROM:loc_800D474r

@ =============== S U B	R O U T	I N E =======================================


sub_800D480:				@ CODE XREF: sub_800DC3C+20p

@ FUNCTION CHUNK AT 0800E000 SIZE 00000006 BYTES

		LDR	R0, =off_80092C8
		B.W	loc_800E000
@ End of function sub_800D480

@ ---------------------------------------------------------------------------
		.align 4
off_800D488:	.long off_80092C8	@ DATA XREF: sub_800D480r
@ ---------------------------------------------------------------------------
		PUSH	{R4,LR}
		LDR	R4, =0x200001A0
		LDRB	R0, [R4]
		ADDS	R0, R0,	#1
		STRB	R0, [R4]
		BL	sub_800CD2A
		LDR	R0, =0x200001B8
		LDR	R0, [R0]
		MOVS	R1, R0
		IT ne
		BLXNE	R0
		BL	sub_800CD36
		LDRB	R0, [R4]
		CMP	R0, #1
		BNE	loc_800D4B8
		LDR	R0, =0x20001022
		LDRB	R0, [R0]
		CBZ	R0, loc_800D4B8
		BL	sub_800CD06

loc_800D4B8:				@ CODE XREF: ROM:0800D4ACj
					@ ROM:0800D4B2j
		LDRB	R0, [R4]
		SUBS	R0, R0,	#1
		STRB	R0, [R4]
		POP.W	{R4,LR}
		B.W	sub_800CD2A
@ ---------------------------------------------------------------------------
		.align 4
dword_800D4C8:	.long 0x200001A0	@ DATA XREF: ROM:0800D48Er
dword_800D4CC:	.long 0x20001022	@ DATA XREF: ROM:0800D4AEr

@ =============== S U B	R O U T	I N E =======================================


sub_800D4D0:				@ CODE XREF: ROM:0800D8AAp
		LDR	R1, =0x200001B8
		PUSH	{LR}
		STR	R0, [R1]
		MOVS	R1, #0xF0
		MOVS	R0, #0x23
		BL	sub_800CE7C
		MOVS	R1, #0xF0
		MOVS	R0, #0x24
		BL	sub_800CE7C
		MOVS	R0, #0x23
		BL	sub_800CE10
		MOVS	R0, #0x24
		LDR.W	LR, [SP+0],#4
		B.W	sub_800CE10
@ End of function sub_800D4D0

@ ---------------------------------------------------------------------------
		.align 4
dword_800D4F8:	.long 0x200001B8	@ DATA XREF: ROM:0800D49Ar
					@ sub_800D4D0r

@ =============== S U B	R O U T	I N E =======================================


sub_800D4FC:				@ CODE XREF: sub_800D620+10p
		LDR	R0, =0x200002BC
		MOVS	R1, #0x40
		STR	R1, [R0]
		MOVS	R0, #0
		MOVS	R1, #0

loc_800D506:				@ CODE XREF: sub_800D4FC+1Aj
		LDR	R2, =0x200001BC
		STR.W	R0, [R2,R1,LSL#2]
		LDR	R2, =0x2000023C
		STR.W	R0, [R2,R1,LSL#2]
		ADDS	R1, R1,	#1
		CMP	R1, #0x20
		BCC	loc_800D506
		BX	LR
@ End of function sub_800D4FC

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D51C:				@ CODE XREF: sub_800D620+16p
					@ sub_800D620+30p ...
		LDR	R2, =0x200002BC
		MOVS	R1, R0
		LDR	R0, [R2]
		LDR	R3, [R2]
		ADDS	R1, R3,	R1
		STR	R1, [R2]
		BX	LR
@ End of function sub_800D51C

@ ---------------------------------------------------------------------------
		.align 4
dword_800D52C:	.long 0x200002BC	@ DATA XREF: sub_800D4FCr sub_800D51Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800D530:				@ CODE XREF: sub_800D620+20p
					@ sub_800D620+3Ap ...
		LDR	R3, =0x40006000
		PUSH	{R4,R5,LR}
		LDR	R5, =0x40005C50
		LSLS	R4, R0,	#3
		CMP	R2, #0
		LDR	R5, [R5]
		BEQ	loc_800D546
		ADDS	R4, R5,	R4
		ADDS.W	R4, R3,	R4,LSL#1
		B	loc_800D54E
@ ---------------------------------------------------------------------------

loc_800D546:				@ CODE XREF: sub_800D530+Cj
		ADDS	R4, R5,	R4
		LDR	R5, =0x40006008
		ADDS.W	R4, R5,	R4,LSL#1

loc_800D54E:				@ CODE XREF: sub_800D530+14j
		LSLS	R1, R1,	#1
		LSRS	R1, R1,	#1
		STRH	R1, [R4]
		LDR	R1, =0x200001BC
		ADDS.W	R0, R2,	R0,LSL#1
		LDRH	R2, [R4]
		ADDS.W	R2, R3,	R2,LSL#1
		STR.W	R2, [R1,R0,LSL#2]
		POP	{R4,R5,PC}
@ End of function sub_800D530

@ ---------------------------------------------------------------------------
		.align 4
dword_800D568:	.long 0x40006000	@ DATA XREF: sub_800D530r
dword_800D56C:	.long 0x40006008	@ DATA XREF: sub_800D530+18r

@ =============== S U B	R O U T	I N E =======================================


sub_800D570:				@ CODE XREF: sub_800D620+2Ap
					@ sub_800D620+44p ...
		PUSH	{R4,R5,LR}
		LDR	R4, =0x40005C50
		LSLS	R3, R0,	#3
		CMP	R2, #0
		LDR	R4, [R4]
		BEQ	loc_800D586
		ADDS	R3, R4,	R3
		LDR	R4, =0x40006004
		ADDS.W	R3, R4,	R3,LSL#1
		B	loc_800D5B6
@ ---------------------------------------------------------------------------

loc_800D586:				@ CODE XREF: sub_800D570+Aj
		MOVS	R5, #0
		ADDS	R3, R4,	R3
		LDR	R4, =0x4000600C
		ADDS.W	R3, R4,	R3,LSL#1
		CMP	R1, #0x3F
		BCS	loc_800D5A2
		LSRS	R4, R1,	#1
		UXTH	R4, R4
		LSLS	R1, R1,	#0x1F
		BPL	loc_800D5B0
		ADDS	R4, R4,	#1
		UXTH	R4, R4
		B	loc_800D5B0
@ ---------------------------------------------------------------------------

loc_800D5A2:				@ CODE XREF: sub_800D570+22j
		LSRS	R4, R1,	#5
		UXTH	R4, R4
		MOVS	R5, #1
		LSLS	R1, R4,	#0x1B
		ITT ne
		ADDNE	R4, R4,	#1
		UXTHNE	R4, R4

loc_800D5B0:				@ CODE XREF: sub_800D570+2Aj
					@ sub_800D570+30j
		LSLS	R1, R4,	#0xA
		ORRS.W	R1, R1,	R5,LSL#15

loc_800D5B6:				@ CODE XREF: sub_800D570+14j
		STR	R1, [R3]
		LDR	R1, =0x2000023C
		ADDS.W	R0, R2,	R0,LSL#1
		STR.W	R3, [R1,R0,LSL#2]
		POP	{R4,R5,PC}
@ End of function sub_800D570

@ ---------------------------------------------------------------------------
dword_800D5C4:	.long 0x40006004	@ DATA XREF: sub_800D570+Er
dword_800D5C8:	.long 0x4000600C	@ DATA XREF: sub_800D570+1Ar
dword_800D5CC:	.long 0x40005C50	@ DATA XREF: sub_800D530+4r
					@ sub_800D570+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800D5D0:				@ CODE XREF: sub_800D69C+32p
					@ sub_800D6F0+48p ...
		LDR	R2, =0x40005C00
		ANDS.W	R1, R1,	#0x3000
		ADDS.W	R0, R2,	R0,LSL#2
		LDR	R2, [R0]
		EORS	R1, R2
		LDR	R2, =0xBF8F
		B	loc_800D5F8
@ ---------------------------------------------------------------------------
		.align 4
dword_800D5E4:	.long 0xBF8F		@ DATA XREF: sub_800D5D0+Er
@ ---------------------------------------------------------------------------

loc_800D5E8:				@ CODE XREF: ROM:0800D814p
					@ ROM:0800D82Ap ...
		LDR	R2, =0x40005C00
		ANDS.W	R1, R1,	#0x30
		ADDS.W	R0, R2,	R0,LSL#2
		LDR	R2, [R0]
		EORS	R1, R2
		LDR	R2, =0x8FBF

loc_800D5F8:				@ CODE XREF: sub_800D5D0+10j
		ANDS	R2, R1
		STR	R2, [R0]
		BX	LR
@ End of function sub_800D5D0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800D600:	.long 0x8FBF		@ DATA XREF: sub_800D5D0+26r

@ =============== S U B	R O U T	I N E =======================================


sub_800D604:				@ CODE XREF: sub_800D69C+22p
					@ sub_800D69C+42p ...
		CMP	R2, #2
		BCC	loc_800D616

loc_800D608:				@ CODE XREF: sub_800D604+10j
		LDR.W	R3, [R1],#4
		SUBS	R2, R2,	#2
		CMP	R2, #2
		STRH.W	R3, [R0],#2
		BCS	loc_800D608

loc_800D616:				@ CODE XREF: sub_800D604+2j
		CBZ	R2, locret_800D61C
		LDR	R1, [R1]
		STRB	R1, [R0]

locret_800D61C:				@ CODE XREF: sub_800D604:loc_800D616j
		BX	LR
@ End of function sub_800D604

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800D620:				@ CODE XREF: ROM:0800D764p
					@ ROM:0800D8AEp
		LDR	R0, =0x40005C40
		PUSH	{LR}
		MOVS.W	R1, #0x9E00
		STR.W	R1, [R0],#0x10
		MOVS	R1, #0
		STR	R1, [R0]
		BL	sub_800D4FC
		MOVS	R0, #8
		BL	sub_800D51C
		MOVS	R2, #0
		MOVS	R1, R0
		MOVS	R0, #0
		BL	sub_800D530
		MOVS	R2, #0
		MOVS	R1, #8
		MOV	R0, R2
		BL	sub_800D570
		MOVS	R0, #8
		BL	sub_800D51C
		MOVS	R2, #1
		MOVS	R1, R0
		MOVS	R0, #0
		BL	sub_800D530
		MOVS	R2, #1
		MOVS	R1, #8
		MOVS	R0, #0
		BL	sub_800D570
		LDR	R0, =0x40005C00
		LDR	R1, =0x3230
		STR.W	R1, [R0],#0x4C
		MOVS	R1, #0x80
		STR	R1, [R0]
		LDR.W	LR, [SP+0],#4
		B.W	sub_800E040
@ End of function sub_800D620

@ ---------------------------------------------------------------------------
dword_800D67C:	.long 0x3230		@ DATA XREF: sub_800D620+4Ar

@ =============== S U B	R O U T	I N E =======================================


sub_800D680:				@ CODE XREF: ROM:0800D78Ep
		PUSH	{LR}
		BL	sub_800E080
		LDR	R0, =0x40005C40
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#8
		STR	R1, [R0]
		LDR	R1, [R0]
		ORRS.W	R1, R1,	#4
		STR	R1, [R0]
		POP	{PC}
@ End of function sub_800D680

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D69C:				@ CODE XREF: ROM:loc_800D7A4p
		PUSH	{R0-R4,LR}
		LDR	R0, =0x40005C00
		LDR	R2, =0xF8F
		LDR	R1, [R0]
		ANDS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x2000023C
		LDR	R0, [R0]
		LDR	R0, [R0]
		LSLS	R4, R0,	#0x16
		LSRS	R4, R4,	#0x16
		LSLS	R0, R1,	#0x14
		BPL	loc_800D6D4
		LDR	R0, =0x200001BC
		MOVS	R2, R4
		LDR	R1, [R0]
		MOV	R0, SP
		BL	sub_800D604
		MOV	R0, SP
		BL	sub_800E9A4
		MOVS.W	R1, #0x3000
		MOVS	R0, #0
		BL	sub_800D5D0
		POP	{R0-R4,PC}
@ ---------------------------------------------------------------------------

loc_800D6D4:				@ CODE XREF: sub_800D69C+18j
		CBZ	R4, locret_800D6EC
		LDR	R0, =0x200001BC
		MOVS	R2, R4
		LDR	R1, [R0]
		ADD	R0, SP,	#8
		BL	sub_800D604
		MOVS	R2, R4
		ADD	R1, SP,	#8
		MOVS	R0, #0
		BL	sub_800DEAC

locret_800D6EC:				@ CODE XREF: sub_800D69C:loc_800D6D4j
		POP	{R0-R4,PC}
@ End of function sub_800D69C

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800D6F0:				@ CODE XREF: ROM:0800D7D6p
		LDR	R2, =0xF8F
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R0, =0x40005C00
		MOVS	R5, R4
		ADDS.W	R0, R0,	R5,LSL#2
		LDR	R1, [R0]
		ANDS	R2, R1
		STR	R2, [R0]
		LDR	R0, =0x2000023C
		LDR.W	R0, [R0,R5,LSL#3]
		LDR	R0, [R0]
		LSLS	R6, R0,	#0x16
		LSRS	R6, R6,	#0x16
		BEQ	locret_800D73C
		LDR	R0, =0x200001BC
		LDR	R7, =0x200002D0
		MOVS	R2, R6
		LDR.W	R1, [R0,R5,LSL#3]
		MOVS	R0, R7
		BL	sub_800D604
		MOVS	R2, R6
		MOVS	R1, R7
		MOVS	R0, R4
		BL	sub_800DEAC
		LDR	R0, =0x200002C0
		LDRB	R0, [R0,R5]
		CBZ	R0, locret_800D73C
		MOVS.W	R1, #0x3000
		MOVS	R0, R4
		BL	sub_800D5D0

locret_800D73C:				@ CODE XREF: sub_800D6F0+20j
					@ sub_800D6F0+40j
		POP	{R4-R7,PC}
@ End of function sub_800D6F0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800D740:	.long 0x200002D0	@ DATA XREF: sub_800D6F0+24r
dword_800D744:	.long 0xF8F		@ DATA XREF: sub_800D69C+4r
					@ sub_800D6F0r
dword_800D748:	.long 0x2000023C	@ DATA XREF: sub_800D4FC+10r
					@ sub_800D570+48r ...
dword_800D74C:	.long 0x200001BC	@ DATA XREF: sub_800D4FC:loc_800D506r
					@ sub_800D530+24r ...
@ ---------------------------------------------------------------------------
		PUSH	{R4,LR}
		LDR	R4, =0x40005C44
		LDR	R0, [R4]
		ANDS.W	R0, R0,	#0x9E00
		LSLS	R1, R0,	#0x15
		BPL	loc_800D76A
		MOVS	R0, #0xFFFFFBFF
		STR	R0, [R4]
		BL	sub_800D620
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800D76A:				@ CODE XREF: ROM:0800D75Cj
		LSLS	R1, R0,	#0x13
		BPL	loc_800D784
		MOVS	R0, #0xFFFFEFFF
		STR	R0, [R4]
		LDR	R0, =0x40005C40
		MOVS	R2, #8
		LDR	R1, [R0]
		BICS	R1, R2
		STR	R1, [R0]
		BL	sub_800E08C
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800D784:				@ CODE XREF: ROM:0800D76Cj
		LSLS	R1, R0,	#0x14
		BPL	loc_800D794
		MOVS	R0, #0xFFFFF7FF
		STR	R0, [R4]
		BL	sub_800D680
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800D794:				@ CODE XREF: ROM:0800D786j
		LSLS	R1, R0,	#0x10
		BMI	loc_800D7A8
		LSLS	R0, R0,	#0x16
		BPL	loc_800D7E4
		MOVS	R0, #0xFFFFFDFF
		STR	R0, [R4]
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800D7A4:				@ CODE XREF: ROM:0800D7C4j
		BL	sub_800D69C

loc_800D7A8:				@ CODE XREF: ROM:0800D796j
					@ ROM:0800D7D2j ...
		LDR	R0, [R4]
		LSLS	R0, R0,	#0x10
		BPL	locret_800D7EA
		LDR	R0, [R4]
		LDR	R1, [R4]
		MOVS	R2, #1
		LSLS	R0, R0,	#0x1C
		LSRS	R0, R0,	#0x1C
		LSRS	R1, R1,	#4
		ANDS	R2, R1
		LDR	R1, =0x8F0F
		MOVS	R3, R0
		BNE	loc_800D7D4
		CMP	R2, #0
		BNE	loc_800D7A4
		LDR	R2, =0x40005C00

loc_800D7C8:				@ CODE XREF: ROM:0800D7E2j
		LDR	R3, [R2]
		ANDS	R1, R3
		STR	R1, [R2]
		BL	sub_800DF90
		B	loc_800D7A8
@ ---------------------------------------------------------------------------

loc_800D7D4:				@ CODE XREF: ROM:0800D7C0j
		CBZ	R2, loc_800D7DC
		BL	sub_800D6F0
		B	loc_800D7A8
@ ---------------------------------------------------------------------------

loc_800D7DC:				@ CODE XREF: ROM:loc_800D7D4j
		LDR	R3, =0x40005C00
		ADDS.W	R2, R3,	R0,LSL#2
		B	loc_800D7C8
@ ---------------------------------------------------------------------------

loc_800D7E4:				@ CODE XREF: ROM:0800D79Aj
		MOVS	R0, #0xFFFF61FF
		STR	R0, [R4]

locret_800D7EA:				@ CODE XREF: ROM:0800D7ACj
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
dword_800D7EC:	.long 0x8F0F		@ DATA XREF: ROM:0800D7BCr
dword_800D7F0:	.long 0x40005C00	@ DATA XREF: sub_800D5D0r
					@ sub_800D5D0:loc_800D5E8r ...
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		CBZ	R4, locret_800D82E
		BL	sub_800DC00
		MOVS	R1, #0x80
		ANDS	R1, R0
		BEQ	loc_800D816
		CBZ	R5, loc_800D80C
		MOVS	R1, #0x10
		B	loc_800D80E
@ ---------------------------------------------------------------------------

loc_800D80C:				@ CODE XREF: ROM:0800D806j
		MOVS	R1, #0x20

loc_800D80E:				@ CODE XREF: ROM:0800D80Aj
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	loc_800D5E8
@ ---------------------------------------------------------------------------

loc_800D816:				@ CODE XREF: ROM:0800D804j
		CBZ	R5, loc_800D824
		MOVS.W	R1, #0x1000
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_800D5D0
@ ---------------------------------------------------------------------------

loc_800D824:				@ CODE XREF: ROM:loc_800D816j
		MOVS.W	R1, #0x2000
		MOVS	R0, R4
		BL	loc_800D5E8

locret_800D82E:				@ CODE XREF: ROM:0800D7FAj
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
		LDR	R1, =0x1010
		MOVS	R0, #0
		B	loc_800D5E8
@ ---------------------------------------------------------------------------
		.align 4
dword_800D838:	.long 0x1010		@ DATA XREF: ROM:0800D830r
@ ---------------------------------------------------------------------------
		LDR	R1, =0x40005C4C
		ORRS.W	R0, R0,	#0x80
		STR	R0, [R1]
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
dword_800D848:	.long 0x40005C4C	@ DATA XREF: ROM:0800D83Cr
@ ---------------------------------------------------------------------------
		LDR	R1, =0x200002C0
		MOVS	R2, #0
		STRB	R2, [R1,R0]
		BX	LR
@ ---------------------------------------------------------------------------
		PUSH	{R4,LR}
		MOVS.W	R1, #0x3000
		MOVS	R4, R0
		BL	sub_800D5D0
		LDR	R0, =0x200002C0
		MOVS	R1, #1
		STRB	R1, [R0,R4]
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
dword_800D868:	.long 0x200002C0	@ DATA XREF: sub_800D6F0+3Cr
					@ ROM:0800D84Cr ...
@ ---------------------------------------------------------------------------
		PUSH	{LR}
		BL	sub_800E188
		LDR	R0, =0x40021004
		MOVS	R2, #0xFFBFFFFF
		LDR	R1, [R0]
		ANDS	R2, R1
		STR.W	R2, [R0],#0xC
		LDR	R1, [R0]
		MOVS	R2, #0xFF7FFFFF
		ANDS	R2, R1
		STR.W	R2, [R0],#0xC
		LDR	R1, [R0]
		MOVS	R2, #0
		ORRS.W	R1, R1,	#0x800000
		STR	R1, [R0]
		LDR	R0, =0x40005C40
		MOVS	R1, #3
		STR	R1, [R0]
		MOVS	R1, #1
		STR	R1, [R0]
		LDR	R1, =0x40005C44
		STR	R2, [R1]
		LSRS	R1, R0,	#0x14
		STR	R1, [R0]
		LDR	R0, =(sub_8007B50+1)
		BL	sub_800D4D0
		BL	sub_800D620
		LDR.W	LR, [SP],#4
		B.W	sub_800E174
@ ---------------------------------------------------------------------------
		.align 4
dword_800D8BC:	.long 0x40021004	@ DATA XREF: ROM:0800D872r
off_800D8C0:	.long sub_8007B50+1	@ DATA XREF: ROM:0800D8A8r
dword_800D8C4:	.long 0x40005C40	@ DATA XREF: sub_800D620r
					@ sub_800D680+6r ...
dword_800D8C8:	.long 0x40005C44	@ DATA XREF: ROM:0800D752r
					@ ROM:0800D8A0r
@ ---------------------------------------------------------------------------
		B.W	loc_800D474
@ ---------------------------------------------------------------------------
		LDR	R1, =0x20001029
		LDRB	R0, [R1]
		ADDS	R0, R0,	#1
		STRB	R0, [R1]
		UXTB	R0, R0
		BX	LR
@ ---------------------------------------------------------------------------
dword_800D8DC:	.long 0x20001029	@ DATA XREF: ROM:0800D8D0r
@ ---------------------------------------------------------------------------
		PUSH	{R4-R6,LR}
		LDRB	R1, [R0,#5]
		LDRH	R5, [R0]
		LSLS	R4, R1,	#0x19
		LSRS	R4, R4,	#0x19
		LSLS	R1, R1,	#0x18
		ITE pl
		MOVPL	R6, #0
		MOVMI	R6, #1
		LDRB	R0, [R0,#4]
		MOVS	R1, #0
		CBZ	R0, loc_800D902
		CMP	R0, #1
		BEQ	loc_800D908
		CMP	R0, #3
		BEQ	loc_800D90E
		B	loc_800D912
@ ---------------------------------------------------------------------------

loc_800D902:				@ CODE XREF: ROM:0800D8F6j
		MOVS.W	R1, #0x200
		B	loc_800D912
@ ---------------------------------------------------------------------------

loc_800D908:				@ CODE XREF: ROM:0800D8FAj
		MOVS.W	R1, #0x400
		B	loc_800D912
@ ---------------------------------------------------------------------------

loc_800D90E:				@ CODE XREF: ROM:0800D8FEj
		MOVS.W	R1, #0x600

loc_800D912:				@ CODE XREF: ROM:0800D900j
					@ ROM:0800D906j ...
		CBZ	R6, loc_800D918
		MOVS	R0, #0x20
		B	loc_800D91C
@ ---------------------------------------------------------------------------

loc_800D918:				@ CODE XREF: ROM:loc_800D912j
		MOVS.W	R0, #0x2000

loc_800D91C:				@ CODE XREF: ROM:0800D916j
		LDR	R2, =0x40005C00
		ORRS	R0, R1
		ORRS	R0, R4
		STR.W	R0, [R2,R4,LSL#2]
		MOVS	R0, R5
		BL	sub_800D51C
		MOVS	R2, R6
		MOVS	R1, R0
		MOVS	R0, R4
		BL	sub_800D530
		MOVS	R2, R6
		MOVS	R1, R5
		MOVS	R0, R4
		POP.W	{R4-R6,LR}
		B	sub_800D570
@ ---------------------------------------------------------------------------
		.align 4
dword_800D944:	.long 0x40005C00	@ DATA XREF: ROM:loc_800D91Cr
@ ---------------------------------------------------------------------------
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		CBZ	R0, loc_800D952
		MOVS	R0, #0x40
		BX	LR
@ ---------------------------------------------------------------------------

loc_800D952:				@ CODE XREF: ROM:0800D94Cj
		MOVS	R0, #8
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4
		PUSH	{R4-R6,LR}
		LDR	R4, =0x200001BC
		MOVS	R5, R2
		ADDS.W	R4, R4,	R0,LSL#3
		LDR	R4, [R4,#4]
		CMP	R5, #2
		BCC	loc_800D976

loc_800D968:				@ CODE XREF: ROM:0800D974j
		LDRH.W	R6, [R1],#2
		SUBS	R5, R5,	#2
		CMP	R5, #2
		STR.W	R6, [R4],#4
		BCS	loc_800D968

loc_800D976:				@ CODE XREF: ROM:0800D966j
		CBZ	R5, loc_800D97C
		LDRB	R1, [R1]
		STR	R1, [R4]

loc_800D97C:				@ CODE XREF: ROM:loc_800D976j
		LDR	R1, =0x2000023C
		ADDS.W	R1, R1,	R0,LSL#3
		LDR	R1, [R1,#4]
		STR	R2, [R1]
		MOVS	R1, #0x30
		POP.W	{R4-R6,LR}
		B	loc_800D5E8
@ ---------------------------------------------------------------------------
		.align 0x10
dword_800D990:	.long 0x200001BC	@ DATA XREF: ROM:0800D95Ar
dword_800D994:	.long 0x2000023C	@ DATA XREF: ROM:loc_800D97Cr
@ ---------------------------------------------------------------------------
		B.W	sub_800DF28
@ ---------------------------------------------------------------------------
		BX	LR
@ ---------------------------------------------------------------------------
		.align 0x10
		MOVS	R0, #0
		BX	LR
@ ---------------------------------------------------------------------------
		BX	LR
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D9A8:				@ CODE XREF: sub_800E094+22p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R4,#7]
		LSLS	R0, R0,	#0x1E
		BPL	locret_800D9C6
		MOVS	R5, #1
		B	loc_800D9BE
@ ---------------------------------------------------------------------------

loc_800D9B6:				@ CODE XREF: sub_800D9A8+1Cj
		BL	sub_800E128
		ADDS	R5, R5,	#1
		UXTB	R5, R5

loc_800D9BE:				@ CODE XREF: sub_800D9A8+Cj
		LDRB	R1, [R4]
		MOVS	R0, R5
		CMP	R0, R1
		BCC	loc_800D9B6

locret_800D9C6:				@ CODE XREF: sub_800D9A8+8j
		POP	{R4,R5,PC}
@ End of function sub_800D9A8

@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800E0D0

loc_800D9C8:				@ CODE XREF: sub_800E0D0+4j
		MOVS	R1, R0
		LDR	R0, =0x3FF
		CMP	R1, R0
		BCS	locret_800D9DC
		MOVS.W	R0, #0x200

loc_800D9D4:				@ CODE XREF: sub_800E0D0-6F6j
		TST	R1, R0
		BNE	locret_800D9DC
		LSRS	R0, R0,	#1
		BNE	loc_800D9D4

locret_800D9DC:				@ CODE XREF: sub_800E0D0-702j
					@ sub_800E0D0-6FAj
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800E0D0
@ ---------------------------------------------------------------------------
		.align 0x10
dword_800D9E0:	.long 0x3FF		@ DATA XREF: sub_800E0D0-706r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800E0D0

loc_800D9E4:				@ CODE XREF: sub_800E0D0+Aj
		MOVS	R1, R0
		MOVS	R0, #0x40

loc_800D9E8:				@ CODE XREF: sub_800E0D0-6E2j
		CMP	R1, R0
		BCS	locret_800D9F0
		LSRS	R0, R0,	#1
		BNE	loc_800D9E8

locret_800D9F0:				@ CODE XREF: sub_800E0D0-6E6j
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800E0D0
@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800D9F4:				@ CODE XREF: sub_800E0D0+Ej
		PUSH	{R4,LR}
		MOVS	R4, R0
		CBZ	R1, loc_800DA0C
		CMP.W	R4, #0x200
		BCC	loc_800DA06
		MOVS.W	R0, #0x200
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800DA06:				@ CODE XREF: sub_800D9F4+Aj
		MOVS	R0, #2
		BL	sub_800E1C4

loc_800DA0C:				@ CODE XREF: sub_800D9F4+4j
		CMP	R4, #0x40
		ITT cs
		MOVCS	R0, #0x40
		POPCS	{R4,PC}
		CMP	R4, #0x20
		ITT cs
		MOVCS	R0, #0x20
		POPCS	{R4,PC}
		CMP	R4, #0x10
		ITT cs
		MOVCS	R0, #0x10
		POPCS	{R4,PC}
		CMP	R4, #8
		ITT cs
		MOVCS	R0, #8
		POPCS	{R4,PC}
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800D9F4


@ =============== S U B	R O U T	I N E =======================================


sub_800DA30:				@ CODE XREF: sub_800DEAC+52p
		LDR	R2, =0x20000310
		PUSH	{R4,LR}
		MOVS	R4, R0
		MOVS	R0, #0x28
		MLA.W	R0, R4,	R0, R2
		LDR	R2, [R0,#8]
		ADDS	R2, R2,	R1
		STR	R2, [R0,#8]
		LDR	R2, [R0,#0xC]
		SUBS	R1, R2,	R1
		STR	R1, [R0,#0xC]
		LDR	R1, [R0,#0xC]
		CBZ	R1, loc_800DA50
		LDRB	R0, [R0,#7]
		CBZ	R0, locret_800DA60

loc_800DA50:				@ CODE XREF: sub_800DA30+1Aj
		MOVS	R0, R4
		BL	sub_800E19C
		LDR	R1, =0x200004AC
		MOVS	R0, R4
		LDR	R1, [R1]
		LDR	R1, [R1,#0x28]
		BLX	R1

locret_800DA60:				@ CODE XREF: sub_800DA30+1Ej
		POP	{R4,PC}
@ End of function sub_800DA30

@ ---------------------------------------------------------------------------
		.align 4
dword_800DA64:	.long 0x200004AC	@ DATA XREF: sub_800DA30+26r

@ =============== S U B	R O U T	I N E =======================================


sub_800DA68:				@ CODE XREF: sub_800DD54+18p
					@ sub_800DD78+6p
		PUSH.W	{R4-R11,LR}
		MOV	R8, R0
		MOVS	R4, R2
		LDR	R2, =0x20000310
		MOVS.W	R0, #0xFFFFFFFF
		MOV	R9, R1
		MOVS	R1, #0x28
		MOV	R10, R0
		MLA.W	R7, R8,	R1, R2
		MOVS	R5, R3
		MOV	R6, R10
		LDRB	R0, [R7,#0x10]
		CMP	R0, #1
		BNE	loc_800DA8E
		MOV	R0, R6
		B	locret_800DAFE
@ ---------------------------------------------------------------------------

loc_800DA8E:				@ CODE XREF: sub_800DA68+20j
		BL	sub_800E188
		LDR	R0, =0x20000450
		MOV	R11, R0
		LDRB.W	R0, [R11,#7]
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		CMP	R0, #2
		BNE	loc_800DAF8
		CBZ	R4, loc_800DABC
		MOVS	R2, R4
		MOV	R1, R9
		MOVS	R0, R7
		ADDS	R0, #0x18
		BL	sub_800DCA4
		MOVS	R6, R0
		SUBS	R4, R4,	R6
		ADDS.W	R9, R6,	R9
		CBNZ	R4, loc_800DAC0
		B	loc_800DAF8
@ ---------------------------------------------------------------------------

loc_800DABC:				@ CODE XREF: sub_800DA68+3Aj
		LDR	R0, [R7,#0x20]
		CBNZ	R0, loc_800DAF8

loc_800DAC0:				@ CODE XREF: sub_800DA68+50j
		STR.W	R9, [R7,#8]
		STR	R4, [R7,#0xC]
		LDR.W	R1, [R11,#0x5C]
		MOV	R0, R8
		LDR	R1, [R1,#0x2C]
		BLX	R1
		CBZ	R5, loc_800DAF6
		LDR	R1, [SP,#0x24]
		MOV	R0, R8
		CBZ	R1, loc_800DADE
		BL	sub_800E1B4
		B	loc_800DAE2
@ ---------------------------------------------------------------------------

loc_800DADE:				@ CODE XREF: sub_800DA68+6Ej
		BL	sub_800E1A8

loc_800DAE2:				@ CODE XREF: sub_800DA68+74j
		LDRB	R0, [R7,#7]
		CBZ	R0, loc_800DAEE
		LDR	R1, [R7,#0xC]
		ADDS	R0, R6,	R4
		SUBS	R6, R0,	R1
		B	loc_800DAF8
@ ---------------------------------------------------------------------------

loc_800DAEE:				@ CODE XREF: sub_800DA68+7Cj
		LDR	R0, [R7,#0xC]
		CBZ	R0, loc_800DAF6
		MOV	R6, R10
		B	loc_800DAF8
@ ---------------------------------------------------------------------------

loc_800DAF6:				@ CODE XREF: sub_800DA68+68j
					@ sub_800DA68+88j
		ADDS	R6, R6,	R4

loc_800DAF8:				@ CODE XREF: sub_800DA68+38j
					@ sub_800DA68+52j ...
		BL	sub_800E174
		MOVS	R0, R6

locret_800DAFE:				@ CODE XREF: sub_800DA68+24j
		POP.W	{R4-R11,PC}
@ End of function sub_800DA68

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DB04:				@ CODE XREF: sub_800DE20+28p
					@ sub_800DE20+3Ap ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R0, #0x28
		MOVS	R5, R1
		LDR	R1, =0x20000310
		MOVS	R6, R2
		MLA.W	R7, R4,	R0, R1
		BL	sub_800E188
		LDR	R0, [R7,#8]
		CBZ	R0, loc_800DB2E
		CBZ	R6, loc_800DB28
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_800E1B4
		B	loc_800DB2E
@ ---------------------------------------------------------------------------

loc_800DB28:				@ CODE XREF: sub_800DB04+18j
		MOVS	R0, R4
		BL	sub_800E1A8

loc_800DB2E:				@ CODE XREF: sub_800DB04+16j
					@ sub_800DB04+22j
		BL	sub_800E174
		LDR	R0, [R7,#0xC]
		SUBS	R0, R5,	R0
		POP	{R4-R7,PC}
@ End of function sub_800DB04


@ =============== S U B	R O U T	I N E =======================================


sub_800DB38:				@ CODE XREF: sub_800C304+Ep
					@ sub_800C304+22p
		PUSH.W	{R0,R4-R11,LR}
		LDR	R5, =0x20000450
		STR	R3, [SP,#0]
		MOVS	R4, R0
		LDR	R0, [R5,#0x5C]
		MOV	R8, R1
		MOV	R9, R2
		MOV	R10, R0
		MOVS	R0, #0
		MOV	R11, R0
		LDRB	R0, [R5]
		CMP	R0, #8
		BCS	loc_800DBC4
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R6, R0,	R1, R2
		LDR.W	R2, [R10,#4]
		MOV	R1, R8
		MOVS	R0, R4
		BLX	R2
		MOVS	R7, R0
		BEQ	loc_800DBC4
		CMP	R0, #0xFF
		BEQ	loc_800DBC4
		MOVS	R2, #0x28
		MOVS	R1, #0
		MOVS	R0, R6
		BL	sub_800EB68
		ORRS.W	R0, R7,	R4,LSL#7
		STRB	R0, [R6,#5]
		STRB.W	R8, [R6,#4]
		LDR.W	R1, [R10,#0x14]
		MOVS	R0, R7
		BLX	R1
		MOVS	R7, R0
		CBNZ	R4, loc_800DB96
		LDR	R0, [SP,#0x28]
		CMP	R0, R7
		IT cc
		MOVCC	R7, R0

loc_800DB96:				@ CODE XREF: sub_800DB38+54j
		BL	sub_800E0E0
		UXTB	R2, R0
		MOV	R1, R8
		MOVS	R0, R7
		BL	sub_800E0D0
		MOVS	R4, R0
		ITT eq
		MOVEQ	R0, #2
		BLEQ	sub_800E1C4
		STRH	R4, [R6]
		LDR	R0, [SP,#0]
		STR	R0, [R6,#0x18]
		LDR	R0, [SP,#0x28]
		STR	R0, [R6,#0x1C]
		STRH.W	R9, [R6,#2]
		LDRB	R0, [R5]
		MOV	R11, R0
		ADDS	R0, R0,	#1
		STRB	R0, [R5]

loc_800DBC4:				@ CODE XREF: sub_800DB38+1Aj
					@ sub_800DB38+30j ...
		MOV	R0, R11
		POP.W	{R1,R4-R11,PC}
@ End of function sub_800DB38

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DBCC:				@ CODE XREF: sub_800E778+66p
					@ sub_800E804:loc_800E850p ...
		LDR	R3, =0x20000310
		PUSH	{LR}
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_800DBD8
@ ---------------------------------------------------------------------------

loc_800DBD6:				@ CODE XREF: sub_800DBCC+1Ej
		ADDS	R0, R0,	#1

loc_800DBD8:				@ CODE XREF: sub_800DBCC+8j
		LDR	R2, =0x20000450
		LDRB	R2, [R2]
		CMP	R0, R2
		BGE	loc_800DBF0
		MOVS	R2, #0x28
		MLA.W	R2, R0,	R2, R3
		LDRB	R2, [R2,#5]
		CMP	R2, R1
		BNE	loc_800DBD6
		UXTB	R0, R0
		POP	{PC}
@ ---------------------------------------------------------------------------

loc_800DBF0:				@ CODE XREF: sub_800DBCC+12j
		MOVS	R0, #3
		BL	sub_800E1C4
		MOVS	R0, #0xFF
		POP	{PC}
@ End of function sub_800DBCC

@ ---------------------------------------------------------------------------
		.align 4
dword_800DBFC:	.long 0x20000450	@ DATA XREF: sub_800DBCC:loc_800DBD8r

@ =============== S U B	R O U T	I N E =======================================


sub_800DC00:				@ CODE XREF: ROM:0800D7FCp
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDRB	R0, [R0,#5]
		BX	LR
@ End of function sub_800DC00


@ =============== S U B	R O U T	I N E =======================================


sub_800DC0C:				@ CODE XREF: sub_800E898+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		LSRS	R1, R0,	#1
		MOVS	R0, #1
		ANDS	R0, R1
		BX	LR
@ End of function sub_800DC0C


@ =============== S U B	R O U T	I N E =======================================


sub_800DC18:				@ CODE XREF: sub_800DC78+Ap
					@ sub_800E040+Ap
		PUSH	{R4-R6,LR}
		LDR	R4, =0x20000450
		MOVS	R6, #1
		LDR	R5, [R4,#0x5C]
		B	loc_800DC34
@ ---------------------------------------------------------------------------

loc_800DC22:				@ CODE XREF: sub_800DC18+20j
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R0, R6,	R0, R1
		LDR	R1, [R5,#8]
		ADDS	R6, R6,	#1
		BLX	R1
		LDR	R0, [R5,#0xC]
		BLX	R0

loc_800DC34:				@ CODE XREF: sub_800DC18+8j
		LDRB	R0, [R4]
		CMP	R6, R0
		BLT	loc_800DC22
		POP	{R4-R6,PC}
@ End of function sub_800DC18


@ =============== S U B	R O U T	I N E =======================================


sub_800DC3C:				@ CODE XREF: sub_800C3D8+6p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDR	R5, =0x20000310
		MOVS	R2, #0x68
		MOVS	R1, #0
		MOVS	R0, R4
		BL	sub_800EB68
		MOVS	R0, #1
		STRB	R0, [R4]
		MOVS.W	R2, #0x140
		MOVS	R1, #0
		MOVS	R0, R5
		BL	sub_800EB68
		BL	sub_800D480
		LDR	R1, [R4,#0x5C]
		MOVS	R0, #0
		LDR	R1, [R1,#0x14]
		BLX	R1
		STRH	R0, [R5]
		POP.W	{R4,R5,LR}
		B.W	sub_800E15C
@ End of function sub_800DC3C

@ ---------------------------------------------------------------------------
		.align 4
dword_800DC74:	.long 0x20000310	@ DATA XREF: sub_800DA30r
					@ sub_800DA68+8r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800DC78:				@ CODE XREF: sub_800C3D8+Ep
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDR	R5, [R4,#0x5C]
		LDR	R0, [R5]
		BLX	R0
		BL	sub_800DC18
		LDR	R2, [R5,#0x40]
		MOVS	R0, R2
		BEQ	loc_800DC94
		MOVS	R1, R4
		ADDS	R1, #0x60
		MOVS	R0, #1
		BLX	R2

loc_800DC94:				@ CODE XREF: sub_800DC78+12j
		MOVS	R0, #0x10
		STRB	R0, [R4,#7]
		LDR	R0, [R5,#0x10]
		POP.W	{R4,R5,LR}
		BX	R0
@ End of function sub_800DC78

@ ---------------------------------------------------------------------------
dword_800DCA0:	.long 0x20000450	@ DATA XREF: sub_800D9A8+2r
					@ sub_800DA68+2Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800DCA4:				@ CODE XREF: sub_800DA68+44p
		PUSH.W	{R4-R9,LR}
		MOV	R8, R1
		MOVS	R4, R0
		MOVS	R5, R2
		MOVS	R0, #0
		MOV	R9, R0
		MOVS	R6, #0
		B	loc_800DCF4
@ ---------------------------------------------------------------------------

loc_800DCB6:				@ CODE XREF: sub_800DCA4+56j
		LDR	R0, [R4,#0xC]
		LDR	R2, [R4,#4]
		ADDS	R1, R0,	R1
		CMP	R2, R1
		IT cc
		MOVCC	R1, R2
		SUBS	R7, R1,	R0
		CMP	R7, R5
		IT cs
		MOVCS	R7, R5
		LDR	R1, [R4]
		MOVS	R2, R7
		SUBS	R5, R5,	R7
		ADDS	R1, R1,	R0
		MOV	R0, R8
		BL	sub_800EB50
		LDR	R0, [R4,#8]
		ADDS	R6, R6,	R7
		ADDS.W	R8, R7,	R8
		SUBS	R0, R0,	R7
		STR	R0, [R4,#8]
		LDR	R0, [R4,#0xC]
		ADDS	R0, R0,	R7
		STR	R0, [R4,#0xC]
		LDR	R1, [R4,#4]
		CMP	R0, R1
		IT eq
		STREQ.W	R9, [R4,#0xC]

loc_800DCF4:				@ CODE XREF: sub_800DCA4+10j
		LDR	R1, [R4,#8]
		CBZ	R5, loc_800DCFC
		CMP	R1, #0
		BNE	loc_800DCB6

loc_800DCFC:				@ CODE XREF: sub_800DCA4+52j
		CBNZ	R1, loc_800DD02
		STR.W	R9, [R4,#0xC]

loc_800DD02:				@ CODE XREF: sub_800DCA4:loc_800DCFCj
		MOVS	R0, R6
		POP.W	{R4-R9,PC}
@ End of function sub_800DCA4


@ =============== S U B	R O U T	I N E =======================================


sub_800DD08:				@ CODE XREF: sub_800DEAC+64p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		B	loc_800DD42
@ ---------------------------------------------------------------------------

loc_800DD12:				@ CODE XREF: sub_800DD08+42j
		LDR	R2, [R4,#0xC]
		ADDS	R0, R2,	R0
		CMP	R0, R1
		IT cs
		SUBCS	R0, R0,	R1
		ADDS	R2, R0,	R6
		CMP	R1, R2
		IT cc
		MOVCC	R2, R1
		SUBS	R7, R2,	R0
		CMP	R7, R6
		IT cs
		MOVCS	R7, R6
		LDR	R3, [R4]
		MOVS	R2, R7
		MOVS	R1, R5
		ADDS	R0, R3,	R0
		BL	sub_800EB50
		LDR	R0, [R4,#8]
		SUBS	R6, R6,	R7
		ADDS	R5, R5,	R7
		ADDS	R0, R0,	R7
		STR	R0, [R4,#8]

loc_800DD42:				@ CODE XREF: sub_800DD08+8j
		CBZ	R6, locret_800DD52
		LDR	R0, [R4,#8]
		LDR	R1, [R4,#4]
		SUBS	R2, R1,	R0
		BNE	loc_800DD12
		MOVS	R0, #1
		BL	sub_800E1C4

locret_800DD52:				@ CODE XREF: sub_800DD08:loc_800DD42j
		POP	{R4-R7,PC}
@ End of function sub_800DD08


@ =============== S U B	R O U T	I N E =======================================


sub_800DD54:				@ CODE XREF: sub_800D414+Aj
		PUSH	{R4,R5,LR}
		LDR	R5, =0x20000457
		MOVS	R4, R0
		MOVS	R0, #0
		LDRB	R5, [R5]
		LSLS	R5, R5,	#0x1E
		LSRS	R5, R5,	#0x1E
		CMP	R5, #2
		BNE	locret_800DD72
		PUSH	{R3}
		MOVS	R0, R4
		MOVS	R3, #1
		BL	sub_800DA68
		ADD	SP, SP,	#4

locret_800DD72:				@ CODE XREF: sub_800DD54+10j
		POP	{R4,R5,PC}
@ End of function sub_800DD54

@ ---------------------------------------------------------------------------
dword_800DD74:	.long 0x20000457	@ DATA XREF: sub_800DC0Cr
					@ sub_800DD54+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800DD78:				@ CODE XREF: sub_800C5B8+E0Cj
		PUSH	{LR}
		MOVS	R3, #0
		PUSH	{R3}
		BL	sub_800DA68
		POP	{R1,PC}
@ End of function sub_800DD78


@ =============== S U B	R O U T	I N E =======================================


sub_800DD84:				@ CODE XREF: sub_800E6DCj
		LDR	R3, =0x20000310
		STR	R0, [R3,#8]
		STR	R1, [R3,#0xC]
		LDR	R1, =0x200004AC
		STRB	R2, [R3,#6]
		MOVS	R0, #0
		LDR	R1, [R1]
		LDR	R1, [R1,#0x30]
		BX	R1
@ End of function sub_800DD84

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DD98:				@ CODE XREF: sub_800D3C8+Aj
					@ sub_800DE20+18p ...
		PUSH.W	{R4-R9,LR}
		MOVS	R4, R0
		LDR	R0, =0x20000450
		MOVS	R5, R2
		MOV	R8, R1
		MOVS	R7, R3
		MOV	R9, R0
		CBZ	R4, loc_800DDB6
		LDRB.W	R0, [R9,#7]
		LSLS	R0, R0,	#0x1E
		BMI	loc_800DDB6

loc_800DDB2:				@ CODE XREF: sub_800DD98+2Aj
		MOVS	R0, #0
		B	locret_800DE1A
@ ---------------------------------------------------------------------------

loc_800DDB6:				@ CODE XREF: sub_800DD98+10j
					@ sub_800DD98+18j
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R6, R4,	R0, R1
		LDRB	R0, [R6,#0x10]
		CMP	R0, #0
		BNE	loc_800DDB2
		LDRB	R0, [R6,#4]
		CMP	R0, #2
		BNE	loc_800DDD8
		LDRH	R0, [R6]
		SUBS	R0, R0,	#1
		ANDS	R0, R5
		BNE	loc_800DDD6
		LSLS	R0, R5,	#0x15
		BNE	loc_800DDD8

loc_800DDD6:				@ CODE XREF: sub_800DD98+38j
		MOVS	R7, #0

loc_800DDD8:				@ CODE XREF: sub_800DD98+30j
					@ sub_800DD98+3Cj
		BL	sub_800E188
		LDR	R0, [R6,#8]
		CBZ	R0, loc_800DDF8
		LDR	R1, [R6,#0xC]
		ADDS	R0, R0,	R1
		CMP	R0, R8
		BNE	loc_800DDF2
		LDR	R0, [R6,#0xC]
		ADDS	R0, R0,	R5
		STR	R0, [R6,#0xC]
		STRB	R7, [R6,#6]
		B	loc_800DE0A
@ ---------------------------------------------------------------------------

loc_800DDF2:				@ CODE XREF: sub_800DD98+4Ej
		MOVS	R0, R4
		BL	sub_800E1A8

loc_800DDF8:				@ CODE XREF: sub_800DD98+46j
		STR.W	R8, [R6,#8]
		STR	R5, [R6,#0xC]
		STRB	R7, [R6,#6]
		LDR.W	R1, [R9,#0x5C]
		MOVS	R0, R4
		LDR	R1, [R1,#0x30]
		BLX	R1

loc_800DE0A:				@ CODE XREF: sub_800DD98+58j
		BL	sub_800E174
		LDR	R0, [R6,#0xC]
		SUBS	R0, R5,	R0
		BNE	locret_800DE1A
		LDRB	R1, [R6,#6]
		CBZ	R1, locret_800DE1A
		MOVS	R0, #1

locret_800DE1A:				@ CODE XREF: sub_800DD98+1Cj
					@ sub_800DD98+7Aj ...
		POP.W	{R4-R9,PC}
@ End of function sub_800DD98

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800DE20:				@ CODE XREF: sub_800D3EC+Aj
		PUSH	{R4-R6,LR}
		LDR	R6, =0x20000450
		MOVS	R4, R0
		MOVS	R5, R2
		LDRB	R2, [R6,#7]
		MOVS	R0, #0
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		CMP	R2, #2
		BNE	locret_800DE60
		MOVS	R2, R5
		MOVS	R0, R4
		BL	sub_800DD98
		LDRB.W	R2, [R6,#0x60]!
		SUBS	R1, R5,	R0
		CBNZ	R2, loc_800DE50
		MOVS	R5, R0
		MOVS	R0, R4
		BL	sub_800DB04
		ADDS	R0, R5,	R0
		POP	{R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_800DE50:				@ CODE XREF: sub_800DE20+22j
		CMP	R1, #1
		BLT	locret_800DE60
		MOVS	R5, R0
		MOVS	R2, #0
		MOVS	R0, R4
		BL	sub_800DB04
		ADDS	R0, R5,	R0

locret_800DE60:				@ CODE XREF: sub_800DE20+12j
					@ sub_800DE20+32j
		POP	{R4-R6,PC}
@ End of function sub_800DE20

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DE64:				@ CODE XREF: sub_800D3FC+10p
		PUSH	{R4-R7,LR}
		LDR	R7, =0x20000450
		LDR	R6, [SP,#0x14]
		MOVS	R5, R2
		LDRB	R2, [R7,#7]
		MOVS	R4, R0
		MOVS	R0, #0
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		CMP	R2, #2
		BNE	locret_800DEA8
		MOVS	R2, R5
		MOVS	R0, R4
		BL	sub_800DD98
		LDRB.W	R2, [R7,#0x60]!
		SUBS	R1, R5,	R0
		CBNZ	R2, loc_800DE98
		MOVS	R5, R0
		MOVS	R2, R6
		MOVS	R0, R4
		BL	sub_800DB04
		ADDS	R0, R5,	R0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800DE98:				@ CODE XREF: sub_800DE64+24j
		CMP	R1, #1
		BLT	locret_800DEA8
		MOVS	R5, R0
		MOVS	R2, R6
		MOVS	R0, R4
		BL	sub_800DB04
		ADDS	R0, R5,	R0

locret_800DEA8:				@ CODE XREF: sub_800DE64+14j
					@ sub_800DE64+36j
		POP	{R4-R7,PC}
@ End of function sub_800DE64

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DEAC:				@ CODE XREF: sub_800D69C+4Cp
					@ sub_800D6F0+38p
		PUSH.W	{R4-R9,LR}
		MOVS	R4, R1
		MOVS	R1, #0x28
		MOVS	R5, R2
		LDR	R2, =0x20000310
		MOV	R8, R0
		MLA.W	R6, R0,	R1, R2
		LDR	R0, =0x20000450
		MOV	R9, R0
		MOV	R0, R8
		CBNZ	R0, loc_800DED6
		LDR.W	R2, [R9,#0x58]
		MOVS	R0, R2
		BEQ	locret_800DF1E
		MOVS	R1, R5
		MOVS	R0, R4
		BLX	R2
		B	locret_800DF1E
@ ---------------------------------------------------------------------------

loc_800DED6:				@ CODE XREF: sub_800DEAC+18j
		LDR	R2, [R6,#0x14]
		MOVS	R0, R2
		ITTT ne
		MOVNE	R1, R5
		MOVNE	R0, R4
		BLXNE	R2
		LDR	R0, [R6,#8]
		CBZ	R0, loc_800DF06
		LDR	R1, [R6,#0xC]
		CMP	R5, R1
		ITE cs
		LDRCS	R7, [R6,#0xC]
		MOVCC	R7, R5
		CBZ	R7, loc_800DF06
		MOVS	R2, R7
		MOVS	R1, R4
		BL	sub_800EB50
		MOVS	R1, R7
		MOV	R0, R8
		BL	sub_800DA30
		SUBS	R5, R5,	R7
		ADDS	R4, R4,	R7

loc_800DF06:				@ CODE XREF: sub_800DEAC+38j
					@ sub_800DEAC+44j
		CBZ	R5, locret_800DF1E
		MOVS	R2, R5
		MOVS	R1, R4
		ADDS	R6, #0x18
		MOVS	R0, R6
		BL	sub_800DD08
		LDR.W	R1, [R9,#0x5C]
		MOV	R0, R8
		LDR	R1, [R1,#0x28]
		BLX	R1

locret_800DF1E:				@ CODE XREF: sub_800DEAC+20j
					@ sub_800DEAC+28j ...
		POP.W	{R4-R9,PC}
@ End of function sub_800DEAC

@ ---------------------------------------------------------------------------
		.align 4
dword_800DF24:	.long 0x20000450	@ DATA XREF: sub_800DD98+6r
					@ sub_800DE20+2r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800DF28:				@ CODE XREF: ROM:0800D998j
					@ sub_800DF90+1Ep
		LDR	R1, =0x20000310
		PUSH	{R4-R7,LR}
		LDR	R6, =0x200004AC
		MOVS	R4, R0
		MOVS	R0, #0x28
		MLA.W	R5, R4,	R0, R1
		CBZ	R4, loc_800DF48
		LDRB	R0, [R5,#5]
		LSLS	R0, R0,	#0x18
		ITT pl
		MOVPL	R0, #0xFF
		BLPL	sub_800E1C4
		LDRB	R0, [R6,#4]
		CBZ	R0, loc_800DF58

loc_800DF48:				@ CODE XREF: sub_800DF28+Ej
					@ sub_800DF28+38j
		LDR	R1, [R5,#8]
		CBZ	R1, locret_800DF8C
		LDRH	R7, [R5]
		LDR	R0, [R5,#0xC]
		CMP	R0, R7
		BCS	loc_800DF62
		LDR	R7, [R5,#0xC]
		B	loc_800DF62
@ ---------------------------------------------------------------------------

loc_800DF58:				@ CODE XREF: sub_800DF28+1Ej
		LDRB	R0, [R5,#0x14]
		CBNZ	R0, locret_800DF8C
		MOVS	R0, #1
		STRB	R0, [R5,#0x14]
		B	loc_800DF48
@ ---------------------------------------------------------------------------

loc_800DF62:				@ CODE XREF: sub_800DF28+2Aj
					@ sub_800DF28+2Ej
		LDR	R3, [R6]
		MOVS	R0, R4
		MOVS	R2, R7
		LDR	R3, [R3,#0x34]
		BLX	R3
		LDR	R0, [R5,#0xC]
		SUBS	R0, R0,	R7
		STR	R0, [R5,#0xC]
		LDR	R0, [R5,#8]
		ADDS	R0, R0,	R7
		STR	R0, [R5,#8]
		LDR	R0, [R5,#0xC]
		CBNZ	R0, locret_800DF8C
		LDRH	R1, [R5]
		CMP	R7, R1
		BNE	loc_800DF8A
		LDRB	R1, [R5,#6]
		CBZ	R1, loc_800DF8A
		STRB	R0, [R5,#6]
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800DF8A:				@ CODE XREF: sub_800DF28+58j
					@ sub_800DF28+5Cj
		STR	R0, [R5,#8]

locret_800DF8C:				@ CODE XREF: sub_800DF28+22j
					@ sub_800DF28+32j ...
		POP	{R4-R7,PC}
@ End of function sub_800DF28

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800DF90:				@ CODE XREF: ROM:0800D7CEp
		LDR	R1, =0x20000310
		PUSH	{R4-R7,LR}
		LDR	R6, =0x200004AC
		MOVS	R4, R0
		MOVS	R0, #0x28
		MOVS	R7, #0
		MLA.W	R5, R4,	R0, R1
		CBZ	R4, loc_800DFA8
		LDRB	R0, [R6,#4]
		CBNZ	R0, loc_800DFA8
		STRB	R7, [R5,#0x14]

loc_800DFA8:				@ CODE XREF: sub_800DF90+10j
					@ sub_800DF90+14j
		LDR	R0, [R5,#8]
		CBZ	R0, loc_800DFB6
		MOVS	R0, R4
		BL	sub_800DF28
		LDRB	R0, [R6,#4]
		CBZ	R0, locret_800DFE4

loc_800DFB6:				@ CODE XREF: sub_800DF90+1Aj
		LDRB	R0, [R6,#4]
		CBNZ	R0, loc_800DFC0
		LDR	R0, [R5,#0xC]
		CBNZ	R0, loc_800DFC0
		STRB	R7, [R5,#6]

loc_800DFC0:				@ CODE XREF: sub_800DF90+28j
					@ sub_800DF90+2Cj
		LDR	R0, [R5,#8]
		CBNZ	R0, loc_800DFCC
		LDR	R1, [R6]
		MOVS	R0, R4
		LDR	R1, [R1,#0x38]
		BLX	R1

loc_800DFCC:				@ CODE XREF: sub_800DF90+32j
		CBZ	R4, loc_800DFE0
		LDR	R0, [R5,#8]
		CBNZ	R0, locret_800DFE4
		LDRB	R0, [R5,#6]
		CBNZ	R0, locret_800DFE4
		MOVS	R0, R4
		POP.W	{R4-R7,LR}
		B.W	sub_800E19C
@ ---------------------------------------------------------------------------

loc_800DFE0:				@ CODE XREF: sub_800DF90:loc_800DFCCj
		BL	sub_800E96C

locret_800DFE4:				@ CODE XREF: sub_800DF90+24j
					@ sub_800DF90+40j ...
		POP	{R4-R7,PC}
@ End of function sub_800DF90

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800DFE8:				@ CODE XREF: sub_800E804+78p
					@ sub_800E8FC+2Ap
		LDR	R3, =0x20000310
		MOVS	R2, #0x28
		MLA.W	R2, R0,	R2, R3
		STRB	R1, [R2,#0x10]
		LDR	R2, =0x200004AC
		LDR	R2, [R2]
		LDR	R2, [R2,#0x20]
		BX	R2
@ End of function sub_800DFE8

@ ---------------------------------------------------------------------------
		.align 4
dword_800DFFC:	.long 0x20000310	@ DATA XREF: sub_800DD84r
					@ sub_800DD98:loc_800DDB6r ...
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800D480

loc_800E000:				@ CODE XREF: sub_800D480+2j
		LDR	R1, =0x200004AC
		STR	R0, [R1]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800D480
@ ---------------------------------------------------------------------------
		.align 4
dword_800E008:	.long 0x200004AC	@ DATA XREF: sub_800DD84+6r
					@ sub_800DF28+4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800E00C:				@ CODE XREF: sub_800C3D8+24p
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		MOVS	R6, R2
		MOVS	R7, R3
		MOVS	R2, #0x10
		MOVS	R1, #0
		BL	sub_800EB68
		LDR	R0, =0x200004B8
		STR	R5, [R4,#4]
		STR	R6, [R4,#8]
		STR	R7, [R4,#0xC]
		LDR	R1, [R0]
		MOVS	R2, R1
		B	loc_800E02E
@ ---------------------------------------------------------------------------

loc_800E02C:				@ CODE XREF: sub_800E00C+26j
		LDR	R2, [R2]

loc_800E02E:				@ CODE XREF: sub_800E00C+1Ej
		CBZ	R2, loc_800E038
		CMP	R2, R4
		BNE	loc_800E02C
		MOVS	R0, #1
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800E038:				@ CODE XREF: sub_800E00C:loc_800E02Ej
		STR	R1, [R4]
		STR	R4, [R0]
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ End of function sub_800E00C


@ =============== S U B	R O U T	I N E =======================================


sub_800E040:				@ CODE XREF: sub_800D620+58p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		MOVS	R5, #0
		LDRB	R0, [R4,#7]
		STRB	R5, [R4,#3]
		BL	sub_800DC18
		LDR	R2, =0x20000310
		MOVS	R0, #1
		B	loc_800E05E
@ ---------------------------------------------------------------------------

loc_800E054:				@ CODE XREF: sub_800E040+22j
		MOVS	R1, #0x28
		MLA.W	R1, R0,	R1, R2
		ADDS	R0, R0,	#1
		STRB	R5, [R1,#0x10]

loc_800E05E:				@ CODE XREF: sub_800E040+12j
		LDRB	R1, [R4]
		CMP	R0, R1
		BLT	loc_800E054
		LDRB	R0, [R4,#7]
		MOVS	R1, #0x10
		ANDS	R1, R0
		ORRS.W	R0, R1,	#8
		POP.W	{R4,R5,LR}
		B	sub_800E094
@ End of function sub_800E040

@ ---------------------------------------------------------------------------
dword_800E074:	.long 0x20000450	@ DATA XREF: sub_800E040+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800E078:				@ CODE XREF: ROM:0800C39Ep
					@ sub_800C5D8+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		BX	LR
@ End of function sub_800E078

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800E080:				@ CODE XREF: sub_800D680+2p
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		ORRS.W	R0, R0,	#1
		B	sub_800E094
@ End of function sub_800E080

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E08C:				@ CODE XREF: ROM:0800D77Ep
		LDR	R0, =0x20000457
		LDRB	R0, [R0]
		ANDS.W	R0, R0,	#0xFE
@ End of function sub_800E08C


@ =============== S U B	R O U T	I N E =======================================


sub_800E094:				@ CODE XREF: sub_800E040+32p
					@ sub_800E080+8j ...
		LDR	R1, =0x20000450
		PUSH	{R4,LR}
		LDRB	R2, [R1,#7]
		CMP	R2, R0
		BEQ	locret_800E0BA
		STRB	R0, [R1,#7]
		LDR	R0, =0x200004B8
		LDR	R4, [R0]
		B	loc_800E0B2
@ ---------------------------------------------------------------------------

loc_800E0A6:				@ CODE XREF: sub_800E094+20j
		LDR	R1, [R4,#4]
		MOVS	R0, R1
		ITT ne
		LDRNE	R0, [R4,#8]
		BLXNE	R1
		LDR	R4, [R4]

loc_800E0B2:				@ CODE XREF: sub_800E094+10j
		CMP	R4, #0
		BNE	loc_800E0A6
		BL	sub_800D9A8

locret_800E0BA:				@ CODE XREF: sub_800E094+8j
		POP	{R4,PC}
@ End of function sub_800E094

@ ---------------------------------------------------------------------------
dword_800E0BC:	.long 0x20000457	@ DATA XREF: sub_800E078r sub_800E080r ...
dword_800E0C0:	.long 0x200004B8	@ DATA XREF: sub_800E00C+12r
					@ sub_800E094+Cr
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800D3D8

loc_800E0C4:				@ CODE XREF: sub_800D3D8+4j
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDR	R0, [R0,#0x20]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800D3D8

@ =============== S U B	R O U T	I N E =======================================


sub_800E0D0:				@ CODE XREF: sub_800DB38+68p
					@ sub_800E3CC:loc_800E4A2p

@ FUNCTION CHUNK AT 0800D9C8 SIZE 00000016 BYTES
@ FUNCTION CHUNK AT 0800D9E4 SIZE 0000000E BYTES

		CMP	R1, #1
		BNE	loc_800E0D6
		B	loc_800D9C8
@ ---------------------------------------------------------------------------

loc_800E0D6:				@ CODE XREF: sub_800E0D0+2j
		CMP	R1, #3
		BNE	loc_800E0DC
		B	loc_800D9E4
@ ---------------------------------------------------------------------------

loc_800E0DC:				@ CODE XREF: sub_800E0D0+8j
		MOVS	R1, R2
		B	sub_800D9F4
@ End of function sub_800E0D0


@ =============== S U B	R O U T	I N E =======================================


sub_800E0E0:				@ CODE XREF: sub_800DB38:loc_800DB96p
					@ sub_800E700:loc_800E73Cp ...
		LDR	R0, =0x200004AC
		PUSH	{LR}
		LDR	R0, [R0]
		LDR	R0, [R0,#0x18]
		BLX	R0
		MOVS	R1, R0
		MOVS	R0, #2
		ANDS	R0, R1
		POP	{PC}
@ End of function sub_800E0E0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E0F4:				@ CODE XREF: sub_800E1F4+16p
					@ sub_800E280+90p ...
		LDR	R0, =0x200004AC
		PUSH	{LR}
		LDR	R0, [R0]
		LDR	R0, [R0,#0x18]
		BLX	R0
		MOVS	R1, R0
		MOVS	R0, #1
		ANDS	R0, R1
		POP	{PC}
@ End of function sub_800E0F4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E108:				@ CODE XREF: sub_800D424+4p
		LDR	R0, =0x20000450
		PUSH	{R4,LR}
		LDRB	R4, [R0,#1]
		ADDS	R1, R4,	#1
		STRB	R1, [R0,#1]
		UXTB	R1, R1
		CMP	R1, #5
		ITT cs
		MOVCS	R0, #7
		BLCS	sub_800E1C4
		MOVS	R0, R4
		POP	{R4,PC}
@ End of function sub_800E108

@ ---------------------------------------------------------------------------
		.align 4
dword_800E124:	.long 0x20000450	@ DATA XREF: sub_800E094r sub_800E108r

@ =============== S U B	R O U T	I N E =======================================


sub_800E128:				@ CODE XREF: sub_800D9A8:loc_800D9B6p
					@ sub_800E8FC+36p
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R1, R0,	R1, R2
		MOVS	R2, #0
		STRB	R2, [R1,#0x10]
		STR	R2, [R1,#8]
		STR	R2, [R1,#0x20]
		STR	R2, [R1,#0x24]
		LDRB	R3, [R1,#5]
		LSLS	R3, R3,	#0x18
		IT mi
		STRBMI	R2, [R1,#0x14]
		B.W	sub_800E19C
@ End of function sub_800E128

@ ---------------------------------------------------------------------------
		.align 4
dword_800E148:	.long 0x200004AC	@ DATA XREF: sub_800E0E0r sub_800E0F4r
@ ---------------------------------------------------------------------------
@ START	OF FUNCTION CHUNK FOR sub_800D464

loc_800E14C:				@ CODE XREF: sub_800D464+6j
		LDR	R3, =0x20000310
		MOVS	R2, #0x28
		MLA.W	R0, R0,	R2, R3
		STR	R1, [R0,#0x14]
		BX	LR
@ END OF FUNCTION CHUNK	FOR sub_800D464
@ ---------------------------------------------------------------------------
dword_800E158:	.long 0x20000310	@ DATA XREF: sub_800E040+Er
					@ sub_800D3D8:loc_800E0C4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800E15C:				@ CODE XREF: sub_800DC3C+32p
		PUSH	{R4,LR}
		MOVS	R4, #0

loc_800E160:				@ CODE XREF: sub_800E15C+12j
		LDR	R0, =0x200004BC
		ADDS.W	R0, R0,	R4,LSL#3
		BL	sub_800CB24
		ADDS	R4, R4,	#1
		CMP	R4, #8
		BCC	loc_800E160
		POP	{R4,PC}
@ End of function sub_800E15C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E174:				@ CODE XREF: ROM:0800D8B6p
					@ sub_800DA68:loc_800DAF8p ...
		LDR	R0, =0x200001A0
		PUSH	{LR}
		LDRB	R1, [R0,#1]
		SUBS	R1, R1,	#1
		STRB	R1, [R0,#1]
		LSLS	R1, R1,	#0x18
		IT eq
		BLEQ	sub_800CD2A
		POP	{PC}
@ End of function sub_800E174


@ =============== S U B	R O U T	I N E =======================================


sub_800E188:				@ CODE XREF: ROM:0800D86Ep
					@ sub_800DA68:loc_800DA8Ep ...
		PUSH	{LR}
		BL	sub_800CD36
		LDR	R0, =0x200001A0
		LDRB	R1, [R0,#1]
		ADDS	R1, R1,	#1
		STRB	R1, [R0,#1]
		POP	{PC}
@ End of function sub_800E188

@ ---------------------------------------------------------------------------
dword_800E198:	.long 0x200001A0	@ DATA XREF: sub_800E174r
					@ sub_800E188+6r

@ =============== S U B	R O U T	I N E =======================================


sub_800E19C:				@ CODE XREF: sub_800DA30+22p
					@ sub_800DF90+4Cp ...
		LDR	R1, =0x200004BC
		ADDS.W	R0, R1,	R0,LSL#3
		B.W	sub_800CB2C
@ End of function sub_800E19C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E1A8:				@ CODE XREF: sub_800DA68:loc_800DADEp
					@ sub_800DB04+26p ...
		LDR	R1, =0x200004BC
		ADDS.W	R0, R1,	R0,LSL#3
		B.W	sub_800CBC8
@ End of function sub_800E1A8

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E1B4:				@ CODE XREF: sub_800DA68+70p
					@ sub_800DB04+1Ep
		LDR	R2, =0x200004BC
		ADDS	R1, R1,	#1
		ADDS.W	R0, R2,	R0,LSL#3
		B.W	sub_800CBF4
@ End of function sub_800E1B4

@ ---------------------------------------------------------------------------
dword_800E1C0:	.long 0x200004BC	@ DATA XREF: sub_800E15C:loc_800E160r
					@ sub_800E19Cr	...

@ =============== S U B	R O U T	I N E =======================================


sub_800E1C4:				@ CODE XREF: sub_800D9F4+14p
					@ sub_800DB38+72p ...
		CMP	R0, #0
		BNE	sub_800E1C4
		BX	LR
@ End of function sub_800E1C4

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E1CC:				@ CODE XREF: sub_800E650+38p
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_800E1D4
@ ---------------------------------------------------------------------------

loc_800E1D2:				@ CODE XREF: sub_800E1CC+10j
		ADDS	R0, R0,	#1

loc_800E1D4:				@ CODE XREF: sub_800E1CC+4j
		MOVS	R2, R1
		LDRB	R2, [R2]
		ADDS	R1, R1,	#1
		CMP	R2, #0
		BNE	loc_800E1D2
		BX	LR
@ End of function sub_800E1CC


@ =============== S U B	R O U T	I N E =======================================


sub_800E1E0:				@ CODE XREF: sub_800E280+E4p
					@ sub_800E3CC+74p
		MOVS	R1, R0
		MOVS	R0, #0
		B	loc_800E1EE
@ ---------------------------------------------------------------------------

loc_800E1E6:				@ CODE XREF: sub_800E1E0+10j
		LSLS	R2, R1,	#0x1F
		IT mi
		ADDMI	R0, R0,	#1
		LSRS	R1, R1,	#1

loc_800E1EE:				@ CODE XREF: sub_800E1E0+4j
		CMP	R1, #0
		BNE	loc_800E1E6
		BX	LR
@ End of function sub_800E1E0


@ =============== S U B	R O U T	I N E =======================================


sub_800E1F4:				@ CODE XREF: sub_800E280+AAp
					@ sub_800E3CC+E4p
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		PUSH	{R4,LR}
		MLA.W	R0, R0,	R1, R2
		LDRB	R2, [R0,#4]
		CMP	R2, #1
		BEQ	loc_800E230
		CMP	R2, #3
		BNE	loc_800E238
		LDRH	R4, [R0,#2]
		BL	sub_800E0F4
		CBNZ	R0, loc_800E222
		MOVS.W	R0, #0x100
		CMP	R4, R0
		BCC	loc_800E21C
		MOVS	R4, #0xFF
		B	loc_800E23A
@ ---------------------------------------------------------------------------

loc_800E21C:				@ CODE XREF: sub_800E1F4+22j
		CBNZ	R4, loc_800E23A
		MOVS	R4, #8
		B	loc_800E23A
@ ---------------------------------------------------------------------------

loc_800E222:				@ CODE XREF: sub_800E1F4+1Aj
		CMP	R4, #0x11
		BCC	loc_800E22A

loc_800E226:				@ CODE XREF: sub_800E1F4+40j
		MOVS	R4, #0x10
		B	loc_800E23A
@ ---------------------------------------------------------------------------

loc_800E22A:				@ CODE XREF: sub_800E1F4+30j
		CBNZ	R4, loc_800E23A
		MOVS	R4, #4
		B	loc_800E23A
@ ---------------------------------------------------------------------------

loc_800E230:				@ CODE XREF: sub_800E1F4+Ej
		LDRH	R4, [R0,#2]
		CMP	R4, #0x11
		BCS	loc_800E226
		CBNZ	R4, loc_800E23A

loc_800E238:				@ CODE XREF: sub_800E1F4+12j
		MOVS	R4, #1

loc_800E23A:				@ CODE XREF: sub_800E1F4+26j
					@ sub_800E1F4:loc_800E21Cj ...
		UXTB	R0, R4
		POP	{R4,PC}
@ End of function sub_800E1F4

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800E240:				@ CODE XREF: sub_800E280+12p
					@ sub_800E3CC+12p ...
		MOVS	R3, #0
		STR	R3, [R0]
		STR	R1, [R0,#8]
		STR	R2, [R0,#4]
		BX	LR
@ End of function sub_800E240

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E24C:				@ CODE XREF: sub_800E268+8p
					@ sub_800E268+14p ...
		LDR	R2, [R0]
		LDR	R3, [R0,#4]
		CMP	R2, R3
		BCS	loc_800E260
		LDR	R3, [R0,#8]
		STRB	R1, [R3,R2]
		LDR	R1, [R0]
		ADDS	R1, R1,	#1
		STR	R1, [R0]
		BX	LR
@ ---------------------------------------------------------------------------

loc_800E260:				@ CODE XREF: sub_800E24C+6j
		MOVS	R0, #4
		B.W	sub_800E1C4
@ End of function sub_800E24C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E268:				@ CODE XREF: sub_800E280+2Ap
					@ sub_800E280+A4p ...
		PUSH	{R4,R5,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		UXTB	R1, R1
		BL	sub_800E24C
		LSRS	R1, R5,	#8
		MOVS	R0, R4
		POP.W	{R4,R5,LR}
		B	sub_800E24C
@ End of function sub_800E268

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800E280:				@ CODE XREF: sub_800E700:loc_800E72Ep
		PUSH.W	{R0-R2,R4-R9,LR}
		LDR	R0, =0x200004FC
		MOVS.W	R2, #0x100
		MOVS	R4, #0
		MOV	R8, R0
		MOV	R1, R8
		MOV	R0, SP
		BL	sub_800E240
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E268
		LDR	R0, =0x20000450
		MOV	R9, R0
		LDRB.W	R1, [R9,#1]
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0xC0
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0x32
		MOV	R0, SP
		BL	sub_800E24C
		B	loc_800E342
@ ---------------------------------------------------------------------------

loc_800E2DE:				@ CODE XREF: sub_800E280+BEj
		LDRH	R0, [R5]
		MOVS	R1, #1
		LSLS	R1, R6
		TST	R0, R1
		BEQ	loc_800E336
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #5
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R7, R6,	R0, R1
		MOV	R0, SP
		LDRB	R1, [R7,#5]
		BL	sub_800E24C
		LDRB	R1, [R7,#4]
		MOV	R0, SP
		BL	sub_800E24C
		BL	sub_800E0F4
		CBNZ	R0, loc_800E320
		LDRH	R0, [R7]
		CMP	R0, #0x41
		ITT cs
		MOVCS	R0, #0x40
		STRHCS	R0, [R7]

loc_800E320:				@ CODE XREF: sub_800E280+94j
		LDRH	R1, [R7]
		MOV	R0, SP
		BL	sub_800E268
		MOVS	R0, R6
		BL	sub_800E1F4
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800E24C

loc_800E336:				@ CODE XREF: sub_800E280+66j
		ADDS	R6, R6,	#1

loc_800E338:				@ CODE XREF: sub_800E280+13Ej
		LDRB.W	R0, [R9]
		CMP	R6, R0
		BLT	loc_800E2DE
		ADDS	R4, R4,	#1

loc_800E342:				@ CODE XREF: sub_800E280+5Cj
		LDRB.W	R0, [R9,#1]
		CMP	R4, R0
		BGE	loc_800E3C0
		LDR.W	R2, [R9,#0x64]
		CBZ	R2, loc_800E358
		MOV	R1, SP
		MOVS	R0, R4
		LDR	R2, [R2,#4]
		BLX	R2

loc_800E358:				@ CODE XREF: sub_800E280+CEj
		MOVS	R0, #0x14
		MLA.W	R5, R4,	R0, R9
		LDRH.W	R0, [R5,#8]!
		LSRS	R0, R0,	#1
		BL	sub_800E1E0
		MOVS	R6, R0
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800E24C
		UXTB	R1, R4
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		UXTB	R1, R6
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#2]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#3]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R1, [R5,#8]
		MOVS	R0, R1
		ITT ne
		MOVNE	R0, SP
		BLXNE	R1
		MOVS	R6, #1
		B	loc_800E338
@ ---------------------------------------------------------------------------

loc_800E3C0:				@ CODE XREF: sub_800E280+C8j
		LDR	R0, [SP,#0]
		STRB.W	R0, [R8,#2]
		MOV	R0, R8
		POP.W	{R1-R9,PC}
@ End of function sub_800E280


@ =============== S U B	R O U T	I N E =======================================


sub_800E3CC:				@ CODE XREF: sub_800E700+4Ep
		PUSH.W	{R0-R2,R4-R9,LR}
		LDR	R0, =0x200004FC
		MOVS.W	R2, #0x100
		MOVS	R4, #0
		MOV	R8, R0
		MOV	R1, R8
		MOV	R0, SP
		BL	sub_800E240
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E268
		LDR	R0, =0x20000450
		MOV	R9, R0
		LDRB.W	R1, [R9,#1]
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0xC0
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0x32
		MOV	R0, SP
		BL	sub_800E24C
		B	loc_800E42C
@ ---------------------------------------------------------------------------

loc_800E42A:				@ CODE XREF: sub_800E3CC+F8j
		ADDS	R4, R4,	#1

loc_800E42C:				@ CODE XREF: sub_800E3CC+5Cj
		LDRB.W	R0, [R9,#1]
		CMP	R4, R0
		BGE	loc_800E512
		MOVS	R0, #0x14
		MLA.W	R5, R4,	R0, R9
		LDRH.W	R0, [R5,#8]!
		LSRS	R0, R0,	#1
		BL	sub_800E1E0
		MOVS	R6, R0
		MOVS	R1, #9
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800E24C
		UXTB	R1, R4
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		UXTB	R1, R6
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#2]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#3]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R1, [R5,#8]
		MOVS	R0, R1
		ITT ne
		MOVNE	R0, SP
		BLXNE	R1
		MOVS	R6, #1
		B	loc_800E4BE
@ ---------------------------------------------------------------------------

loc_800E49C:				@ CODE XREF: sub_800E3CC+132j
		LDRB	R1, [R7,#4]
		LDRH	R0, [R7]
		MOVS	R2, #0

loc_800E4A2:				@ CODE XREF: sub_800E3CC+144j
		BL	sub_800E0D0
		UXTH	R1, R0
		MOV	R0, SP
		BL	sub_800E268
		MOVS	R0, R6
		BL	sub_800E1F4
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800E24C

loc_800E4BC:				@ CODE XREF: sub_800E3CC+102j
		ADDS	R6, R6,	#1

loc_800E4BE:				@ CODE XREF: sub_800E3CC+CEj
		LDRB.W	R0, [R9]
		CMP	R6, R0
		BGE	loc_800E42A
		LDRH	R0, [R5]
		MOVS	R1, #1
		LSLS	R1, R6
		TST	R0, R1
		BEQ	loc_800E4BC
		MOVS	R1, #7
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #5
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R1, =0x20000310
		MOVS	R0, #0x28
		MLA.W	R7, R6,	R0, R1
		MOV	R0, SP
		LDRB	R1, [R7,#5]
		BL	sub_800E24C
		LDRB	R1, [R7,#4]
		MOV	R0, SP
		BL	sub_800E24C
		BL	sub_800E0F4
		CMP	R0, #0
		BNE	loc_800E49C
		LDR.W	R1, [R9,#0x5C]
		UXTB	R0, R6
		LDR	R1, [R1,#0x14]
		BLX	R1
		LDRB	R1, [R7,#4]
		MOVS	R2, #1
		UXTH	R0, R0
		B	loc_800E4A2
@ ---------------------------------------------------------------------------

loc_800E512:				@ CODE XREF: sub_800E3CC+66j
		LDR	R0, [SP,#0]
		STRB.W	R0, [R8,#2]
		MOV	R0, R8
		POP.W	{R1-R9,PC}
@ End of function sub_800E3CC

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800E520:	.long 0x20000310	@ DATA XREF: sub_800E1F4r
					@ sub_800E280+78r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800E524:				@ CODE XREF: sub_800E700:loc_800E728p
		PUSH	{R0-R2,R4,R5,LR}
		LDR	R5, =0x20000450
		LDR	R4, =0x200004FC
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_800E240
		MOVS	R1, #0x12
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS.W	R1, #0x200
		MOV	R0, SP
		BL	sub_800E268
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#5]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#6]
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R0, =0x20000310
		LDRH	R1, [R0]
		MOV	R0, SP
		UXTB	R1, R1
		BL	sub_800E24C
		BL	sub_800C3B0
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800E268
		BL	sub_800C3B8
		MOVS	R1, R0
		MOV	R0, SP
		BL	sub_800E268
		MOVS.W	R1, #0x100
		MOV	R0, SP
		BL	sub_800E268
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #1
		B	loc_800E610
@ End of function sub_800E524

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E5B4:				@ CODE XREF: sub_800E700+42p
		PUSH	{R0-R2,R4,R5,LR}
		LDR	R5, =0x20000450
		LDR	R4, =0x200004FC
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_800E240
		MOVS	R1, #0xA
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #6
		MOV	R0, SP
		BL	sub_800E24C
		MOVS.W	R1, #0x200
		MOV	R0, SP
		BL	sub_800E268
		LDRB	R1, [R5,#4]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#5]
		MOV	R0, SP
		BL	sub_800E24C
		LDRB	R1, [R5,#6]
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R0, =0x20000310
		LDRH	R1, [R0]
		MOV	R0, SP
		UXTB	R1, R1
		BL	sub_800E24C
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #0
		NOP

loc_800E610:				@ CODE XREF: sub_800E524+8Cj
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R0, R4
		POP	{R1-R5,PC}
@ End of function sub_800E5B4

@ ---------------------------------------------------------------------------
		.align 4
dword_800E61C:	.long 0x20000450	@ DATA XREF: sub_800E280+2Er
					@ sub_800E3CC+2Er ...
dword_800E620:	.long 0x200004FC	@ DATA XREF: sub_800E280+4r
					@ sub_800E3CC+4r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800E624:				@ CODE XREF: sub_800E650:loc_800E67Cp

@ FUNCTION CHUNK AT 0800C3C0 SIZE 00000006 BYTES
@ FUNCTION CHUNK AT 0800C3C8 SIZE 00000006 BYTES
@ FUNCTION CHUNK AT 0800C3D0 SIZE 00000004 BYTES

		CMP	R0, #1
		BEQ	loc_800E636
		CMP	R0, #2
		BEQ	loc_800E63A
		CMP	R0, #3
		BEQ	loc_800E63E
		CMP	R0, #0xEE
		BEQ	loc_800E642
		B	loc_800E646
@ ---------------------------------------------------------------------------

loc_800E636:				@ CODE XREF: sub_800E624+2j
		B.W	loc_800C3C0
@ ---------------------------------------------------------------------------

loc_800E63A:				@ CODE XREF: sub_800E624+6j
		B.W	loc_800C3C8
@ ---------------------------------------------------------------------------

loc_800E63E:				@ CODE XREF: sub_800E624+Aj
		B.W	loc_800C3D0
@ ---------------------------------------------------------------------------

loc_800E642:				@ CODE XREF: sub_800E624+Ej
		ADR	R0, dword_800E64C
		BX	LR
@ ---------------------------------------------------------------------------

loc_800E646:				@ CODE XREF: sub_800E624+10j
		MOVS	R0, #0
		BX	LR
@ End of function sub_800E624

@ ---------------------------------------------------------------------------
		.align 4
dword_800E64C:	.long 0			@ DATA XREF: sub_800E624:loc_800E642o

@ =============== S U B	R O U T	I N E =======================================


sub_800E650:				@ CODE XREF: sub_800E700+36p
		PUSH	{R0-R2,R4-R7,LR}
		LDR	R4, =0x200004FC
		CBNZ	R0, loc_800E67C
		MOVS.W	R2, #0x100
		MOV	R0, SP
		MOVS	R1, R4
		BL	sub_800E240
		MOVS	R1, #4
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800E24C
		LDR	R1, =0x409
		MOV	R0, SP
		BL	sub_800E268
		B	loc_800E6C0
@ ---------------------------------------------------------------------------

loc_800E67C:				@ CODE XREF: sub_800E650+4j
		BL	sub_800E624
		MOVS	R5, R0
		ITT eq
		MOVEQ	R0, #0
		POPEQ	{R1-R7,PC}
		BL	sub_800E1CC
		MOVS	R6, R0
		MOVS.W	R2, #0x100
		MOVS	R1, R4
		MOV	R0, SP
		BL	sub_800E240
		LSLS	R1, R6,	#1
		ADDS	R1, R1,	#2
		UXTB	R1, R1
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R1, #3
		MOV	R0, SP
		BL	sub_800E24C
		MOVS	R7, #0
		B	loc_800E6BC
@ ---------------------------------------------------------------------------

loc_800E6B2:				@ CODE XREF: sub_800E650+6Ej
		LDRB	R1, [R5,R7]
		MOV	R0, SP
		ADDS	R7, R7,	#1
		BL	sub_800E268

loc_800E6BC:				@ CODE XREF: sub_800E650+60j
		CMP	R7, R6
		BCC	loc_800E6B2

loc_800E6C0:				@ CODE XREF: sub_800E650+2Aj
		MOVS	R0, R4
		POP	{R1-R7,PC}
@ End of function sub_800E650

@ ---------------------------------------------------------------------------
dword_800E6C4:	.long 0x409		@ DATA XREF: sub_800E650+22r
dword_800E6C8:	.long 0x200004FC	@ DATA XREF: sub_800E650+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800E6CC:				@ CODE XREF: sub_800E804+82p
					@ sub_800E8FC+30p
		LDR	R1, =0x200004AC
		PUSH	{LR}
		LDR	R1, [R1]
		LDR	R1, [R1,#0x3C]
		MOVS	R2, R1
		IT ne
		BLXNE	R1
		POP	{PC}
@ End of function sub_800E6CC


@ =============== S U B	R O U T	I N E =======================================

@ Attributes: thunk

sub_800E6DC:				@ CODE XREF: sub_800E6E0+6j
					@ sub_800E700+6Ep ...
		B.W	sub_800DD84
@ End of function sub_800E6DC


@ =============== S U B	R O U T	I N E =======================================


sub_800E6E0:				@ CODE XREF: sub_800E6E8+4p
					@ sub_800E804:loc_800E84Ap ...
		MOVS	R2, #1
		MOVS	R1, #0
		MOVS	R0, #1
		B	sub_800E6DC
@ End of function sub_800E6E0


@ =============== S U B	R O U T	I N E =======================================


sub_800E6E8:				@ CODE XREF: sub_800E9A4+6Cp
		PUSH	{R4,LR}
		MOVS	R4, R0
		BL	sub_800E6E0
		LDR	R0, =0x20000453
		ORRS.W	R1, R4,	#0x80
		STRB	R1, [R0]
		POP	{R4,PC}
@ End of function sub_800E6E8

@ ---------------------------------------------------------------------------
		.align 4
dword_800E6FC:	.long 0x20000453	@ DATA XREF: sub_800E6E8+8r

@ =============== S U B	R O U T	I N E =======================================


sub_800E700:				@ CODE XREF: sub_800E9A4+74p
		MOVS	R1, R0
		PUSH	{R4,R5,LR}
		LDRB	R2, [R1,#7]
		LDRB	R3, [R1,#6]
		MOVS	R5, #0
		MOVS	R0, #0
		ORRS.W	R4, R3,	R2,LSL#8
		LDRB	R2, [R1,#3]
		CMP	R2, #1
		BEQ	loc_800E728
		CMP	R2, #2
		BEQ	loc_800E72E
		CMP	R2, #3
		BEQ	loc_800E734
		CMP	R2, #6
		BEQ	loc_800E73C
		CMP	R2, #7
		BEQ	loc_800E748
		B	loc_800E754
@ ---------------------------------------------------------------------------

loc_800E728:				@ CODE XREF: sub_800E700+14j
		BL	sub_800E524
		B	loc_800E754
@ ---------------------------------------------------------------------------

loc_800E72E:				@ CODE XREF: sub_800E700+18j
		BL	sub_800E280
		B	loc_800E752
@ ---------------------------------------------------------------------------

loc_800E734:				@ CODE XREF: sub_800E700+1Cj
		LDRB	R0, [R1,#2]
		BL	sub_800E650
		B	loc_800E754
@ ---------------------------------------------------------------------------

loc_800E73C:				@ CODE XREF: sub_800E700+20j
		BL	sub_800E0E0
		CBZ	R0, loc_800E756
		BL	sub_800E5B4
		B	loc_800E752
@ ---------------------------------------------------------------------------

loc_800E748:				@ CODE XREF: sub_800E700+24j
		BL	sub_800E0E0
		CBZ	R0, loc_800E756
		BL	sub_800E3CC

loc_800E752:				@ CODE XREF: sub_800E700+32j
					@ sub_800E700+46j
		LDRB	R5, [R0,#2]

loc_800E754:				@ CODE XREF: sub_800E700+26j
					@ sub_800E700+2Cj ...
		CBNZ	R0, loc_800E760

loc_800E756:				@ CODE XREF: sub_800E700+40j
					@ sub_800E700+4Cj
		LDR	R0, =0x200004AC
		LDR	R0, [R0]
		LDR	R0, [R0,#0x24]
		BLX	R0
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_800E760:				@ CODE XREF: sub_800E700:loc_800E754j
		CBNZ	R5, loc_800E764
		LDRB	R5, [R0]

loc_800E764:				@ CODE XREF: sub_800E700:loc_800E760j
		CMP	R5, R4
		IT cs
		MOVCS	R5, R4
		MOVS	R2, #1
		MOVS	R1, R5
		BL	sub_800E6DC
		POP	{R4,R5,PC}
@ End of function sub_800E700

@ ---------------------------------------------------------------------------
dword_800E774:	.long 0x200004AC	@ DATA XREF: sub_800E6CCr
					@ sub_800E700:loc_800E756r

@ =============== S U B	R O U T	I N E =======================================


sub_800E778:				@ CODE XREF: sub_800E9A4+54p
		LDR	R2, =0x20000450
		PUSH	{R0,R4,R5,LR}
		LDRB	R3, [R0,#3]
		LDRB	R1, [R0,#2]
		LDR	R5, [R2,#0x5C]
		ORRS.W	R1, R1,	R3,LSL#8
		BNE	loc_800E794
		LDRB	R3, [R0,#7]
		LDRB	R1, [R0,#6]
		ORRS.W	R1, R1,	R3,LSL#8
		CMP	R1, #2
		BEQ	loc_800E79A

loc_800E794:				@ CODE XREF: sub_800E778+Ej
					@ sub_800E778+26j ...
		LDR	R0, [R5,#0x24]
		BLX	R0
		POP	{R0,R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_800E79A:				@ CODE XREF: sub_800E778+1Aj
		LDRB	R1, [R2,#7]
		LSLS	R1, R1,	#0x1D
		BPL	loc_800E794
		LDRB	R1, [R0,#4]
		LDRB	R0, [R0]
		LDRB	R2, [R2,#7]
		MOVS	R4, #0
		LSLS	R0, R0,	#0x1E
		LSRS	R0, R0,	#0x1E
		LSLS	R2, R2,	#0x1E
		BMI	loc_800E7C8
		CMP	R0, #1
		BLS	loc_800E7BA
		SUBS	R0, R0,	#2
		BEQ	loc_800E7C2
		POP	{R0,R4,R5,PC}
@ ---------------------------------------------------------------------------

loc_800E7BA:				@ CODE XREF: sub_800E778+3Aj
					@ sub_800E778+4Cj ...
		MOVS	R0, #0
		STRB.W	R0, [SP,#0]
		B	loc_800E7F4
@ ---------------------------------------------------------------------------

loc_800E7C2:				@ CODE XREF: sub_800E778+3Ej
		CMP	R1, #0
		BEQ	loc_800E7BA
		B	loc_800E794
@ ---------------------------------------------------------------------------

loc_800E7C8:				@ CODE XREF: sub_800E778+36j
		CBZ	R0, loc_800E7D4
		CMP	R0, #1
		BEQ	loc_800E7BA
		CMP	R0, #2
		BEQ	loc_800E7DC
		B	loc_800E7F4
@ ---------------------------------------------------------------------------

loc_800E7D4:				@ CODE XREF: sub_800E778:loc_800E7C8j
		MOVS	R0, #1
		STRB.W	R0, [SP,#0]
		B	loc_800E7F4
@ ---------------------------------------------------------------------------

loc_800E7DC:				@ CODE XREF: sub_800E778+58j
		MOVS	R0, R1
		BL	sub_800DBCC
		CMP	R0, #0xFF
		BEQ	loc_800E794
		LDR	R2, =0x20000310
		MOVS	R1, #0x28
		MLA.W	R0, R0,	R1, R2
		LDRB	R0, [R0,#0x10]
		STRB.W	R0, [SP,#0]

loc_800E7F4:				@ CODE XREF: sub_800E778+48j
					@ sub_800E778+5Aj ...
		STRB.W	R4, [SP,#1]
		MOVS	R2, #0
		MOVS	R1, #2
		MOV	R0, SP
		BL	sub_800E6DC
		POP	{R0,R4,R5,PC}
@ End of function sub_800E778


@ =============== S U B	R O U T	I N E =======================================


sub_800E804:				@ CODE XREF: sub_800E890+2j
					@ sub_800E894+2j
		PUSH	{R4-R7,LR}
		MOVS	R2, R0
		LDRB	R0, [R2,#2]
		LDRB	R3, [R2,#3]
		MOVS	R4, R1
		LDR	R1, =0x20000450
		UXTB	R6, R4
		ORRS.W	R0, R0,	R3,LSL#8
		LDR	R5, [R1,#0x5C]
		BNE	loc_800E824
		LDRB	R3, [R2,#7]
		LDRB	R0, [R2,#6]
		ORRS.W	R0, R0,	R3,LSL#8
		BEQ	loc_800E82A

loc_800E824:				@ CODE XREF: sub_800E804+14j
					@ sub_800E804+2Aj ...
		LDR	R0, [R5,#0x24]
		BLX	R0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800E82A:				@ CODE XREF: sub_800E804+1Ej
		LDRB	R0, [R1,#7]
		LSLS	R0, R0,	#0x1D
		BPL	loc_800E824
		LDRB	R0, [R2,#4]
		LDRB	R2, [R2]
		LDRB	R1, [R1,#7]
		LSLS	R2, R2,	#0x1E
		LSRS	R2, R2,	#0x1E
		LSLS	R1, R1,	#0x1E
		BMI	loc_800E868
		CBZ	R2, loc_800E84A
		CMP	R2, #1
		BEQ	loc_800E824
		CMP	R2, #2
		BEQ	loc_800E850
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800E84A:				@ CODE XREF: sub_800E804+3Aj
					@ sub_800E804+62j ...
		BL	sub_800E6E0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800E850:				@ CODE XREF: sub_800E804+42j
		BL	sub_800DBCC
		MOVS	R7, R0
		BNE	loc_800E824
		LDR	R0, =0x20000310
		CMP	R4, #0
		ITTEE eq
		MOVEQ	R1, #0
		STRBEQ	R1, [R0,#0x10]
		MOVNE	R1, #1
		STRBNE	R1, [R0,#0x10]
		B	loc_800E84A
@ ---------------------------------------------------------------------------

loc_800E868:				@ CODE XREF: sub_800E804+38j
		CMP	R2, #0
		BEQ	loc_800E84A
		CMP	R2, #2
		BNE	loc_800E824
		BL	sub_800DBCC
		MOVS	R7, R0
		CMP	R7, #0xFF
		BEQ	loc_800E824
		MOVS	R1, R6
		BL	sub_800DFE8
		CMP	R6, #0
		BNE	loc_800E84A
		MOVS	R0, R7
		BL	sub_800E6CC
		B	loc_800E84A
@ End of function sub_800E804

@ ---------------------------------------------------------------------------
dword_800E88C:	.long 0x20000310	@ DATA XREF: sub_800E524+44r
					@ sub_800E5B4+44r ...

@ =============== S U B	R O U T	I N E =======================================


sub_800E890:				@ CODE XREF: sub_800E9A4+5Cp
		MOVS	R1, #0
		B	sub_800E804
@ End of function sub_800E890


@ =============== S U B	R O U T	I N E =======================================


sub_800E894:				@ CODE XREF: sub_800E9A4+64p
		MOVS	R1, #1
		B	sub_800E804
@ End of function sub_800E894


@ =============== S U B	R O U T	I N E =======================================


sub_800E898:				@ CODE XREF: sub_800E9A4:loc_800EA1Ep
		PUSH	{R0,LR}
		BL	sub_800DC0C
		MOVS	R2, #0
		STRB.W	R0, [SP,#0]
		B	loc_800E8D4
@ End of function sub_800E898

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800E8A8:				@ CODE XREF: sub_800E9A4+8Ap
		LDR	R1, =0x20000450
		PUSH	{R0,LR}
		LDRB	R3, [R0,#2]
		LDR	R2, [R1,#0x5C]
		CBNZ	R3, loc_800E8B8
		LDRB	R0, [R0,#6]
		CMP	R0, #1
		BEQ	loc_800E8BA

loc_800E8B8:				@ CODE XREF: sub_800E8A8+8j
		B	loc_800E8C4
@ ---------------------------------------------------------------------------

loc_800E8BA:				@ CODE XREF: sub_800E8A8+Ej
		LDRB	R0, [R1,#7]
		ANDS.W	R0, R0,	#6
		CMP	R0, #6
		BEQ	loc_800E8CA

loc_800E8C4:				@ CODE XREF: sub_800E8A8:loc_800E8B8j
		LDR	R0, [R2,#0x24]
		BLX	R0
		POP	{R0,PC}
@ ---------------------------------------------------------------------------

loc_800E8CA:				@ CODE XREF: sub_800E8A8+1Aj
		MOVS	R0, #0
		STRB.W	R0, [SP,#0]
		MOVS	R2, #0
		NOP

loc_800E8D4:				@ CODE XREF: sub_800E898+Cj
		MOVS	R1, #1
		MOV	R0, SP
		BL	sub_800E6DC
		POP	{R0,PC}
@ End of function sub_800E8A8

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800E8E0:				@ CODE XREF: sub_800E9A4+92p
		LDR	R1, =0x20000450
		LDRB	R0, [R0,#4]
		LDR	R2, [R1,#0x5C]
		LDRB	R3, [R1,#7]
		ANDS.W	R3, R3,	#6
		CMP	R3, #6
		BEQ	loc_800E8F4
		LDR	R0, [R2,#0x24]
		BX	R0
@ ---------------------------------------------------------------------------

loc_800E8F4:				@ CODE XREF: sub_800E8E0+Ej
		LDRB	R1, [R1,#1]
		LDR	R2, [R2,#0x24]
		CMP	R1, R0
		BX	R2
@ End of function sub_800E8E0


@ =============== S U B	R O U T	I N E =======================================


sub_800E8FC:				@ CODE XREF: sub_800E9A4+82p
		PUSH	{R0,R4-R6,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R0,#2]
		STRB.W	R0, [SP,#0]
		LDR	R0, [R4,#0x5C]
		LDRB.W	R1, [SP,#0]
		MOVS	R5, R0
		CMP	R1, #1
		BNE	loc_800E944
		BL	sub_800E6E0
		LDRB	R0, [R4,#7]
		MOVS	R6, #1
		ORRS.W	R0, R0,	#2
		BL	sub_800E094
		B	loc_800E93A
@ ---------------------------------------------------------------------------

loc_800E924:				@ CODE XREF: sub_800E8FC+44j
		MOVS	R1, #0
		BL	sub_800DFE8
		MOVS	R0, R6
		BL	sub_800E6CC
		MOVS	R0, R6
		BL	sub_800E128
		ADDS	R6, R6,	#1
		UXTB	R6, R6

loc_800E93A:				@ CODE XREF: sub_800E8FC+26j
		LDRB	R1, [R4]
		MOVS	R0, R6
		CMP	R0, R1
		BCC	loc_800E924
		B	loc_800E954
@ ---------------------------------------------------------------------------

loc_800E944:				@ CODE XREF: sub_800E8FC+14j
		CBNZ	R1, loc_800E962
		BL	sub_800E6E0
		LDRB	R0, [R4,#7]
		ANDS.W	R0, R0,	#0xFD
		BL	sub_800E094

loc_800E954:				@ CODE XREF: sub_800E8FC+46j
		LDR	R2, [R5,#0x40]
		MOVS	R0, R2
		BEQ	locret_800E966
		MOV	R1, SP
		MOVS	R0, #0
		BLX	R2
		POP	{R0,R4-R6,PC}
@ ---------------------------------------------------------------------------

loc_800E962:				@ CODE XREF: sub_800E8FC:loc_800E944j
		LDR	R0, [R0,#0x24]
		BLX	R0

locret_800E966:				@ CODE XREF: sub_800E8FC+5Cj
		POP	{R0,R4-R6,PC}
@ End of function sub_800E8FC

@ ---------------------------------------------------------------------------
dword_800E968:	.long 0x20000450	@ DATA XREF: sub_800E8FC+2r

@ =============== S U B	R O U T	I N E =======================================


sub_800E96C:				@ CODE XREF: sub_800DF90:loc_800DFE0p
		PUSH	{R4,R5,LR}
		LDR	R4, =0x20000450
		LDRB	R0, [R4,#3]
		LSLS	R0, R0,	#0x18
		BPL	locret_800E9A2
		LDRB	R0, [R4,#3]
		LSLS	R0, R0,	#0x19
		LSRS	R0, R0,	#0x19
		STRB	R0, [R4,#3]
		LDRB	R5, [R4,#3]
		LDR	R1, [R4,#0x5C]
		MOVS	R0, R5
		LDR	R1, [R1,#0x1C]
		BLX	R1
		LDRB	R0, [R4,#7]
		CMP	R5, #0
		BEQ	loc_800E99A
		ORRS.W	R0, R0,	#4
		POP.W	{R4,R5,LR}
		B.W	sub_800E094
@ ---------------------------------------------------------------------------

loc_800E99A:				@ CODE XREF: sub_800E96C+20j
		ANDS.W	R0, R0,	#0xFB
		BL	sub_800E094

locret_800E9A2:				@ CODE XREF: sub_800E96C+8j
		POP	{R4,R5,PC}
@ End of function sub_800E96C


@ =============== S U B	R O U T	I N E =======================================


sub_800E9A4:				@ CODE XREF: sub_800D69C+28p
		PUSH.W	{R4-R7,R9,LR}
		LDR	R5, =0x20000450
		MOVS	R4, R0
		MOVS	R7, #0
		LDRB	R6, [R5,#1]
		B	loc_800E9CA
@ ---------------------------------------------------------------------------

loc_800E9B2:				@ CODE XREF: sub_800E9A4+28j
		MOVS	R0, #0x14
		MLA.W	R0, R7,	R0, R5
		ADDS	R0, #8
		LDR	R1, [R0,#0x10]
		MOVS	R0, R1
		BEQ	loc_800E9C8
		MOVS	R0, R4
		BLX	R1
		CMP	R0, #0
		BEQ	locret_800EA64

loc_800E9C8:				@ CODE XREF: sub_800E9A4+1Aj
		ADDS	R7, R7,	#1

loc_800E9CA:				@ CODE XREF: sub_800E9A4+Cj
		CMP	R7, R6
		BCC	loc_800E9B2
		LDR	R0, [R5,#0x5C]
		MOV	R9, R0
		LDRB	R0, [R4]
		ANDS.W	R0, R0,	#0x60
		BEQ	loc_800E9E0
		CMP	R0, #0x20
		BEQ	loc_800EA44
		B	def_800E9E6	@ jumptable 0800E9E6 default case
@ ---------------------------------------------------------------------------

loc_800E9E0:				@ CODE XREF: sub_800E9A4+34j
		LDRB	R0, [R4,#1]
		CMP	R0, #0xB	@ switch 12 cases
		BHI	def_800E9E6	@ jumptable 0800E9E6 default case
		TBB.W	[PC,R0]		@ switch jump
@ ---------------------------------------------------------------------------
jpt_800E9E6:	.byte 6			@ jump table for switch	statement
		.byte 0xA
		.byte 0x29
		.byte 0xE
		.byte 0x29
		.byte 0x12
		.byte 0x16
		.byte 0x29
		.byte 0x1A
		.byte 0x1D
		.byte 0x21
		.byte 0x25
@ ---------------------------------------------------------------------------

loc_800E9F6:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 0
		BL	sub_800E778
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800E9FE:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 1
		BL	sub_800E890
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA06:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 3
		BL	sub_800E894
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA0E:				@ CODE XREF: sub_800E9A4+42j
		LDRB	R0, [R4,#2]	@ jumptable 0800E9E6 case 5
		BL	sub_800E6E8
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA16:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 6
		BL	sub_800E700
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA1E:				@ CODE XREF: sub_800E9A4+42j
		BL	sub_800E898	@ jumptable 0800E9E6 case 8
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA24:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 9
		BL	sub_800E8FC
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA2C:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 10
		BL	sub_800E8A8
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA34:				@ CODE XREF: sub_800E9A4+42j
		MOVS	R0, R4		@ jumptable 0800E9E6 case 11
		BL	sub_800E8E0
		B	locret_800EA64
@ ---------------------------------------------------------------------------

def_800E9E6:				@ CODE XREF: sub_800E9A4+3Aj
					@ sub_800E9A4+40j ...
		LDR.W	R0, [R9,#0x24]	@ jumptable 0800E9E6 default case
		BLX	R0
		B	locret_800EA64
@ ---------------------------------------------------------------------------

loc_800EA44:				@ CODE XREF: sub_800E9A4+38j
		MOVS	R7, #0
		B	loc_800EA4A
@ ---------------------------------------------------------------------------

loc_800EA48:				@ CODE XREF: sub_800E9A4+B6j
					@ sub_800E9A4+BEj
		ADDS	R7, R7,	#1

loc_800EA4A:				@ CODE XREF: sub_800E9A4+A2j
		CMP	R7, R6
		BCS	def_800E9E6	@ jumptable 0800E9E6 default case
		MOVS	R0, #0x14
		MLA.W	R0, R7,	R0, R5
		ADDS	R0, #8
		LDR	R1, [R0,#0xC]
		MOVS	R0, R1
		BEQ	loc_800EA48
		MOVS	R0, R4
		BLX	R1
		CMP	R0, #0
		BNE	loc_800EA48

locret_800EA64:				@ CODE XREF: sub_800E9A4+22j
					@ sub_800E9A4+58j ...
		POP.W	{R4-R7,R9,PC}
@ End of function sub_800E9A4

@ ---------------------------------------------------------------------------
dword_800EA68:	.long 0x20000450	@ DATA XREF: sub_800E778r
					@ sub_800E804+Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800EA6C:				@ CODE XREF: sub_800B260+D8p
					@ sub_800B260+E0p
		LDR	R2, [R0]
		STRB.W	R1, [R2],#1
		STR	R2, [R0]
		BX	LR
@ End of function sub_800EA6C

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800EA78:				@ CODE XREF: sub_800B260+9Ep
					@ sub_800B260+A6p ...
		LDR	R2, [R0]
		STRB	R1, [R2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#1]
		ADDS	R2, R2,	#2
		STR	R2, [R0]
		BX	LR
@ End of function sub_800EA78

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800EA88:				@ CODE XREF: sub_800B260+C8p
					@ sub_800B260+D0p ...
		LDR	R2, [R0]
		STRB	R1, [R2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#1]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#2]
		LSRS	R1, R1,	#8
		STRB	R1, [R2,#3]
		ADDS	R2, R2,	#4
		STR	R2, [R0]
		BX	LR
@ End of function sub_800EA88

@ ---------------------------------------------------------------------------
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800EAA0:				@ CODE XREF: sub_800A198+7Ep
					@ sub_800AF8C+12p
		STRB	R1, [R0]
		LSRS	R1, R1,	#8
		STRB	R1, [R0,#1]
		LSRS	R1, R1,	#8
		STRB	R1, [R0,#2]
		LSRS	R1, R1,	#8
		STRB.W	R1, [R0,#3]!
		BX	LR
@ End of function sub_800EAA0

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800EAB4:				@ CODE XREF: sub_800AB3C+22p
		LDRB	R2, [R0,#1]
		LDRB	R1, [R0]
		ORRS.W	R1, R1,	R2,LSL#8
		LDRB	R2, [R0,#2]
		LDRB	R0, [R0,#3]
		ORRS.W	R1, R1,	R2,LSL#16
		ORRS.W	R0, R1,	R0,LSL#24
		BX	LR
@ End of function sub_800EAB4

@ ---------------------------------------------------------------------------
		.align 4
		PUSH	{LR}
		BL	sub_800CD36
		LDR	R0, =0x200001A0
		LDRB	R1, [R0,#1]
		ADDS	R1, R1,	#1
		STRB	R1, [R0,#1]
		BL	sub_800EB1C
		BL	sub_800D008
		BL	sub_800C9BC
		BL	sub_800CDC0
		LDR	R1, =0x968
		LDR	R0, =0x20000680
		LDR	R3, =(sub_80064E4+1)
		MOVS	R2, #2
		PUSH	{R0-R2}
		LDR	R1, =aMaintask	@ "MainTask"
		LDR	R0, =0x20000FE8
		MOVS	R2, #0x64
		BL	sub_800CA34
		BL	loc_800CCFC
@ ---------------------------------------------------------------------------
		POP	{R0-R2,PC}
@ ---------------------------------------------------------------------------
dword_800EB04:	.long 0x200001A0	@ DATA XREF: ROM:0800EAD2r
dword_800EB08:	.long 0x968		@ DATA XREF: ROM:0800EAEAr
dword_800EB0C:	.long 0x20000680	@ DATA XREF: ROM:0800EAECr
off_800EB10:	.long sub_80064E4+1	@ DATA XREF: ROM:0800EAEEr
off_800EB14:	.long aMaintask		@ DATA XREF: ROM:0800EAF4r
					@ "MainTask"
dword_800EB18:	.long 0x20000FE8	@ DATA XREF: ROM:0800EAF6r

@ =============== S U B	R O U T	I N E =======================================


sub_800EB1C:				@ CODE XREF: ROM:0800EADAp
		LDR	R3, =0x20001165
		BX	R3
@ End of function sub_800EB1C

@ ---------------------------------------------------------------------------
off_800EB20:	.long 0x20001165	@ DATA XREF: sub_800EB1Cr
@ ---------------------------------------------------------------------------

loc_800EB24:				@ CODE XREF: ROM:loc_800EB24j
		B	loc_800EB24
@ ---------------------------------------------------------------------------
		.align 4
		B.W	loc_800EB7C

@ =============== S U B	R O U T	I N E =======================================


sub_800EB2C:				@ CODE XREF: sub_800B6FC+5Ap
					@ sub_800B8A8+2Ep
		PUSH	{R4,LR}
		B	loc_800EB36
@ ---------------------------------------------------------------------------

loc_800EB30:				@ CODE XREF: sub_800EB2C+12j
		ADDS	R0, R0,	#1
		ADDS	R1, R1,	#1
		SUBS	R2, R2,	#1

loc_800EB36:				@ CODE XREF: sub_800EB2C+2j
		CBZ	R2, loc_800EB4C
		LDRB	R3, [R0]
		LDRB	R4, [R1]
		CMP	R3, R4
		BEQ	loc_800EB30
		BCS	loc_800EB48

loc_800EB42:				@ CODE XREF: ROM:0800F03Aj
		MOVS.W	R0, #0xFFFFFFFF
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800EB48:				@ CODE XREF: sub_800EB2C+14j
		MOVS	R0, #1
		POP	{R4,PC}
@ ---------------------------------------------------------------------------

loc_800EB4C:				@ CODE XREF: sub_800EB2C:loc_800EB36j
		MOVS	R0, #0
		POP	{R4,PC}
@ End of function sub_800EB2C


@ =============== S U B	R O U T	I N E =======================================


sub_800EB50:				@ CODE XREF: sub_800B7B0+9Ap
					@ ROM:0800C464p ...
		PUSH	{R4,LR}
		MOVS	R3, R0
		CMP	R2, #0
		B	loc_800EB62
@ ---------------------------------------------------------------------------

loc_800EB58:				@ CODE XREF: sub_800EB50:loc_800EB62j
		LDRB.W	R4, [R1],#1
		SUBS	R2, R2,	#1
		STRB.W	R4, [R3],#1

loc_800EB62:				@ CODE XREF: sub_800EB50+6j
		BNE	loc_800EB58
		POP	{R4,PC}
@ End of function sub_800EB50

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800EB68:				@ CODE XREF: sub_800951C+1796p
					@ sub_800AF8C+Ap ...
		UXTB	R1, R1
		MOVS	R3, R0
		CMP	R2, #0
		B	loc_800EB76
@ ---------------------------------------------------------------------------

loc_800EB70:				@ CODE XREF: sub_800EB68:loc_800EB76j
		STRB.W	R1, [R3],#1
		SUBS	R2, R2,	#1

loc_800EB76:				@ CODE XREF: sub_800EB68+6j
		BNE	loc_800EB70
		BX	LR
@ End of function sub_800EB68

@ ---------------------------------------------------------------------------
		.align 4

loc_800EB7C:				@ CODE XREF: ROM:0800EB28j
		LDR	R4, =(loc_8008F24+1)
		MOV	LR, R4
		BX	R4 @ loc_8008F24
@ ---------------------------------------------------------------------------
		.align 4
off_800EB84:	.long loc_8008F24+1	@ DATA XREF: ROM:loc_800EB7Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800EB88:				@ CODE XREF: sub_800C33C+Cp
		MOV	R12, R1
		UDIV.W	R1, R0,	R1
		MLS.W	R0, R12, R1, R0
		BX	LR
@ End of function sub_800EB88


@ =============== S U B	R O U T	I N E =======================================


sub_800EB94:				@ CODE XREF: sub_800B3B8+22p
		MOV	R12, R1
		SDIV.W	R1, R0,	R1
		MLS.W	R0, R12, R1, R0
		BX	LR
@ End of function sub_800EB94


@ =============== S U B	R O U T	I N E =======================================


sub_800EBA0:				@ CODE XREF: ROM:0800EC16p
					@ ROM:0800EC80p ...
		LDR	R0, =0x40022010
		LDR	R1, [R0]
		LSLS	R1, R1,	#0x18
		BPL	loc_800EBB2
		LDR	R1, =0x40022004
		LDR	R2, =0x45670123
		STR	R2, [R1]
		LDR	R2, =0xCDEF89AB
		STR	R2, [R1]

loc_800EBB2:				@ CODE XREF: sub_800EBA0+6j
		MOVS	R1, #0
		STR.W	R1, [R0],#0xC
		LDR	R0, [R0]
		LSLS	R0, R0,	#0x1D
		BMI	locret_800EBD0
		LDR	R0, =0x40003000
		LDR	R1, =0x5555
		STR.W	R1, [R0],#4
		MOVS	R1, #6
		STR.W	R1, [R0],#4
		LDR	R1, =0xFFF
		STR	R1, [R0]

locret_800EBD0:				@ CODE XREF: sub_800EBA0+1Cj
		BX	LR
@ End of function sub_800EBA0

@ ---------------------------------------------------------------------------
		.align 4
dword_800EBD4:	.long 0x40022004	@ DATA XREF: sub_800EBA0+8r
dword_800EBD8:	.long 0x5555		@ DATA XREF: sub_800EBA0+20r
dword_800EBDC:	.long 0xFFF		@ DATA XREF: sub_800EBA0+2Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800EBE0:				@ CODE XREF: ROM:0800ECF0p
		LDR	R0, =0x40022008
		LDR	R1, =0x45670123
		STR	R1, [R0]
		LDR	R1, =0xCDEF89AB
		STR	R1, [R0]
		BX	LR
@ End of function sub_800EBE0

@ ---------------------------------------------------------------------------
dword_800EBEC:	.long 0x40022008	@ DATA XREF: sub_800EBE0r
dword_800EBF0:	.long 0x45670123	@ DATA XREF: sub_800EBA0+Ar
					@ sub_800EBE0+2r
dword_800EBF4:	.long 0xCDEF89AB	@ DATA XREF: sub_800EBA0+Er
					@ sub_800EBE0+6r

@ =============== S U B	R O U T	I N E =======================================


sub_800EBF8:				@ CODE XREF: ROM:loc_800EC38p
					@ ROM:loc_800EC9Ap ...
		LDR	R0, =0x40003000
		LDR	R1, =0xAAAA
		STR	R1, [R0]
		BX	LR
@ End of function sub_800EBF8

@ ---------------------------------------------------------------------------
dword_800EC00:	.long 0xAAAA		@ DATA XREF: sub_800EBF8+2r
dword_800EC04:	.long 0x40003000	@ DATA XREF: sub_800EBA0+1Er
					@ sub_800EBF8r
@ ---------------------------------------------------------------------------
		PUSH	{R4-R7,LR}
		MOVS	R4, R1
		MOVS	R5, R0
		LSLS	R0, R5,	#0x16
		BNE	loc_800EC58
		LDR	R6, =0x40022010
		LDR	R7, =0x4002200C
		BL	sub_800EBA0
		B	loc_800EC24
@ ---------------------------------------------------------------------------

loc_800EC1C:				@ CODE XREF: ROM:0800EC4Ej
		LDR	R0, =0xFFFFFC00
		ADDS.W	R5, R5,	#0x400
		ADDS	R4, R4,	R0

loc_800EC24:				@ CODE XREF: ROM:0800EC1Aj
		CMP	R4, #1
		BLT	loc_800EC58
		MOVS	R0, #2
		STR	R0, [R6]
		LDR	R0, =0x40022014
		STR	R5, [R0]
		LDR	R0, [R6]
		ORRS.W	R0, R0,	#0x40
		STR	R0, [R6]

loc_800EC38:				@ CODE XREF: ROM:0800EC40j
		BL	sub_800EBF8
		LDR	R0, [R7]
		LSLS	R1, R0,	#0x1F
		BMI	loc_800EC38
		LDR	R1, [R6]
		MOVS	R2, #2
		BICS	R1, R2
		STR	R1, [R6]
		TST.W	R0, #0x14
		BEQ	loc_800EC1C
		MOVS	R0, #0x14
		STR	R0, [R7]
		MOVS	R0, #7
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800EC58:				@ CODE XREF: ROM:0800EC10j
					@ ROM:0800EC26j
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
dword_800EC5C:	.long 0xFFFFFC00	@ DATA XREF: ROM:loc_800EC1Cr
dword_800EC60:	.long 0x40022014	@ DATA XREF: ROM:0800EC2Cr
@ ---------------------------------------------------------------------------
		PUSH.W	{R4-R10,LR}
		MOVS	R6, R0
		LDR	R7, =0x4002200C
		MOVS	R4, R1
		MOVS	R5, R2
		ADDS	R5, R5,	#1
		BL	sub_800ED54
		BL	sub_800ED5C
		MOV	R8, R0
		MOVS	R0, #0
		MOV	R9, R0
		BL	sub_800EBA0
		LDR	R0, =0x40022010
		LSRS	R5, R5,	#1
		MOV	R10, R0

loc_800EC8A:				@ CODE XREF: ROM:0800ECC6j
		MOVS	R0, #1
		STR.W	R0, [R10]
		LDRH.W	R0, [R4],#2
		STRH.W	R0, [R6],#2
		B	loc_800EC9E
@ ---------------------------------------------------------------------------

loc_800EC9A:				@ CODE XREF: ROM:0800ECA2j
		BL	sub_800EBF8

loc_800EC9E:				@ CODE XREF: ROM:0800EC98j
		LDR	R0, [R7]
		LSLS	R0, R0,	#0x1F
		BMI	loc_800EC9A
		LDR.W	R0, [R10]
		MOVS	R1, #1
		BICS	R0, R1
		STR.W	R0, [R10]
		LDR	R0, [R7]
		TST.W	R0, #0x14
		BEQ	loc_800ECC4
		LDR	R0, [R7]
		ORRS.W	R0, R0,	#0x14
		STR	R0, [R7]
		MOVS	R0, #4
		MOV	R9, R0

loc_800ECC4:				@ CODE XREF: ROM:0800ECB6j
		SUBS	R5, R5,	#1
		BNE	loc_800EC8A
		MOV	R0, R8
		BL	sub_800ED64
		BL	sub_800ED6C
		MOV	R0, R9
		POP.W	{R4-R10,PC}
@ ---------------------------------------------------------------------------
		PUSH	{R4,LR}
		BL	sub_800ED54
		LDR	R0, =0x1FFFF800
		LDR	R1, =0x5AA5
		LDR	R0, [R0]
		UXTH	R0, R0
		CMP	R0, R1
		BNE	loc_800ED32
		LDR	R4, =0x40022010
		BL	sub_800EBA0
		BL	sub_800EBE0
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x200
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x20
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x40
		STR	R0, [R4]

loc_800ED0C:				@ CODE XREF: ROM:0800ED16j
		BL	sub_800EBF8
		LDR	R0, =0x4002200C
		LDR	R0, [R0]
		LSLS	R0, R0,	#0x1F
		BMI	loc_800ED0C
		LDR	R0, [R4]
		MOVS	R1, #0xFFFFFDFF
		ANDS	R1, R0
		STR	R1, [R4]
		LDR	R0, [R4]
		MOVS	R1, #0x10
		BICS	R0, R1
		STR	R0, [R4]
		LDR	R0, [R4]
		ORRS.W	R0, R0,	#0x80
		STR	R0, [R4]

loc_800ED32:				@ CODE XREF: ROM:0800ECE8j
		LDR	R0, =0x200001A1
		LDRB	R0, [R0]
		CBNZ	R0, locret_800ED3C
		BL	sub_800ED74

locret_800ED3C:				@ CODE XREF: ROM:0800ED36j
		POP	{R4,PC}
@ ---------------------------------------------------------------------------
		.align 0x10
dword_800ED40:	.long 0x1FFFF800	@ DATA XREF: ROM:0800ECDEr
dword_800ED44:	.long 0x5AA5		@ DATA XREF: ROM:0800ECE0r
dword_800ED48:	.long 0x200001A1	@ DATA XREF: ROM:loc_800ED32r
dword_800ED4C:	.long 0x40022010	@ DATA XREF: sub_800EBA0r
					@ ROM:0800EC12r ...
dword_800ED50:	.long 0x4002200C	@ DATA XREF: ROM:0800EC14r
					@ ROM:0800EC6Ar ...

@ =============== S U B	R O U T	I N E =======================================


sub_800ED54:				@ CODE XREF: ROM:0800EC72p
					@ ROM:0800ECDAp
		LDR	R3, =(sub_8007136+1)
		BX	R3 @ sub_8007136
@ End of function sub_800ED54

@ ---------------------------------------------------------------------------
off_800ED58:	.long sub_8007136+1	@ DATA XREF: sub_800ED54r

@ =============== S U B	R O U T	I N E =======================================


sub_800ED5C:				@ CODE XREF: ROM:0800EC76p
		LDR	R3, =(loc_8007404+1)
		BX	R3 @ loc_8007404
@ End of function sub_800ED5C

@ ---------------------------------------------------------------------------
off_800ED60:	.long loc_8007404+1	@ DATA XREF: sub_800ED5Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800ED64:				@ CODE XREF: ROM:0800ECCAp
		LDR	R3, =(sub_80073EC+1)
		BX	R3 @ sub_80073EC
@ End of function sub_800ED64

@ ---------------------------------------------------------------------------
off_800ED68:	.long sub_80073EC+1	@ DATA XREF: sub_800ED64r

@ =============== S U B	R O U T	I N E =======================================


sub_800ED6C:				@ CODE XREF: ROM:0800ECCEp
		LDR	R3, =(sub_8006A30+1)
		BX	R3 @ sub_8006A30
@ End of function sub_800ED6C

@ ---------------------------------------------------------------------------
off_800ED70:	.long sub_8006A30+1	@ DATA XREF: sub_800ED6Cr

@ =============== S U B	R O U T	I N E =======================================


sub_800ED74:				@ CODE XREF: ROM:0800ED38p
		LDR	R3, =(sub_800712A+1)
		BX	R3 @ sub_800712A
@ End of function sub_800ED74

@ ---------------------------------------------------------------------------
off_800ED78:	.long sub_800712A+1	@ DATA XREF: sub_800ED74r
		.byte 0xDF @ ß
		.byte 0xF
		.ds.b 2, 0
		.byte 0x4C @ L
		.ds.b 2, 0
		.byte 0x20
		.long 0x2000004C, 0x4C,	0x20000000, 0x80091A0, 0x1DC, 0x2000102C
		.long 0x8008FA0, 0xFF, 0xE000, 0xFFFFE0FF, 0xFFFF, 0xBB8
		.long 0x34333231, 0x3635, 0
		.long aSegger		@ "SEGGER"
		.long aJLink		@ "J-Link"
		.byte	 0
		.byte 0x40
		.ds.b 2, 0
		.ds.l 4, 0
		.byte	 0
		.byte 0x10
		.ds.b 2, 0
		.long 0
		.byte 0x80 @ 
		.byte 0x25
		.ds.b 2, 0
		.byte 0x66 @ f
		.byte 0x13
		.ds.b 2, 1
		.long 0x3C081, 0
		.byte 0xA5 @ ¥
		.ds.b 3, 0
		.long 0
		.byte 0x8D @ 
		.ds.b 3, 0
		.long 0
		.byte 0x81 @ 
		.byte 0xA9, 0xB1, 0x99
		.long 0xBB938BA3, 0xFFFFFFFF, 0x9EFFFFFF, 0xFFFFFFE7, 0xFFFFFFFF
		.long 0xFFFFEDB6, 0xFFFFFFFF, 0xA50000FF
		.ds.l 2, 0
		.ds.l 7, 0xFFFFFFFF
		.long 0
		.byte 0xF0 @ ð
		.ds.b 3, 0
		.byte 0x33 @ 3
		.byte 0x58, 0xEA, 0x88
		.long 0x466E614A, 0x614D6265, 0x72704172, 0x4A79614D, 0x754A6E75
		.long 0x6775416C, 0x4F706553, 0x6F4E7463, 0x63654476, 0x44AA20
		.long 1, 0xFFFF
		.ds.l 2, 0
@ ---------------------------------------------------------------------------
		CMP	R3, R10
		BX	R8
@ ---------------------------------------------------------------------------
		.byte 0x45 @ E
		.byte 0x52
		.ds.b 2, 0
		.byte 0x4A @ J
aLink:		.ascii "-Link"
		.byte 0
		.byte 0
		.long loc_80069CC+1
		.long loc_80069D0+1
		.long loc_800680C+1
		.long sub_8006980+1
		.long sub_80069B8+1
		.long sub_800681C+1
		.long sub_800691C+1
		.long sub_8006944+1
		.long sub_8006830+1
		.long sub_80068D8+1
		.long sub_8007C6C+1
		.long loc_8007CD0+1
		.long sub_8007CE0+1
		.long locret_8007D48+1
		.long loc_8007CCC+1
		.long loc_8007D4C+1
		.long loc_8007DA0+1
		.long loc_8007C3C+1
		.long sub_8007BF4+1
		.long sub_8007C30+1
		.long loc_8007C4C+1
		.long sub_8007C54+1
		.long loc_8007D98+1
		.long sub_8007D58+1
		.long locret_8007D9C+1
		.long locret_8007DA4+1
		.long 0
		.byte 0x4D @ M
aAintask:	.ascii "ainTask"
		.byte 0
		.ds.b 3, 0
		.long 0xFFFF, 0xEA00002E
		.ds.l 4, 0xE59FF014
		.long 0xFFFFFFFF
		.ds.l 2, 0xE59FF010
		.long 0x40008004, 0x40008008, 0x4000800C, 0x40008010, 0x20003878
		.long 0x4000801C
		.ds.l 2, 0xFFFFFFFF
		.ds.l 4, 0
		.byte 0x4A @ J
aLinkArmStr71_0:.ascii "-Link ARM-STR711 compiled Feb 19 2007 16:25:44"
		.byte 0
		.ds.l 0x10, 0
@ ---------------------------------------------------------------------------
		.code 32
		MOVS	R0, R0
		B	loc_800F200
@ ---------------------------------------------------------------------------
		.byte 0x1F
		.byte	 0
		.byte 0xC0 @ À
		.byte 0xE3 @ ã
		.byte 0x12
		.byte	 0
		.byte 0x80 @ 
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0xF0 @ ð
		.byte 0x21 @ !
		.byte 0xE1 @ á
		.byte 0x70 @ p
		.byte 0xD0 @ Ð
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte 0x1F
		.byte	 0
		.byte 0xC0 @ À
		.byte 0xE3 @ ã
		.byte 0x1F
		.byte	 0
		.byte 0x80 @ 
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0xF0 @ ð
		.byte 0x21 @ !
		.byte 0xE1 @ á
		.byte 0x64 @ d
		.byte 0xD0 @ Ð
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte 0x64 @ d
		.byte	 0
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte  0xF
		.byte 0xE0 @ à
		.byte 0xA0 @  
		.byte 0xE1 @ á
		.byte 0x10
		.byte 0xFF
		.byte 0x2F @ /
		.byte 0xE1 @ á
		.byte 0x5C @ \
		.byte 0x30 @ 0
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 0
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte 0x20
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xE0 @ à
		.byte 0xE3 @ ã
		.byte 0x40 @ @
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte  0xC
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte 0x1C
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.byte	 0
		.byte 0x40 @ @
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 8
		.byte 0x40 @ @
		.byte 0x83 @ 
		.byte 0xE5 @ å
		.long 0xE3A04000
@ ---------------------------------------------------------------------------
		ANDS	R0, R3
		B	loc_800EB42+2
@ ---------------------------------------------------------------------------
		MOVS	R0, #0x20
		B	loc_800F782
@ ---------------------------------------------------------------------------
		MOVS	R0, R0
		B	loc_800F786
@ ---------------------------------------------------------------------------
		.byte 0x60 @ `
		.byte 0x50 @ P
		.byte 0xA0 @  
		.byte 0xE3 @ ã
		.byte	 5
		.byte	 0
		.byte 0x83 @ 
		.byte 0xE7 @ ç
		.long 0xE2811004
@ ---------------------------------------------------------------------------
		STR	R4, [R0,R0]
		B	loc_800F560
@ ---------------------------------------------------------------------------
		MOVS	R0, #1
		B	locret_800F4FE
@ ---------------------------------------------------------------------------
		.byte 0xFA @ ú
		.byte 0xFF
		.byte 0xFF
		.byte 0x1A
		.byte 0x10
		.byte	 0
		.byte 0x9F @ 
		.byte 0xE5 @ å
		.byte 0x10
		.byte 0xFF
		.byte 0x2F @ /
		.byte 0xE1 @ á
		.byte	 0
		.byte 0x3C @ <
		.byte	 0
		.byte 0x20
		.byte 0xC0 @ À
		.byte 0x3B @ ;
		.byte	 0
		.byte 0x20
		.byte 0xA9 @ ©
		.byte 0xA3 @ £
		.byte	 0
		.byte 0x40 @ @
		.byte	 0
		.byte 0xF8 @ ø
		.byte 0xFF
		.byte 0xFF
		.byte 0x9C @ 
		.byte 0x81 @ 
		.byte	 0
		.byte 0x40 @ @
		.byte	 1
		.byte 0x20
		.byte 0x70 @ p
		.byte 0x47 @ G
		.byte 0x70 @ p
		.byte 0xB5 @ µ
		.byte  0xC
		.byte 0x4C @ L
		.byte  0xC
		.byte 0x4E @ N
		.byte 0x82 @ 
		.byte 0xB0 @ °
		.byte 0x25 @ %
		.byte	 0
		.byte 0x24 @ $
		.byte 0x1D
		.byte	 3
		.byte 0xE0 @ à
@ ---------------------------------------------------------------------------
		.code 16

loc_800F08A:				@ CODE XREF: ROM:0800F09Ej
		BL	0x8012378

loc_800F08E:				@ CODE XREF: ROM:0800F0A6j
		ADDS	R5, #0xC
		ADDS	R4, #0xC
		CMP	R5, R6
		BCS	loc_800F0A8

loc_800F096:				@ CODE XREF: ROM:0800F6F2j
		LDR	R1, [R4,#4]
		LDR	R0, [R4]
		LDR	R2, [R5]
		CMP	R1, R0
		BNE	loc_800F08A
		MOVS	R1, #0
		BL	0x8012390
		B	loc_800F08E
@ ---------------------------------------------------------------------------

loc_800F0A8:				@ CODE XREF: ROM:0800F094j
		ADD	SP, SP,	#8
		POP	{R4-R6}
		POP	{R0}
		BX	R0
@ ---------------------------------------------------------------------------
		.byte 0xC8 @ È
		.byte 0xB9 @ ¹
		.byte	 0
		.byte 0x40 @ @
		.byte 0xF8 @ ø
		.byte 0xB9 @ ¹
		.byte	 0
		.byte 0x40 @ @
		.byte	 1
		.byte 0xC0 @ À
		.byte 0x8F @ 
		.byte 0xE2 @ â
		.byte 0x1C
		.byte 0xFF
		.byte 0x2F @ /
		.byte 0xE1 @ á
		.long 0x4D054C04
@ ---------------------------------------------------------------------------
		.code 32
		LDR	R6, =0x40008161
		LDR	R7, =0x400081C9
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		CMP	R0, #0
		BEQ	loc_800F0E4
		MOV	LR, R7
		BX	R6
@ ---------------------------------------------------------------------------
		.byte 0x5D @ ]
		.byte 0x81 @ 
		.byte	 0
		.byte 0x40 @ @
		.byte 0xB1 @ ±
		.byte 0x81 @ 
		.byte	 0
		.byte 0x40 @ @
dword_800F0DC:	.long 0x40008161	@ DATA XREF: ROM:0800F0C4r
dword_800F0E0:	.long 0x400081C9	@ DATA XREF: ROM:0800F0C6r
@ ---------------------------------------------------------------------------
		.code 16

loc_800F0E4:				@ CODE XREF: ROM:0800F0CEj
		LDR	R4, =0x4000B3B9
		LDR	R5, =0x400081D3
		MOVS	R0, #0
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		LDR	R4, =0x4000B429
		LDR	R5, =0x4000B48D
		MOV	LR, R5
		BX	R4
@ ---------------------------------------------------------------------------
		.align 4
off_800F0F8:	.long 0x4000B3B9	@ DATA XREF: ROM:loc_800F0E4r
off_800F0FC:	.long 0x400081D3	@ DATA XREF: ROM:0800F0E6r
off_800F100:	.long 0x4000B429	@ DATA XREF: ROM:0800F0EEr
off_800F104:	.long 0x4000B48D	@ DATA XREF: ROM:0800F0F0r

@ =============== S U B	R O U T	I N E =======================================


sub_800F108:				@ CODE XREF: sub_800F224+46p
		MOVS	R3, #0
		STR	R3, [R0,#0xC]
		STR	R2, [R0,#0x14]
		STR	R1, [R0]
		ADDS	R1, R1,	R2
		STR	R1, [R0,#4]
		ADDS	R1, R1,	R2
		STR	R1, [R0,#8]
		BX	LR
@ End of function sub_800F108

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800F11C:				@ CODE XREF: sub_800F1C0+Ep
					@ ROM:0800F30Cp ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R7, R1
		LDR	R5, [R4,#0xC]
		LDR	R6, [R7,#4]
		LDR	R0, [R4,#0x14]
		LSLS	R0, R0,	#3
		ADDS	R1, R6,	R5
		CMP	R0, R1
		BCS	loc_800F134
		BL	0x8010874

loc_800F134:				@ CODE XREF: sub_800F11C+12j
		LDR	R7, [R7]
		MOVS	R3, R6
		MOVS	R2, R7
		LDR	R1, [R4,#0xC]
		LDR	R0, [R4]
		BL	0x80121B4
		MOVS	R3, R6
		ADDS	R0, R6,	#7
		LSRS	R0, R0,	#3
		ADDS	R2, R7,	R0
		LDR	R1, [R4,#0xC]
		LDR	R0, [R4,#8]
		BL	0x80121B4
		LDR	R0, [R4,#0xC]
		ADDS	R0, R0,	R6
		STR	R0, [R4,#0xC]
		MOVS	R0, R5
		POP	{R4-R7,PC}
@ End of function sub_800F11C

@ [00000002 BYTES: COLLAPSED FUNCTION nullsub_18. PRESS	CTRL-NUMPAD+ TO	EXPAND]
		.align 0x10

@ =============== S U B	R O U T	I N E =======================================


sub_800F160:				@ CODE XREF: ROM:0800F3ECp
					@ sub_800F52C+74p ...
		PUSH	{LR}
		LDR	R1, [R0,#0xC]
		ADDS	R1, R1,	#7
		LSRS	R3, R1,	#3
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R2, [R0,#4]
		LDR	R1, [R0,#8]
		LDR	R0, [R0]
		BL	0x80102B4
		POP	{PC}
@ End of function sub_800F160


@ =============== S U B	R O U T	I N E =======================================


sub_800F178:				@ CODE XREF: sub_800F1C0+1Ap
		PUSH	{LR}
		LDR	R1, [R0,#0xC]
		ADDS	R1, R1,	#7
		LSRS	R3, R1,	#3
		MOVS	R1, #0
		STR	R1, [R0,#0xC]
		LDR	R2, [R0,#4]
		LDR	R1, [R0,#8]
		LDR	R0, [R0]
		BL	0x80102B4
		CMP	R0, #0
		BNE	locret_800F196
		BL	0x8010234

locret_800F196:				@ CODE XREF: sub_800F178+18j
		POP	{PC}
@ End of function sub_800F178

@ ---------------------------------------------------------------------------
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		MOVS	R5, R1
		LDR	R6, =0x801

loc_800F1A0:				@ CODE XREF: ROM:0800F1B6j
		CMP	R5, R6
		BCC	loc_800F1A8
		SUBS	R7, R6,	#1
		B	loc_800F1AA
@ ---------------------------------------------------------------------------

loc_800F1A8:				@ CODE XREF: ROM:0800F1A2j
		MOVS	R7, R5

loc_800F1AA:				@ CODE XREF: ROM:0800F1A6j
		MOVS	R1, R7
		MOVS	R0, R4
		BL	0x8011AC0
		ADDS	R4, R4,	R7
		SUBS	R5, R5,	R7
		BNE	loc_800F1A0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_800F1BC:	.long 0x801		@ DATA XREF: ROM:0800F19Er

@ =============== S U B	R O U T	I N E =======================================


sub_800F1C0:				@ CODE XREF: sub_800F224+4Cp
					@ ROM:0800F6B4p ...
		PUSH	{R4-R7,LR}
		MOVS	R4, R0
		LDR	R5, =0x20002868
		LDR	R6, [R5]
		ADDS	R6, #0x64

loc_800F1CA:				@ CODE XREF: sub_800F1C0+58j
		LDR	R1, =0x200004AC
		MOVS	R0, R4
		BL	sub_800F11C
		LDR	R1, =0x2000008C
		LDRH	R1, [R1]
		ADDS	R7, R0,	R1
		MOVS	R0, R4
		BL	sub_800F178
		CMP	R0, #0
		BNE	locret_800F21C
		LSRS	R0, R7,	#3
		LDR	R1, [R4,#4]
		ADDS	R2, R1,	R0
		LDRB	R0, [R2]
		LSLS	R3, R7,	#0x1D
		LSRS	R3, R3,	#0x1D
		BEQ	loc_800F1FE
		LSRS	R0, R3
		MOVS	R1, R0
		LDRB	R0, [R2,#1]
		MOVS	R2, #8
		SUBS	R2, R2,	R3
		LSLS	R0, R2
		ORRS	R0, R1

loc_800F1FE:				@ CODE XREF: sub_800F1C0+2Ej
		MOVS	R1, #0x19

loc_800F200:				@ CODE XREF: ROM:0800EFDEj
		ANDS	R1, R0
		CMP	R1, #9
		BNE	loc_800F20A
		MOVS	R0, #0
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800F20A:				@ CODE XREF: sub_800F1C0+44j
		LSLS	R0, R0,	#0x1B
		BPL	loc_800F212
		MOVS	R0, #3
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800F212:				@ CODE XREF: sub_800F1C0+4Cj
		LDR	R0, [R5]
		SUBS	R0, R6,	R0
		CMP	R0, #1
		BGE	loc_800F1CA
		MOVS	R0, #2

locret_800F21C:				@ CODE XREF: sub_800F1C0+20j
		POP	{R4-R7,PC}
@ End of function sub_800F1C0

@ ---------------------------------------------------------------------------
		.align 0x10
dword_800F220:	.long 0x20002868	@ DATA XREF: sub_800F1C0+4r

@ =============== S U B	R O U T	I N E =======================================


sub_800F224:				@ CODE XREF: ROM:0800F3D4p
					@ ROM:0800F40Ap ...
		PUSH	{R4,LR}
		SUB	SP, SP,	#0x78
		MOVS	R4, R0
		BL	0x8010234
		CMP	R0, #0
		BNE	loc_800F274
		LDR	R0, [R4,#0x10]
		LSRS	R1, R0,	#3
		LDR	R2, [R4,#4]
		ADDS	R1, R2,	R1
		LDRB	R2, [R1]
		LSLS	R0, R0,	#0x1D
		LSRS	R0, R0,	#0x1D
		BEQ	loc_800F250
		LSRS	R2, R0
		MOVS	R3, R2
		LDRB	R2, [R1,#1]
		MOVS	R1, #8
		SUBS	R0, R1,	R0
		LSLS	R2, R0
		ORRS	R2, R3

loc_800F250:				@ CODE XREF: sub_800F224+1Cj
		MOVS	R0, #0x19
		ANDS	R0, R2
		CMP	R0, #9
		BNE	loc_800F25C
		MOVS	R0, #0
		B	loc_800F274
@ ---------------------------------------------------------------------------

loc_800F25C:				@ CODE XREF: sub_800F224+32j
		LSLS	R0, R2,	#0x1B
		BPL	loc_800F264
		MOVS	R0, #3
		B	loc_800F274
@ ---------------------------------------------------------------------------

loc_800F264:				@ CODE XREF: sub_800F224+3Aj
		MOVS	R2, #0x20
		ADD	R1, SP,	#0x18
		MOV	R0, SP
		BL	sub_800F108
		MOV	R0, SP
		BL	sub_800F1C0

loc_800F274:				@ CODE XREF: sub_800F224+Cj
					@ sub_800F224+36j ...
		ADD	SP, SP,	#0x78
		POP	{R4,PC}
@ End of function sub_800F224


@ =============== S U B	R O U T	I N E =======================================


sub_800F278:				@ CODE XREF: ROM:0800F48Cp
					@ ROM:0800F496p ...
		STR	R1, [R0]
		STR	R2, [R0,#4]
		ADDS	R2, R2,	#7
		ASRS	R0, R2,	#3
		LSLS	R0, R0,	#1
		ADDS	R0, R1,	R0
		BX	LR
@ End of function sub_800F278

@ ---------------------------------------------------------------------------
		.align 4

@ =============== S U B	R O U T	I N E =======================================


sub_800F288:				@ CODE XREF: ROM:0800F32Ep
					@ ROM:0800F374p ...
		PUSH	{LR}
		MOVS	R3, R2
		LSLS	R2, R3,	#0x1D
		LSRS	R2, R2,	#0x1D
		LSRS	R3, R3,	#3
		LDR	R0, [R0]
		ADDS	R0, R0,	R3
		BL	0x8012178
		POP	{PC}
@ End of function sub_800F288


@ =============== S U B	R O U T	I N E =======================================


sub_800F29C:				@ CODE XREF: ROM:0800F3C8p
		PUSH	{R4-R7,LR}
		MOVS	R4, R1
		MOVS	R5, R3
		LDR	R6, [R0]

loc_800F2A4:				@ CODE XREF: sub_800F29C+24j
		LDR	R1, [R4]
		ADDS	R4, R4,	#4
		LSRS	R0, R2,	#3
		ADDS	R6, R6,	R0
		LSLS	R7, R2,	#0x1D
		LSRS	R7, R7,	#0x1D
		MOVS	R2, R7
		MOVS	R0, R6
		BL	0x8012178
		LDR	R0, =0x200004D8
		LDR	R0, [R0]
		ADDS	R2, R7,	R0
		SUBS	R5, R5,	#1
		BNE	loc_800F2A4
		MOVS	R0, R4
		POP	{R4-R7,PC}
@ End of function sub_800F29C

@ ---------------------------------------------------------------------------
		.align 4
dword_800F2C8:	.long 0x200004D8	@ DATA XREF: sub_800F29C+1Cr
@ ---------------------------------------------------------------------------
		PUSH	{R0,R2,R4-R7,LR}
		SUB	SP, SP,	#0xC
		MOVS	R4, R1
		MOVS	R0, #0
		STR	R0, [SP,#4]
		STR	R0, [SP]

loc_800F2D8:				@ CODE XREF: ROM:0800F406j
		LDR	R0, [SP]
		MOVS	R1, #1
		ANDS	R1, R0
		MOVS	R0, #0x18
		MULS	R1, R0
		LDR	R0, =0x20000504
		ADDS	R5, R0,	R1
		CMP	R4, #0xE
		BCS	loc_800F2EE
		MOVS	R6, R4
		B	loc_800F2F0
@ ---------------------------------------------------------------------------

loc_800F2EE:				@ CODE XREF: ROM:0800F2E8j
		MOVS	R6, #0xE

loc_800F2F0:				@ CODE XREF: ROM:0800F2ECj
		LDR	R0, [SP,#0x10]
		LDR	R0, [R0]
		CMP	R0, R6
		BEQ	loc_800F3B8
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1F
		BPL	loc_800F302
		MOVS	R0, #0
		B	loc_800F304
@ ---------------------------------------------------------------------------

loc_800F302:				@ CODE XREF: ROM:0800F2FCj
		MOVS	R0, R6

loc_800F304:				@ CODE XREF: ROM:0800F300j
		LDR	R1, [SP,#0x10]
		STR	R0, [R1]
		LDR	R1, =0x200004CC
		MOVS	R0, R5
		BL	sub_800F11C
		MOVS	R7, R0
		MOVS	R0, #1
		LSLS	R0, R6
		SUBS	R0, R0,	#1
		LSLS	R0, R0,	#1
		STR	R0, [SP,#8]
		LDR	R1, =0xE8900000
		ADDS	R0, R0,	R1
		BL	0x8012144
		LDR	R1, =0x20000088
		LDRH	R1, [R1]
		ADDS	R2, R7,	R1
		MOVS	R1, R0
		MOVS	R0, R5
		BL	sub_800F288
		LDR	R1, =0x200004D4
		MOVS	R0, R5
		BL	sub_800F11C
		LDR	R1, =0x20000538
		LDR	R2, =0x20000086
		LDRH	R2, [R2]
		ADDS	R0, R0,	R2
		STR	R0, [R1]
		CMP	R6, #2
		BCC	loc_800F356
		SUBS	R7, R6,	#1

loc_800F34A:				@ CODE XREF: ROM:0800F354j
		LDR	R1, =0x200004D4
		MOVS	R0, R5
		BL	sub_800F11C
		SUBS	R7, R7,	#1
		BNE	loc_800F34A

loc_800F356:				@ CODE XREF: ROM:0800F346j
		LDR	R1, =0x200004DC
		MOVS	R0, R5
		BL	sub_800F11C
		MOVS	R7, R0
		LDR	R0, [SP,#8]
		LDR	R1, =0xE8A00000
		ADDS	R0, R0,	R1
		BL	0x8012144
		MOVS	R1, R0
		LDR	R0, =0x2000008A
		LDRH	R0, [R0]
		ADDS	R2, R7,	R0
		MOVS	R0, R5
		BL	sub_800F288
		LDR	R1, =0x200004AC
		MOVS	R0, R5
		BL	sub_800F11C
		LDR	R1, =0x2000008C
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [R5,#0x10]
		MOVS	R0, R5
		BL	nullsub_18
		CMP	R6, #0xE
		BNE	loc_800F3BE
		LDR	R0, [R5,#0xC]
		ADDS	R0, R0,	#7
		LSRS	R7, R0,	#3
		MOVS	R2, R7
		LDR	R1, [R5]
		LDR	R0, =0x2000051C
		LDR	R0, [R0]
		BL	0x8012264
		MOVS	R2, R7
		LDR	R1, [R5,#8]
		LDR	R0, =0x20000524
		LDR	R0, [R0]
		BL	0x8012264
		LDR	R0, =0x2000052C
		LDR	R1, [R5,#0x10]
		STR	R1, [R0]
		B	loc_800F3BE
@ ---------------------------------------------------------------------------

loc_800F3B8:				@ CODE XREF: ROM:0800F2F6j
		LDR	R0, =0x2000053C
		LDR	R0, [R0]
		STR	R0, [R5,#0xC]

loc_800F3BE:				@ CODE XREF: ROM:0800F390j
					@ ROM:0800F3B6j
		MOVS	R3, R6
		LDR	R0, =0x20000538
		LDR	R2, [R0]
		LDR	R1, [SP,#0xC]
		MOVS	R0, R5
		BL	sub_800F29C
		STR	R0, [SP,#0xC]
		LDR	R0, [SP,#4]
		CMP	R0, #0
		BEQ	loc_800F3E4
		BL	sub_800F224
		CMP	R0, #0
		BEQ	loc_800F3E4
		LDR	R1, =0x20000534
		ADDS	R4, #0xE

loc_800F3E0:				@ CODE XREF: ROM:0800F3F6j
		STR	R4, [R1]
		B	loc_800F416
@ ---------------------------------------------------------------------------

loc_800F3E4:				@ CODE XREF: ROM:0800F3D2j
					@ ROM:0800F3DAj
		LDR	R0, =0x2000053C
		LDR	R1, [R5,#0xC]
		STR	R1, [R0]
		MOVS	R0, R5
		BL	sub_800F160
		CMP	R0, #0
		BEQ	loc_800F3F8
		LDR	R1, =0x20000534
		B	loc_800F3E0
@ ---------------------------------------------------------------------------

loc_800F3F8:				@ CODE XREF: ROM:0800F3F2j
		SUBS	R4, R4,	R6
		LDR	R0, [SP]
		ADDS	R0, R0,	#1
		STR	R0, [SP]
		STR	R5, [SP,#4]
		CMP	R4, #0
		BEQ	loc_800F408
		B	loc_800F2D8
@ ---------------------------------------------------------------------------

loc_800F408:				@ CODE XREF: ROM:0800F404j
		MOVS	R0, R5
		BL	sub_800F224
		CMP	R0, #0
		BEQ	loc_800F416
		LDR	R1, =0x20000534
		STR	R6, [R1]

loc_800F416:				@ CODE XREF: ROM:0800F3E2j
					@ ROM:0800F410j
		ADD	SP, SP,	#0x14
		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------
		.align 4
dword_800F41C:	.long 0xE8900000	@ DATA XREF: ROM:0800F31Cr
dword_800F420:	.long 0x20000088	@ DATA XREF: ROM:0800F324r
dword_800F424:	.long 0x20000538	@ DATA XREF: ROM:0800F33Ar
					@ ROM:0800F3C0r
dword_800F428:	.long 0x20000086	@ DATA XREF: ROM:0800F33Cr
dword_800F42C:	.long 0xE8A00000	@ DATA XREF: ROM:0800F362r
dword_800F430:	.long 0x2000008A	@ DATA XREF: ROM:0800F36Cr
dword_800F434:	.long 0x2000051C	@ DATA XREF: ROM:0800F39Cr
dword_800F438:	.long 0x20000524	@ DATA XREF: ROM:0800F3A8r
dword_800F43C:	.long 0x2000052C	@ DATA XREF: ROM:0800F3B0r
dword_800F440:	.long 0x2000053C	@ DATA XREF: ROM:loc_800F3B8r
					@ ROM:loc_800F3E4r
dword_800F444:	.long 0x20000504	@ DATA XREF: ROM:0800F2E2r
dword_800F448:	.long 0x200004AC	@ DATA XREF: sub_800F1C0:loc_800F1CAr
					@ ROM:0800F378r
dword_800F44C:	.long 0x2000008C	@ DATA XREF: sub_800F1C0+12r
					@ ROM:0800F380r
dword_800F450:	.long 0x20000534	@ DATA XREF: ROM:0800F3DCr
					@ ROM:0800F3F4r ...
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		CMP	R0, #1
		BEQ	locret_800F4FE
		LDR	R4, =0x20000070
		CMP	R0, #0
		BNE	loc_800F464
		MOVS	R1, #0x24
		B	loc_800F46A
@ ---------------------------------------------------------------------------

loc_800F464:				@ CODE XREF: ROM:0800F45Ej
		CMP	R0, #2
		BNE	loc_800F470
		MOVS	R1, #0x32

loc_800F46A:				@ CODE XREF: ROM:0800F462j
		MOVS	R0, R4
		BL	0x8011650

loc_800F470:				@ CODE XREF: ROM:0800F466j
		LDRH	R0, [R4,#0x1E]
		LDR	R1, =0x401
		CMP	R0, R1
		BCC	loc_800F47C
		BL	0x8010874

loc_800F47C:				@ CODE XREF: ROM:0800F476j
		LDR	R5, =0x200000A4
		LDRH	R1, [R4,#0x1E]
		MOVS	R0, R5
		BL	0x8011650
		LDRH	R2, [R4]
		MOVS	R1, R5
		LDR	R0, =0x200004A4
		BL	sub_800F278
		MOVS	R1, R0
		LDRH	R2, [R4,#2]
		LDR	R0, =0x200004BC
		BL	sub_800F278
		LDRH	R2, [R4,#4]
		MOVS	R1, R0
		LDR	R0, =0x200004C4
		BL	sub_800F278
		LDRH	R2, [R4,#6]
		MOVS	R1, R0
		LDR	R0, =0x200004CC
		BL	sub_800F278
		LDRH	R2, [R4,#8]
		MOVS	R1, R0
		LDR	R0, =0x200004D4
		BL	sub_800F278
		LDRH	R2, [R4,#0xA]
		MOVS	R1, R0
		LDR	R0, =0x200004DC
		BL	sub_800F278
		LDRH	R2, [R4,#0xC]
		MOVS	R1, R0
		LDR	R0, =0x200004AC
		BL	sub_800F278
		LDRH	R2, [R4,#0xE]
		MOVS	R1, R0
		LDR	R0, =0x200004B4
		BL	sub_800F278
		LDRH	R2, [R4,#0x24]
		MOVS	R1, R0
		LDR	R0, =0x200004E4
		BL	sub_800F278
		LDRH	R2, [R4,#0x26]
		MOVS	R1, R0
		LDR	R0, =0x200004EC
		BL	sub_800F278
		LDRH	R2, [R4,#0x28]
		MOVS	R1, R0
		LDR	R0, =0x200004F4
		BL	sub_800F278
		LDRH	R2, [R4,#0x2A]
		MOVS	R1, R0
		LDR	R0, =0x200004FC
		BL	sub_800F278

locret_800F4FE:				@ CODE XREF: ROM:0800F056j
					@ ROM:0800F458j
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
dword_800F500:	.long 0x401		@ DATA XREF: ROM:0800F472r
dword_800F504:	.long 0x200000A4	@ DATA XREF: ROM:loc_800F47Cr
dword_800F508:	.long 0x20000070	@ DATA XREF: ROM:0800F45Ar
dword_800F50C:	.long 0x200004A4	@ DATA XREF: ROM:0800F48Ar
dword_800F510:	.long 0x200004BC	@ DATA XREF: ROM:0800F494r
dword_800F514:	.long 0x200004C4	@ DATA XREF: ROM:0800F49Er
dword_800F518:	.long 0x200004CC	@ DATA XREF: ROM:0800F308r
					@ ROM:0800F4A8r
dword_800F51C:	.long 0x200004D4	@ DATA XREF: ROM:0800F332r
					@ ROM:loc_800F34Ar ...
dword_800F520:	.long 0x200004DC	@ DATA XREF: ROM:loc_800F356r
					@ ROM:0800F4BCr
dword_800F524:	.long 0x200004AC	@ DATA XREF: ROM:0800F4C6r
dword_800F528:	.long 0x200004B4	@ DATA XREF: ROM:0800F4D0r

@ =============== S U B	R O U T	I N E =======================================


sub_800F52C:				@ CODE XREF: ROM:0800F6C4p
					@ ROM:0800F728p ...
		PUSH	{R4-R7,LR}
		SUB	SP, SP,	#4
		MOVS	R4, R0
		MOVS	R7, R2
		LDR	R5, =0x20000540
		CMP	R3, #0
		BNE	loc_800F59A
		LDR	R1, =0x200004EC
		BL	sub_800F11C
		MOVS	R6, R0
		MOVS	R0, #1
		LSLS	R0, R7
		LSLS	R0, R0,	#1
		LDR	R1, =0xE87FFFFE
		ADDS	R0, R0,	R1
		BL	0x8012144
		MOVS	R1, R0
		LDR	R0, =0x200000A0
		LDRH	R0, [R0]
		ADDS	R2, R6,	R0
		MOVS	R0, R4
		BL	sub_800F288
		LDR	R6, =0x200004F4

loc_800F560:				@ CODE XREF: ROM:0800F052j
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_800F11C
		LDR	R1, =0x2000009C
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [SP,#0]
		CMP	R7, #2
		BCC	loc_800F582
		SUBS	R7, R7,	#1

loc_800F576:				@ CODE XREF: sub_800F52C+54j
		MOVS	R1, R6
		MOVS	R0, R4
		BL	sub_800F11C
		SUBS	R7, R7,	#1
		BNE	loc_800F576

loc_800F582:				@ CODE XREF: sub_800F52C+46j
		LDR	R1, =0x200004FC
		MOVS	R0, R4
		BL	sub_800F11C
		MOVS	R0, R4
		BL	nullsub_18
		LDR	R0, [R4,#0xC]
		STR	R0, [R5]
		LDR	R0, [SP,#0]
		STR	R0, [R4,#0x10]
		B	loc_800F59E
@ ---------------------------------------------------------------------------

loc_800F59A:				@ CODE XREF: sub_800F52C+Cj
		LDR	R0, [R5]
		STR	R0, [R4,#0xC]

loc_800F59E:				@ CODE XREF: sub_800F52C+6Cj
		MOVS	R0, R4
		BL	sub_800F160
		CMP	R0, #0
		BNE	loc_800F5AC
		BL	0x8010234

loc_800F5AC:				@ CODE XREF: sub_800F52C+7Aj
		ADD	SP, SP,	#4
		POP	{R4-R7,PC}
@ End of function sub_800F52C

@ ---------------------------------------------------------------------------
dword_800F5B0:	.long 0x20000540	@ DATA XREF: sub_800F52C+8r
dword_800F5B4:	.long 0xE87FFFFE	@ DATA XREF: sub_800F52C+1Cr
dword_800F5B8:	.long 0x200000A0	@ DATA XREF: sub_800F52C+26r
dword_800F5BC:	.long 0x2000009C	@ DATA XREF: sub_800F52C+3Cr
dword_800F5C0:	.long 0x200004EC	@ DATA XREF: ROM:0800F4E4r
					@ sub_800F52C+Er
dword_800F5C4:	.long 0x200004F4	@ DATA XREF: ROM:0800F4EEr
					@ sub_800F52C+32r
dword_800F5C8:	.long 0x200004FC	@ DATA XREF: ROM:0800F4F8r
					@ sub_800F52C:loc_800F582r

@ =============== S U B	R O U T	I N E =======================================


sub_800F5CC:				@ CODE XREF: ROM:0800F6D2p
					@ ROM:0800F736p
		PUSH	{R0,R4-R7,LR}
		MOVS	R3, R2
		LDR	R2, [R0,#0x10]
		LDR	R0, loc_800F684
		LDRB	R0, [R0]
		CMP	R0, #0
		BEQ	loc_800F644
		CMP	R3, #0
		BEQ	loc_800F680
		MOVS	R4, #0xFF
		LDR	R5, =0x4000BA94

loc_800F5E2:				@ CODE XREF: sub_800F5CC+76j
		LSRS	R0, R2,	#3
		LDR	R6, [SP,#0]
		LDR	R6, [R6,#4]
		ADDS	R6, R6,	R0
		LSLS	R0, R2,	#0x1D
		LSRS	R0, R0,	#0x1D
		LSLS	R7, R6,	#0x1E
		LSRS	R7, R7,	#0x1B
		ADDS	R0, R0,	R7
		MOVS	R7, #3
		BICS	R6, R7
		LDR	R7, [R6]
		CMP	R0, #0
		BEQ	loc_800F610
		LSRS	R7, R0
		MOV	R12, R7
		LDR	R6, [R6,#4]
		MOVS	R7, #0x20
		SUBS	R0, R7,	R0
		LSLS	R6, R0
		MOV	R7, R12
		ORRS	R6, R7
		MOVS	R7, R6

loc_800F610:				@ CODE XREF: sub_800F5CC+30j
		LDR	R0, =0x200004F8
		LDR	R0, [R0]
		ADDS	R2, R2,	R0
		LSRS	R6, R7,	#8
		ANDS	R7, R4
		LDRB	R0, [R5,R7]
		LSLS	R7, R0,	#0x18
		MOVS	R0, #0xFF
		ANDS	R0, R6
		LDRB	R0, [R5,R0]
		LSLS	R0, R0,	#0x10
		ORRS	R0, R7
		LSRS	R6, R6,	#8
		MOVS	R7, R4
		ANDS	R7, R6
		LDRB	R7, [R5,R7]
		LSLS	R7, R7,	#8
		ORRS	R7, R0
		LSRS	R0, R6,	#8
		LDRB	R0, [R5,R0]
		ORRS	R0, R7
		STR	R0, [R1]
		ADDS	R1, R1,	#4
		SUBS	R3, R3,	#1
		BEQ	loc_800F680
		B	loc_800F5E2
@ ---------------------------------------------------------------------------

loc_800F644:				@ CODE XREF: sub_800F5CC+Cj
		CMP	R3, #0
		BEQ	loc_800F680

loc_800F648:				@ CODE XREF: sub_800F5CC+B2j
		LSRS	R0, R2,	#3
		LDR	R4, [SP,#0]
		LDR	R4, [R4,#4]
		ADDS	R0, R4,	R0
		LSLS	R4, R2,	#0x1D
		LSRS	R4, R4,	#0x1D
		LSLS	R5, R0,	#0x1E
		LSRS	R5, R5,	#0x1B
		ADDS	R4, R4,	R5
		MOVS	R5, #3
		BICS	R0, R5
		LDR	R5, [R0]
		CMP	R4, #0
		BEQ	loc_800F672
		LSRS	R5, R4
		MOVS	R6, R5
		LDR	R5, [R0,#4]
		MOVS	R0, #0x20
		SUBS	R0, R0,	R4
		LSLS	R5, R0
		ORRS	R5, R6

loc_800F672:				@ CODE XREF: sub_800F5CC+96j
		LDR	R0, =0x200004F8
		LDR	R0, [R0]
		ADDS	R2, R2,	R0
		STR	R5, [R1]
		ADDS	R1, R1,	#4
		SUBS	R3, R3,	#1
		BNE	loc_800F648

loc_800F680:				@ CODE XREF: sub_800F5CC+10j
					@ sub_800F5CC+74j ...
		ADD	SP, SP,	#4
@ End of function sub_800F5CC

		POP	{R4-R7,PC}
@ ---------------------------------------------------------------------------

loc_800F684:				@ DATA XREF: sub_800F5CC+6r
		LSLS	R0, R2,	#2
		MOVS	R0, #0
@ ---------------------------------------------------------------------------
dword_800F688:	.long 0x4000BA94	@ DATA XREF: sub_800F5CC+14r
dword_800F68C:	.long 0x200004F8, 0xB082B530 @ DATA XREF: sub_800F5CC:loc_800F610r
					@ sub_800F5CC:loc_800F672r
@ ---------------------------------------------------------------------------
		MOVS	R4, R0
		LDR	R5, =0
		LDR	R1, =0x200004E4
		MOVS	R0, R5
		BL	sub_800F11C
		LDR	R0, loc_800F6F0
		BL	0x8012144
		MOVS	R1, R0
		LDR	R0, =0x2000009E
		LDRH	R2, [R0]
		MOVS	R0, R5
		BL	sub_800F288
		MOVS	R0, R5
		BL	sub_800F1C0
		CMP	R0, #0
		BNE	loc_800F6EA
		MOVS	R3, #0
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800F52C
		CMP	R0, #0
		BNE	loc_800F6EA
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800F5CC
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1B
		LSRS	R0, R0,	#0x1B
		CMP	R0, #0x1F
		BEQ	loc_800F6E4
		MOVS	R0, #4
		B	loc_800F6EA
@ ---------------------------------------------------------------------------

loc_800F6E4:				@ CODE XREF: ROM:0800F6DEj
		LDR	R0, [SP,#4]
		STRB	R0, [R4]
		MOVS	R0, #0

loc_800F6EA:				@ CODE XREF: ROM:0800F6BAj
					@ ROM:0800F6CAj ...
		ADD	SP, SP,	#8
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
		NOP

loc_800F6F0:				@ DATA XREF: ROM:0800F6A0r
		MOVS	R0, #1
		B	loc_800F096
@ ---------------------------------------------------------------------------
		PUSH	{R4,R5,LR}
		SUB	SP, SP,	#8
		MOVS	R4, R0
		LDR	R5, =0
		LDR	R1, =0x200004E4
		MOVS	R0, R5
		BL	sub_800F11C
		LDR	R0, =0xE0D020B2
		BL	0x8012144
		MOVS	R1, R0
		LDR	R0, =0x2000009E
		LDRH	R2, [R0]
		MOVS	R0, R5
		BL	sub_800F288
		MOVS	R0, R5
		BL	sub_800F1C0
		CMP	R0, #0
		BNE	loc_800F754
		MOVS	R3, #0
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800F52C
		CMP	R0, #0
		BNE	loc_800F754
		MOVS	R2, #2
		MOV	R1, SP
		MOVS	R0, R5
		BL	sub_800F5CC
		LDR	R0, [SP]
		LSLS	R0, R0,	#0x1B
		LSRS	R0, R0,	#0x1B
		CMP	R0, #0x1F
		BEQ	loc_800F748
		MOVS	R0, #4
		B	loc_800F754
@ ---------------------------------------------------------------------------

loc_800F748:				@ CODE XREF: ROM:0800F742j
		LDR	R0, [SP,#4]
		STRB	R0, [R4]
		LDR	R0, [SP,#4]
		LSRS	R0, R0,	#8
		STRB	R0, [R4,#1]
		MOVS	R0, #0

loc_800F754:				@ CODE XREF: ROM:0800F71Ej
					@ ROM:0800F72Ej ...
		ADD	SP, SP,	#8
		POP	{R4,R5,PC}
@ ---------------------------------------------------------------------------
dword_800F758:	.long 0xE0D020B2	@ DATA XREF: ROM:0800F704r
dword_800F75C:	.long 0x200004E4	@ DATA XREF: ROM:0800F4DAr
					@ ROM:0800F698r ...
dword_800F760:	.long 0x2000009E	@ DATA XREF: ROM:0800F6A8r
					@ ROM:0800F70Cr
@ ---------------------------------------------------------------------------
		PUSH	{R0,R4-R7,LR}
		SUB	SP, SP,	#0x44
		MOVS	R4, R1
		MOVS	R5, #0
		CMP	R4, #0xD
		BCS	loc_800F774
		MOVS	R6, R4
		B	loc_800F776
@ ---------------------------------------------------------------------------

loc_800F774:				@ CODE XREF: ROM:0800F76Ej
		MOVS	R6, #0xD

loc_800F776:				@ CODE XREF: ROM:0800F772j
		LDR	R7, =0
		CMP	R5, #0
		BEQ	loc_800F786
		CMP	R6, #0xD
		BNE	loc_800F786
		MOVS	R0, #1

loc_800F782:				@ CODE XREF: ROM:0800F03Ej
		STR	R0, [SP]
		B	loc_800F7DA
@ ---------------------------------------------------------------------------

loc_800F786:				@ CODE XREF: ROM:0800F042j
					@ ROM:0800F77Aj ...
		MOVS	R0, #0
		STR	R0, [SP]
		LDR	R1, =0
		MOVS	R0, R7
		BL	sub_800F11C
		MOVS	R0, #1
		LSLS	R0, R6
		LSLS	R0, R0,	#2
		LDR	R1, =0
		ADDS	R0, R0,	R1
		BL	0x8012144
		LDR	R1, =0
		LDRH	R2, [R1]
		MOVS	R1, R0
		MOVS	R0, R7
		BL	sub_800F288
		LDR	R1, =0
		MOVS	R0, R7
		BL	sub_800F11C
		LDR	R1, =0
		LDRH	R1, [R1]
		ADDS	R0, R0,	R1
		STR	R0, [R7,#0x10]
		MOVS	R0, R7
		BL	nullsub_18
		LDR	R0, [R7,#0xC]
		STR	R0, [SP,#4]
		MOVS	R0, R7
		BL	sub_800F160
		CMP	R0, #0
		BNE	loc_800F84E
		MOVS	R0, R7
		BL	sub_800F224
		CMP	R0, #0
		BNE	loc_800F84E

loc_800F7DA:				@ CODE XREF: ROM:0800F784j
		LDR	R3, [SP]
		ADDS	R2, R6,	#1
		ADD	R1, SP,	#0xC
		MOVS	R0, R7
		ADDS	R0, #0x18
		BL	sub_800F52C
		CMP	R0, #0
		BNE	loc_800F84E
		CMP	R4, #0x1A
		BCC	loc_800F816
		LDR	R0, [SP,#4]
		STR	R0, [R7,#0xC]
		MOVS	R0, R7
		BL	sub_800F160
		CMP	R0, #0
		BNE	loc_800F84E
@ ---------------------------------------------------------------------------
word_800F7FE:	.short 0xB4AB		@ DATA XREF: sub_80001C4+4Ar
byte_800F800:	.byte 0			@ DATA XREF: sub_8005484o
					@ sub_8005490+Eo ...
byte_800F801:	.byte 0			@ DATA XREF: sub_800675Co
					@ sub_800675C+2r ...
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
unk_800F808:	.byte	 0		@ DATA XREF: sub_800675C:loc_800676Eo
					@ ROM:off_8006790o ...
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
@ ---------------------------------------------------------------------------

loc_800F816:				@ CODE XREF: ROM:0800F7EEj
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0

loc_800F84E:				@ CODE XREF: ROM:0800F7CEj
					@ ROM:0800F7D8j ...
		MOVS	R0, R0
		MOVS	R0, R0
		MOVS	R0, R0
@ ---------------------------------------------------------------------------
dword_800F854:	.long 0			@ DATA XREF: ROM:0800F798r
dword_800F858:	.long 0			@ DATA XREF: ROM:0800F7A0r
dword_800F85C:	.long 0			@ DATA XREF: ROM:0800F696r
					@ ROM:0800F6FAr ...
dword_800F860:	.long 0			@ DATA XREF: ROM:0800F78Ar
dword_800F864:	.long 0			@ DATA XREF: ROM:0800F7ACr
dword_800F868:	.long 0			@ DATA XREF: ROM:0800F7B4r
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
		.byte	 0
byte_800FC00:	.byte 0x30		@ DATA XREF: sub_800531Co
					@ sub_8005344+2o ...
		.byte 0x90 @ 
		.byte 0x32 @ 2
		.byte	 1
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
		.byte 0xFF
aRdiFlashdlFlas:.ascii "RDI,FlashDL,FlashBP,JFlash,GDBFull"
		.byte 0
		.byte 0xFF
		.byte 0x80 @ 
		.byte 0x20
		.byte 0x20
		.byte 0x20
		.byte 0x7B @ {
		.byte 0xE2 @ â
		.byte 0xB7 @ ·
		.byte 0xDD @ Ý
		.byte 0xC4 @ Ä
		.byte	 7
		.byte 0xC2 @ Â
		.byte  0xA

		.end
