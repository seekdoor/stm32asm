

@
@ +-------------------------------------------------------------------------+
@ |   This file	has been generated by The Interactive Disassembler (IDA)    |
@ |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
@ |			 License info: 48-B611-7234-BB			    |
@ |		Doskey Lee, Kingsoft Internet Security Software		    |
@ +-------------------------------------------------------------------------+
@
@ Input	MD5   :	7FC7F2BC6D05516A754C983CBA48BEAB
@ Input	CRC32 :	42D64505

@ File Name   :	F:\stm32fft\cr4_fft_64_stm32.o
@ Format      :	ELF for	ARM (Relocatable)
@
@ EABI version:	5
@
@ Source File :	'..\STM32F10x_FWLib\cr4_fft_64_stm32.s'

@ Processor	  : ARM
@ ARM architecture: ARMv7-M
@ Target assembler: GNU	assembler
@ Byte sex	  : Little endian
.syntax	unified

@ ===========================================================================

@ Segment type:	Pure code
		.text
		.code 16

@ =============== S U B	R O U T	I N E =======================================


		.globl cr4_fft_64_stm32
cr4_fft_64_stm32:
		PUSH.W	{R4-R11,LR}
		MOV.W	R12, #0
		MOV.W	R3, #0

loc_C:					@ CODE XREF: cr4_fft_64_stm32+9Aj
		ADD.W	LR, R1,	R12,LSR#26
		LDRSH.W	R5, [LR,#2]
		LDRSH.W	R4, [LR],#0x40
		LDRSH.W	R9, [LR,#2]
		LDRSH.W	R8, [LR],#0x40
		LDRSH.W	R7, [LR,#2]
		LDRSH.W	R6, [LR],#0x40
		LDRSH.W	R11, [LR,#2]
		LDRSH.W	R10, [LR],#0x40
		ADD	R8, R10
		ADD	R9, R11
		SUB.W	R10, R8, R10,LSL#1
		SUB.W	R11, R9, R11,LSL#1
		MOV.W	R4, R4,ASR#2
		MOV.W	R5, R5,ASR#2
		ADD.W	R4, R4,	R6,ASR#2
		ADD.W	R5, R5,	R7,ASR#2
		SUB.W	R6, R4,	R6,ASR#1
		SUB.W	R7, R5,	R7,ASR#1
		ADD.W	R4, R4,	R8,ASR#2
		ADD.W	R5, R5,	R9,ASR#2
		SUB.W	R8, R4,	R8,ASR#1
		SUB.W	R9, R5,	R9,ASR#1
		ADD.W	R6, R6,	R11,ASR#2
		SUB.W	R7, R7,	R10,ASR#2
		SUB.W	R11, R6, R11,ASR#1
		ADD.W	R10, R7, R10,ASR#1
		STRH	R5, [R0,#2]
		STRH.W	R4, [R0],#4
		STRH	R7, [R0,#2]
		STRH.W	R6, [R0],#4
		STRH.W	R9, [R0,#2]
		STRH.W	R8, [R0],#4
		STRH.W	R10, [R0,#2]
		STRH.W	R11, [R0],#4
		ADD.W	R3, R3,	#1
		RBIT.W	R12, R3
		CMP	R3, #0x10
		BNE	loc_C
		SUB.W	R1, R0,	R2,LSL#2
		MOV.W	R3, #0x10
		LSRS	R2, R2,	#4
		ADRL	R0, word_1DE

loc_AE:					@ CODE XREF: cr4_fft_64_stm32+1D6j
		PUSH	{R1,R2}
		ADD.W	R12, R3, R3,LSL#1
		ADD	R1, R12
		SUB.W	R2, R2,	#0x10000

loc_BA:					@ CODE XREF: cr4_fft_64_stm32+1CAj
		ADD.W	R2, R2,	R3,LSL#14

loc_BE:					@ CODE XREF: cr4_fft_64_stm32+1B4j
		LDRSH.W	R5, [R1,#2]
		LDRSH.W	R4, [R1]
		SUB.W	R1, R1,	R3
		LDRSH.W	R11, [R0,#(word_1E0 - 0x1DE)]
		LDRSH.W	R10, [R0]
		ADD.W	R0, R0,	#4
		SUB.W	LR, R5,	R4
		MUL.W	R12, LR, R11
		ADD.W	LR, R10, R11,LSL#1
		MLA.W	R11, R5, R10, R12
		MLA.W	R10, R4, LR, R12
		LDRSH.W	R5, [R1,#2]
		LDRSH.W	R4, [R1]
		SUB.W	R1, R1,	R3
		LDRSH.W	R9, [R0,#(word_1E4 - 0x1E2)]
		LDRSH.W	R8, [R0]
		ADD.W	R0, R0,	#4
		SUB.W	LR, R5,	R4
		MUL.W	R12, LR, R9
		ADD.W	LR, R8,	R9,LSL#1
		MLA.W	R9, R5,	R8, R12
		MLA.W	R8, R4,	LR, R12
		LDRSH.W	R5, [R1,#2]
		LDRSH.W	R4, [R1]
		SUB.W	R1, R1,	R3
		LDRSH.W	R7, [R0,#(word_1E8 - 0x1E6)]
		LDRSH.W	R6, [R0]
		ADD.W	R0, R0,	#4
		SUB.W	LR, R5,	R4
		MUL.W	R12, LR, R7
		ADD.W	LR, R6,	R7,LSL#1
		MLA.W	R7, R5,	R6, R12
		MLA.W	R6, R4,	LR, R12
		LDRSH.W	R5, [R1,#2]
		LDRSH.W	R4, [R1]
		MOV.W	R1, R1
		ADD	R8, R10
		ADD	R9, R11
		SUB.W	R10, R8, R10,LSL#1
		SUB.W	R11, R9, R11,LSL#1
		MOV.W	R4, R4,ASR#2
		MOV.W	R5, R5,ASR#2
		ADD.W	R4, R4,	R6,ASR#16
		ADD.W	R5, R5,	R7,ASR#16
		SUB.W	R6, R4,	R6,ASR#15
		SUB.W	R7, R5,	R7,ASR#15
		ADD.W	R4, R4,	R8,ASR#16
		ADD.W	R5, R5,	R9,ASR#16
		SUB.W	R8, R4,	R8,ASR#15
		SUB.W	R9, R5,	R9,ASR#15
		ADD.W	R6, R6,	R11,ASR#16
		SUB.W	R7, R7,	R10,ASR#16
		SUB.W	R11, R6, R11,ASR#15
		ADD.W	R10, R7, R10,ASR#15
		STRH	R5, [R1,#2]
		STRH	R4, [R1]
		ADD	R1, R3
		STRH	R7, [R1,#2]
		STRH	R6, [R1]
		ADD	R1, R3
		STRH.W	R9, [R1,#2]
		STRH.W	R8, [R1]
		ADD	R1, R3
		STRH.W	R10, [R1,#2]
		STRH.W	R11, [R1],#4
		SUBS.W	R2, R2,	#0x10000
		BGE	loc_BE
		ADD.W	R12, R3, R3,LSL#1
		ADD	R1, R12
		SUB.W	R2, R2,	#1
		MOVS.W	LR, R2,LSL#16
		IT ne
		SUBNE.W	R0, R0,	R12
		BNE.W	loc_BA
		POP	{R1,R2}
		MOV.W	R3, R3,LSL#2
		LSRS	R2, R2,	#2
		BNE.W	loc_AE
		POP.W	{R4-R11,PC}
@ End of function cr4_fft_64_stm32

@ ---------------------------------------------------------------------------
word_1DE:	.short 0x4000		@ DATA XREF: cr4_fft_64_stm32+A6o
					@ cr4_fft_64_stm32+CEr
word_1E0:	.short 0		@ DATA XREF: cr4_fft_64_stm32+CAr
word_1E2:	.short 0x4000		@ DATA XREF: cr4_fft_64_stm32+FAr
word_1E4:	.short 0		@ DATA XREF: cr4_fft_64_stm32+F6r
word_1E6:	.short 0x4000		@ DATA XREF: cr4_fft_64_stm32+126r
word_1E8:	.short 0		@ DATA XREF: cr4_fft_64_stm32+122r
		.short 0xDD5D
		.long 0x22A33B21, 0x187E, 0xA57E2D41, 0x2D41, 0xC0002D41
		.long 0xDD5D4000, 0xDD5DE782, 0xA57E3B21, 0x40002D41
		.ds.l 2, 0x40000000
		.long 0x2AAA0000, 0x396B1294, 0x32490646, 0x11A80C7C, 0x3249238E
		.long 0x22A30C7C, 0xF721187E, 0x2AAA3179, 0x11A81294, 0xDD5D238E
		.long 0x22A33B21, 0x187E, 0xC6952D41, 0x1A463FB1, 0xEE581E2B
		.long 0xB4BE3537, 0x11A83EC5, 0xDD5D238E, 0xA9633B21, 0x8DF3871
		.long 0xCDB7289A, 0xA57E3EC5, 0x2D41, 0xC0002D41, 0xA9634000
		.long 0xF7211E2B, 0xB4BE3179, 0xB4BE3EC5, 0xEE580C7C, 0xAC613537
		.long 0xC6953B21, 0xE5BAF9BA, 0xA73B3871, 0xDD5D3537, 0xDD5DE782
		.long 0xA57E3B21, 0xF7212D41, 0xD556D766, 0xA73B3D3F, 0x11A8238E
		.long 0xCDB7CAC9, 0xAC613EC5, 0x2AAA187E, 0xC695C2C1, 0xB4BE3FB1
@ ---------------------------------------------------------------------------
		LSRS	R4, R7,	#0x11

@ ===========================================================================

@ Segment type:	Absolute symbols
BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A_L22UL41UL21$X_L11$S22US41US21$IEEE1$IW$USESV6$_STKCKD$USESV7$_SHL$OSPACE$EBA8$REQ8$PRES8$EABIv2= 0

		.end
