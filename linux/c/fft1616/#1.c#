#include <stdio.h>
#define w0 0
#define w1 0.5411961
#define SIN_4PI_16 0.707106781186547460
#define SIN_6PI_16 0.923879532511286740
#define C_P_S_2PI_16 1.30656296487637660
#define C_M_S_2PI_16 0.54119610014619690
#define C_P_S_6PI_16 1.3065629648763766
#define C_M_S_6PI_16 -0.54119610014619690
void R16SRFFT(float input[8],float output[8 ] ) {
  float temp, out0, out1, out2, out3, out4, out5, out6, out7;                                  out0=input[0]+input[4]; 
                        
		      out2=input[2]+input[6];
		      out3=input[2]-input[6];
		      out4=input[1]+input[5];
		      out5=input[1]-input[5];      
		      out6=input[3]+input[7];                                               out7=input[3]-input[7];
			   out0=out0+out2;
					       
	
					       

}

void main() {
  float data[16];
  float output[16];
  float zero=0;1

  printf("\ntype 16 point input vector\n");
  scanf("%f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f",&data[0],&data[1],&data[2],&data[3],&data[4],&data[5],&data[6],&data[7],&data[8],&data[9],&data[10],&data[11],&data[12],&data[13],&data[14],&data[15]);
  
  R16SRFFT(data,output);
  printf("\nresult is:\n");
  printf("k,\t\tReal Part\t\tImaginary Part\n");
  printf("0\t\t%.9f\t\t%.9f\n",output[0],zero);
  printf("1\t\t%.9f\t\t%.9f\n",output[1],output[9]);
  printf("2\t\t%.9f\t\t%.9f\n",output[2],output[10]);
  printf("3\t\t%.9f\t\t%.9f\n",output[3],output[11]);
  printf("4\t\t%.9f\t\t%.9f\n",output[4],output[12]);
  printf("5\t\t%.9f\t\t%.9f\n",output[5],output[13]);
  printf("6\t\t%.9f\t\t%.9f\n",output[6],output[14]);
  printf("7\t\t%.9f\t\t%.9f\n",output[7],output[15]);
  printf("8\t\t%.9f\t\t%.9f\n",output[8],zero);
  printf("9\t\t%.9f\t\t%.9f\n",output[7],-output[15]);
  printf("10\t\t%.9f\t\t%.9f\n",output[6],-output[14]);
  printf("11\t\t%.9f\t\t%.9f\n",output[5],-output[13]);
  printf("12\t\t%.9f\t\t%.9f\n",output[4],-output[12]);
  printf("13\t\t%.9f\t\t%.9f\n",output[3],-output[11]);
  printf("14\t\t%.9f\t\t%.9f\n",output[2],-output[9]);
  printf("15\t\t%.9f\t\t%.9f\n",output[1],-output[8]);
}
