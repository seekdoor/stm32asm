<html>
<head>
  <title>Программирование - Быстрое преобразование Фурье</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
  <link rel="stylesheet" type="text/css" href="../css/styles2.css">
</head>
<body>
 <div id=hdr>
  <div id=psi></div>
  <div id=l1></div><div id=l2></div><div id=l3></div><div id=l4></div>
  <div id=capt2>Преобразование для N=PQ</div>
 </div>
<div id=body>
  <div id=mi><a href="fftc.htm">[предыдущая глава]</a>&nbsp;&nbsp;<a href="fft.htm">[оглавление]</a>&nbsp;&nbsp;<a href="ffte.htm">[следующая глава]</a></div>
<div id=text>

<p>

Пусть <nobr>N = PQ</nobr>. Этот представляет собой более общий случай, чем рассмотренный в предыдущей главе. Теперь не требуется, чтобы 
<nobr>P</nobr> или <nobr>Q</nobr> были степенями двойки. 

<p>

Напомним основную формулу:

<p>

<img align="absmiddle" src="image206.gif">&nbsp;&nbsp;&nbsp;&nbsp;(1).

<p>

Рассмотрим формулу:

<p>

<img align="absmiddle" src="image205.gif">&nbsp;&nbsp;&nbsp;&nbsp;(41).

<p>

Эта формула эквивалентна формуле (1). В самом деле:

<p>

<img align="absmiddle" src="image207.gif">

<p>

Двойная сумма по <nobr>pQ + q</nobr> - это все равно, что одинарная сумма по <nobr>n</nobr>, просто
порядок слагаемых другой.

<p>

Вернемся к формуле (41). В скобках там стоит обычное прямое БПФ, только не для всех <nobr>x<sub><sub>n</sub></sub></nobr>,
а для последовательности из <nobr>P</nobr> штук, взятых с шагом <nobr>Q</nobr>. Количество последовательностей равно <nobr>Q</nobr>.
Элементы последовательности выбираются формулой <nobr>x<sub><sub>pQ + q</sub></sub></nobr>, где <nobr>p</nobr> - номер элемента,
<nobr>q</nobr> - номер последовательности.

<p>

Пусть мы умеем вычислять БПФ для <nobr>P</nobr> элементов за время <nobr>Z(P)</nobr>. Нам понадобится вычислить <nobr>Q</nobr>
таких БПФ, на что потратим время <nobr>O(QZ(P))</nobr>. Тем самым мы получим все множители в скобках из формулы (41).
После этого надо будет вычислить <nobr>N</nobr> элементов <nobr>X<sub><sub>k</sub></sub></nobr>, каждый из которых
потребует <nobr>O(Q)</nobr> действий, итого потребуется еще <nobr>O(NQ)</nobr> действий, а в сумме - 
<nobr>O(QZ(P) + QN)</nobr> действий.

<p>

В предыдущем алгоритме <nobr>P</nobr> - было степенью двойки, а для такого числа элементов мы умеем вычислять
БПФ за <nobr>O(Plog<sub><sub>2</sub></sub>P)</nobr> шагов, т.е. <nobr>Z(P) = Plog<sub><sub>2</sub></sub>P</nobr>, и получится 
<nobr>O(QZ(P) + QN) =</nobr><nobr> O(QPlog<sub><sub>2</sub></sub>P + QN) =</nobr><nobr> O(Nlog<sub><sub>2</sub></sub>P + N<sup>2</sup>/P)</nobr> действий.
Тем самым, мы несколько более простым путем получим ту же оценку сложности алгоритма.

<p>

Если <nobr>P</nobr> - не степень двойки, мы умеем вычислять ПФ за <nobr>O(P<sup>2</sup>)</nobr> шагов, 
т.е. <nobr>Z(P) = P<sup>2</sup></nobr>, и получится 
<nobr>O(QZ(P) + QN) =</nobr><nobr> O(QP<sup>2</sup> + QN) =</nobr><nobr> O(N<sup>2</sup>/Q + N<sup>2</sup>/P)</nobr> действий.
Если <nobr>P</nobr> и <nobr>Q</nobr> достаточно велики, это лучше, чем <nobr> O(N<sup>2</sup>)</nobr>.

<p>

  <div id=mi>
   <hr size=1 noshade color=black>
   <a href="fftc.htm">[предыдущая глава]</a>&nbsp;&nbsp;<a href="fft.htm">[оглавление]</a>&nbsp;&nbsp;<a href="ffte.htm">[следующая глава]</a>
   <hr size=1 noshade color=black>
  </div>
 </div>
</body>
</html>
