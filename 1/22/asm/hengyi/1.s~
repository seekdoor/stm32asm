	 .thumb                 
         .syntax unified
.section .data
lcdchushihuamabiao: .byte 0x40,0x00,0x20,0x0e,0x50,0x00,0x30,0x77,0x40,0x1d,0x40,0x9f
         .equ STACKINIT, 0x20005000
	.equ lcdyanshi,  800000
	.equ lcdwr,      0x422201a8
	.equ lcdrd,      0x422201ac
	.equ lcdcs,      0x422201b0
	.equ lcdrs,      0x4221818c
	.equ lcdrst,     0x42218190
	
	.equ lcddx,      0x422181a0
	.equ lcdshuju,   0x22006000
.section .text
vectors:        
        .word STACKINIT         
        .word _start + 1        
        .word _nmi_handler + 1  
        .word _hard_fault  + 1  
        .word _memory_fault + 1 
        .word _bus_fault + 1    
        .word _usage_fault + 1 
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0 
	.word 0
	.word _dingshiqi + 1
_start:
	mov r0, # 0
	mov r1, # 0
	mov r2, # 0
	mov r3, # 0
	mov r4, # 0
	mov r5, # 0
	mov r6, # 0 
	mov r7, # 0
	mov r8, # 0
	mov r9, # 0
shizhong:
	ldr r0, = 0x40021000
	ldr r1, = 0x14D83
	str r1, [r0]
gsszbz: 
	ldr r2, [r0]
	ldr r1, = 0x20000
	tst r1, r2           @高速时钟标志位           
	bne rccchushihua
	b gsszbz
rccchushihua: 
	ldr r0, = 0x40022000
	mov r1, # 0x00000032
	str r1, [r0]           @FLASH缓冲 缓冲开启 
	ldr r0, = 0x40021004
	ldr r1, = 0x1D8400
	str r1, [r0]
	ldr r0, = 0x40021000
	ldr r1, = 0x1033D03
	str r1, [r0]
chaxun:
	ldr r2, [r0]
	ldr r1, = 0x2000000
	tst r1, r2
	bne rccgg
	b chaxun
rccgg:
	ldr r0, = 0x40021004
	ldr r1, = 0x1D8402
	str r1, [r0]
rccapb2enr:
	ldr r0, = 0x40021018
	mov r1, # 0x1d
	str r1, [r0]
	
        ldr r0, = 0x40010004 @ AFIO_MAPR
	ldr r1, = 0x02000000
	str r1, [r0]
ioshezhi:
	ldr r0, = 0x40010800
	ldr r1, = 0x24444444
	str r1, [r0, # 4]
	ldr r0, = 0x40010c00
	ldr r1, = 0x44433444
	str r1, [r0]
	ldr r1, = 0x33333333
	str r1, [r0, # 4]
	ldr r0, = 0x40011000
	ldr r1, = 0x44433344
	str r1, [r0, # 4]
	ldr r0, = lcdrst
	mov r1, # 0
	str r1, [r0]
	ldr r2, = lcdyanshi
lcdyanshi6:
	subs r2, # 1
	bne lcdyanshi6
	mov r1, # 1
	str r1, [r0]
	ldr r2, = lcdyanshi
lcdyanshi7:
	subs r2, # 1
	bne lcdyanshi7
	ldr r0, = lcdchushihuamabiao
lcdchushihua:
	ldr r2, = 0x20000300
	ldrb r1, [r0], # 1
	cmp r1, # 0xff
	beq tiaochulcdchushihua
	strb r1, [r2]
	bl lcdxiedizhi
	ldrb r1, [r0], # 1
	cmp r1, # 0xff
	beq tiaochulcdchushihua
	strb r1, [r2]
	bl lcdxieshuju
	b lcdchushihua

tiaochulcdchushihua:
	
	b tiaochulcdchushihua
	
lcdxiedizhi:
	push {r0-r8, lr}
	ldr r0, = lcdrd
	mov r1, # 1
	str r1, [r0]
	ldr r8, = lcdshuju
	ldmia r8!, {r0-r7}
	ldr r8, = lcddx
	stmia r8!, {r0-r7}
	ldr r0, = lcdcs
	mov r2, # 0
	str r2, [r0]
	ldr r1, = lcdrs
	mov r3, # 1
	str r3, [r1]
	ldr r4, = lcdwr
	str r2, [r4]
	mov r3, r3
	mov r3, r3
	mov r3, r3
	mov r3, r3
	str r3, [r4]
	
	pop {r0-r8, pc}

lcdxieshuju:
	        push {r0-r8, lr}
		ldr r0, = lcdrd
		mov r1, # 1
		str r1, [r0]
	        ldr r8, = lcdshuju
	        ldmia r8!, {r0-r7}
	        ldr r8, = lcddx
	        stmia r8!, {r0-r7}
	        ldr r0, = lcdcs
	        mov r2, # 0
	        str r2, [r0]
	        ldr r1, = lcdrs
		str r2, [r1]
		ldr r4, = lcdwr
		str r2, [r4]
	        ldr r5, = lcdyanshi
lcdyanshi4:
	        subs r5, # 1
	        bne lcdyanshi4
		mov r3, # 1
		str r3, [r4]
		str r3, [r1]
		str r3, [r0]
	        pop {r0-r8, pc}
	
	
_nmi_handler:
	bx lr
_hard_fault:
	bx lr
_memory_fault:
	bx lr
_bus_fault:
	bx lr
_usage_fault:
	bx lr
_dingshiqi:
	bx lr

	
	
	
